{
  "api/ApiGateway.Configuration.html": {
    "href": "api/ApiGateway.Configuration.html",
    "title": "Class Configuration | ELibrary",
    "keywords": "Class Configuration Namespace ApiGateway Assembly ApiGateway.dll public class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties USE_CORS public static string USE_CORS { get; } Property Value string"
  },
  "api/ApiGateway.Middlewares.TokenFromQueryMiddleware.html": {
    "href": "api/ApiGateway.Middlewares.TokenFromQueryMiddleware.html",
    "title": "Class TokenFromQueryMiddleware | ELibrary",
    "keywords": "Class TokenFromQueryMiddleware Namespace ApiGateway.Middlewares Assembly ApiGateway.dll public class TokenFromQueryMiddleware Inheritance object TokenFromQueryMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenFromQueryMiddleware(RequestDelegate) public TokenFromQueryMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods Invoke(HttpContext) public Task Invoke(HttpContext context) Parameters context HttpContext Returns Task"
  },
  "api/ApiGateway.Middlewares.html": {
    "href": "api/ApiGateway.Middlewares.html",
    "title": "Namespace ApiGateway.Middlewares | ELibrary",
    "keywords": "Namespace ApiGateway.Middlewares Classes TokenFromQueryMiddleware"
  },
  "api/ApiGateway.Utility.html": {
    "href": "api/ApiGateway.Utility.html",
    "title": "Class Utility | ELibrary",
    "keywords": "Class Utility Namespace ApiGateway Assembly ApiGateway.dll public static class Utility Inheritance object Utility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MergeJsonFiles(string[], string) public static void MergeJsonFiles(string[] filePaths, string outputPath) Parameters filePaths string[] outputPath string"
  },
  "api/ApiGateway.html": {
    "href": "api/ApiGateway.html",
    "title": "Namespace ApiGateway | ELibrary",
    "keywords": "Namespace ApiGateway Classes Configuration Utility"
  },
  "api/Authentication.CustomAuthExtension.html": {
    "href": "api/Authentication.CustomAuthExtension.html",
    "title": "Class CustomAuthExtension | ELibrary",
    "keywords": "Class CustomAuthExtension Namespace Authentication Assembly Authentication.dll public static class CustomAuthExtension Inheritance object CustomAuthExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCustomAuthentication(IServiceCollection, JwtSettings) public static IServiceCollection AddCustomAuthentication(this IServiceCollection services, JwtSettings jwtSettings) Parameters services IServiceCollection jwtSettings JwtSettings Returns IServiceCollection ConfigureIdentityServices(IServiceCollection, IConfiguration) public static IServiceCollection ConfigureIdentityServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection UseIdentity(IApplicationBuilder) public static IApplicationBuilder UseIdentity(this IApplicationBuilder app) Parameters app IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/Authentication.Identity.Policy.html": {
    "href": "api/Authentication.Identity.Policy.html",
    "title": "Class Policy | ELibrary",
    "keywords": "Class Policy Namespace Authentication.Identity Assembly Authentication.dll public static class Policy Inheritance object Policy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields REQUIRE_ADMIN_ROLE public const string REQUIRE_ADMIN_ROLE = \"RequireAdminRole\" Field Value string REQUIRE_CLIENT_ROLE public const string REQUIRE_CLIENT_ROLE = \"RequireClientRole\" Field Value string REQUIRE_MANAGER_ROLE public const string REQUIRE_MANAGER_ROLE = \"RequireManagerRole\" Field Value string"
  },
  "api/Authentication.Identity.Roles.html": {
    "href": "api/Authentication.Identity.Roles.html",
    "title": "Class Roles | ELibrary",
    "keywords": "Class Roles Namespace Authentication.Identity Assembly Authentication.dll public static class Roles Inheritance object Roles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ADMINISTRATOR public const string ADMINISTRATOR = \"Administrator\" Field Value string CLIENT public const string CLIENT = \"Client\" Field Value string MANAGER public const string MANAGER = \"Manager\" Field Value string"
  },
  "api/Authentication.Identity.html": {
    "href": "api/Authentication.Identity.html",
    "title": "Namespace Authentication.Identity | ELibrary",
    "keywords": "Namespace Authentication.Identity Classes Policy Roles"
  },
  "api/Authentication.Models.AccessTokenData.html": {
    "href": "api/Authentication.Models.AccessTokenData.html",
    "title": "Class AccessTokenData | ELibrary",
    "keywords": "Class AccessTokenData Namespace Authentication.Models Assembly Authentication.dll public class AccessTokenData Inheritance object AccessTokenData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessToken public string? AccessToken { get; set; } Property Value string RefreshToken public string? RefreshToken { get; set; } Property Value string RefreshTokenExpiryDate public DateTime RefreshTokenExpiryDate { get; set; } Property Value DateTime"
  },
  "api/Authentication.Models.html": {
    "href": "api/Authentication.Models.html",
    "title": "Namespace Authentication.Models | ELibrary",
    "keywords": "Namespace Authentication.Models Classes AccessTokenData"
  },
  "api/Authentication.OAuth.Google.GoogleOAuthSettings.html": {
    "href": "api/Authentication.OAuth.Google.GoogleOAuthSettings.html",
    "title": "Class GoogleOAuthSettings | ELibrary",
    "keywords": "Class GoogleOAuthSettings Namespace Authentication.OAuth.Google Assembly Authentication.dll public class GoogleOAuthSettings Inheritance object GoogleOAuthSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClientId public required string ClientId { get; set; } Property Value string ClientSecret public required string ClientSecret { get; set; } Property Value string Scope public required string Scope { get; set; } Property Value string"
  },
  "api/Authentication.OAuth.Google.GoogleOAuthTokenResult.html": {
    "href": "api/Authentication.OAuth.Google.GoogleOAuthTokenResult.html",
    "title": "Class GoogleOAuthTokenResult | ELibrary",
    "keywords": "Class GoogleOAuthTokenResult Namespace Authentication.OAuth.Google Assembly Authentication.dll public class GoogleOAuthTokenResult Inheritance object GoogleOAuthTokenResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessToken [JsonProperty(\"access_token\")] public string? AccessToken { get; set; } Property Value string ExpiresInSeconds [JsonProperty(\"expires_in\")] public double ExpiresInSeconds { get; set; } Property Value double IdToken [JsonProperty(\"id_token\")] public string? IdToken { get; set; } Property Value string RefreshToken [JsonProperty(\"refresh_token\")] public string? RefreshToken { get; set; } Property Value string Scope [JsonProperty(\"scope\")] public string? Scope { get; set; } Property Value string TokenType [JsonProperty(\"token_type\")] public string? TokenType { get; set; } Property Value string"
  },
  "api/Authentication.OAuth.Google.GoogleTokenValidator.html": {
    "href": "api/Authentication.OAuth.Google.GoogleTokenValidator.html",
    "title": "Class GoogleTokenValidator | ELibrary",
    "keywords": "Class GoogleTokenValidator Namespace Authentication.OAuth.Google Assembly Authentication.dll public class GoogleTokenValidator : IGoogleTokenValidator Inheritance object GoogleTokenValidator Implements IGoogleTokenValidator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateAsync(string, ValidationSettings) public Task<GoogleJsonWebSignature.Payload> ValidateAsync(string idToken, GoogleJsonWebSignature.ValidationSettings settings) Parameters idToken string settings GoogleJsonWebSignature.ValidationSettings Returns Task<GoogleJsonWebSignature.Payload>"
  },
  "api/Authentication.OAuth.Google.IGoogleTokenValidator.html": {
    "href": "api/Authentication.OAuth.Google.IGoogleTokenValidator.html",
    "title": "Interface IGoogleTokenValidator | ELibrary",
    "keywords": "Interface IGoogleTokenValidator Namespace Authentication.OAuth.Google Assembly Authentication.dll public interface IGoogleTokenValidator Methods ValidateAsync(string, ValidationSettings) Task<GoogleJsonWebSignature.Payload> ValidateAsync(string idToken, GoogleJsonWebSignature.ValidationSettings settings) Parameters idToken string settings GoogleJsonWebSignature.ValidationSettings Returns Task<GoogleJsonWebSignature.Payload>"
  },
  "api/Authentication.OAuth.Google.html": {
    "href": "api/Authentication.OAuth.Google.html",
    "title": "Namespace Authentication.OAuth.Google | ELibrary",
    "keywords": "Namespace Authentication.OAuth.Google Classes GoogleOAuthSettings GoogleOAuthTokenResult GoogleTokenValidator Interfaces IGoogleTokenValidator"
  },
  "api/Authentication.OAuth.OAuthLoginProvider.html": {
    "href": "api/Authentication.OAuth.OAuthLoginProvider.html",
    "title": "Enum OAuthLoginProvider | ELibrary",
    "keywords": "Enum OAuthLoginProvider Namespace Authentication.OAuth Assembly Authentication.dll public enum OAuthLoginProvider Fields Google = 0"
  },
  "api/Authentication.OAuth.html": {
    "href": "api/Authentication.OAuth.html",
    "title": "Namespace Authentication.OAuth | ELibrary",
    "keywords": "Namespace Authentication.OAuth Enums OAuthLoginProvider"
  },
  "api/Authentication.Token.ITokenHandler.html": {
    "href": "api/Authentication.Token.ITokenHandler.html",
    "title": "Interface ITokenHandler | ELibrary",
    "keywords": "Interface ITokenHandler Namespace Authentication.Token Assembly Authentication.dll public interface ITokenHandler Methods CreateToken<TKey>(IdentityUser<TKey>, IList<string>) AccessTokenData CreateToken<TKey>(IdentityUser<TKey> user, IList<string> roles) where TKey : IEquatable<TKey> Parameters user IdentityUser<TKey> roles IList<string> Returns AccessTokenData Type Parameters TKey GetPrincipalFromExpiredToken(string) ClaimsPrincipal GetPrincipalFromExpiredToken(string token) Parameters token string Returns ClaimsPrincipal"
  },
  "api/Authentication.Token.JwtConfiguration.html": {
    "href": "api/Authentication.Token.JwtConfiguration.html",
    "title": "Class JwtConfiguration | ELibrary",
    "keywords": "Class JwtConfiguration Namespace Authentication.Token Assembly Authentication.dll public static class JwtConfiguration Inheritance object JwtConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties JWT_SETTINGS_AUDIENCE public static string JWT_SETTINGS_AUDIENCE { get; } Property Value string JWT_SETTINGS_EXPIRY_IN_MINUTES public static string JWT_SETTINGS_EXPIRY_IN_MINUTES { get; } Property Value string JWT_SETTINGS_ISSUER public static string JWT_SETTINGS_ISSUER { get; } Property Value string JWT_SETTINGS_KEY public static string JWT_SETTINGS_KEY { get; } Property Value string"
  },
  "api/Authentication.Token.JwtHandler.html": {
    "href": "api/Authentication.Token.JwtHandler.html",
    "title": "Class JwtHandler | ELibrary",
    "keywords": "Class JwtHandler Namespace Authentication.Token Assembly Authentication.dll public class JwtHandler : ITokenHandler Inheritance object JwtHandler Implements ITokenHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JwtHandler(JwtSettings) public JwtHandler(JwtSettings jwtSettings) Parameters jwtSettings JwtSettings Methods CreateToken<TKey>(IdentityUser<TKey>, IList<string>) public AccessTokenData CreateToken<TKey>(IdentityUser<TKey> user, IList<string> roles) where TKey : IEquatable<TKey> Parameters user IdentityUser<TKey> roles IList<string> Returns AccessTokenData Type Parameters TKey GetPrincipalFromExpiredToken(string) public ClaimsPrincipal GetPrincipalFromExpiredToken(string token) Parameters token string Returns ClaimsPrincipal"
  },
  "api/Authentication.Token.JwtSettings.html": {
    "href": "api/Authentication.Token.JwtSettings.html",
    "title": "Class JwtSettings | ELibrary",
    "keywords": "Class JwtSettings Namespace Authentication.Token Assembly Authentication.dll public class JwtSettings Inheritance object JwtSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Audience public required string Audience { get; set; } Property Value string ExpiryInMinutes public required double ExpiryInMinutes { get; set; } Property Value double Issuer public required string Issuer { get; set; } Property Value string Key public required string Key { get; set; } Property Value string"
  },
  "api/Authentication.Token.html": {
    "href": "api/Authentication.Token.html",
    "title": "Namespace Authentication.Token | ELibrary",
    "keywords": "Namespace Authentication.Token Classes JwtConfiguration JwtHandler JwtSettings Interfaces ITokenHandler"
  },
  "api/Authentication.html": {
    "href": "api/Authentication.html",
    "title": "Namespace Authentication | ELibrary",
    "keywords": "Namespace Authentication Classes CustomAuthExtension"
  },
  "api/Caching.CacheExtensions.html": {
    "href": "api/Caching.CacheExtensions.html",
    "title": "Class CacheExtensions | ELibrary",
    "keywords": "Class CacheExtensions Namespace Caching Assembly Caching.dll public static class CacheExtensions Inheritance object CacheExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetOutputCachePolicy(OutputCacheOptions, string, TimeSpan?, bool, Type?) public static void SetOutputCachePolicy(this OutputCacheOptions options, string name, TimeSpan? duration = null, bool useAuthId = false, Type? type = null) Parameters options OutputCacheOptions name string duration TimeSpan? useAuthId bool type Type TryGetAsync<T>(ICacheService, string, CancellationToken) public static ValueTask<T?> TryGetAsync<T>(this ICacheService service, string key, CancellationToken cancellationToken) Parameters service ICacheService key string cancellationToken CancellationToken Returns ValueTask<T> Type Parameters T TrySetAsync<T>(ICacheService, string, T, TimeSpan, CancellationToken) public static Task<bool> TrySetAsync<T>(this ICacheService service, string key, T value, TimeSpan duration, CancellationToken cancellationToken) Parameters service ICacheService key string value T duration TimeSpan cancellationToken CancellationToken Returns Task<bool> Type Parameters T"
  },
  "api/Caching.Helpers.CachingHelper.html": {
    "href": "api/Caching.Helpers.CachingHelper.html",
    "title": "Class CachingHelper | ELibrary",
    "keywords": "Class CachingHelper Namespace Caching.Helpers Assembly Caching.dll public class CachingHelper : ICachingHelper Inheritance object CachingHelper Implements ICachingHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCacheKey(string, HttpContext) public string GetCacheKey(string prefix, HttpContext context) Parameters prefix string context HttpContext Returns string"
  },
  "api/Caching.Helpers.ICachingHelper.html": {
    "href": "api/Caching.Helpers.ICachingHelper.html",
    "title": "Interface ICachingHelper | ELibrary",
    "keywords": "Interface ICachingHelper Namespace Caching.Helpers Assembly Caching.dll public interface ICachingHelper Methods GetCacheKey(string, HttpContext) string GetCacheKey(string prefix, HttpContext context) Parameters prefix string context HttpContext Returns string"
  },
  "api/Caching.Helpers.html": {
    "href": "api/Caching.Helpers.html",
    "title": "Namespace Caching.Helpers | ELibrary",
    "keywords": "Namespace Caching.Helpers Classes CachingHelper Interfaces ICachingHelper"
  },
  "api/Caching.OutputCachePolicy.html": {
    "href": "api/Caching.OutputCachePolicy.html",
    "title": "Class OutputCachePolicy | ELibrary",
    "keywords": "Class OutputCachePolicy Namespace Caching Assembly Caching.dll public sealed class OutputCachePolicy : IOutputCachePolicy Inheritance object OutputCachePolicy Implements IOutputCachePolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors OutputCachePolicy(TimeSpan?, bool, params string[]) public OutputCachePolicy(TimeSpan? duration = null, bool useAuthenticationId = false, params string[] propertyNamesToCacheBy) Parameters duration TimeSpan? useAuthenticationId bool propertyNamesToCacheBy string[] Methods CacheRequestAsync(OutputCacheContext, CancellationToken) public ValueTask CacheRequestAsync(OutputCacheContext context, CancellationToken cancellationToken) Parameters context OutputCacheContext cancellationToken CancellationToken Returns ValueTask ServeFromCacheAsync(OutputCacheContext, CancellationToken) public ValueTask ServeFromCacheAsync(OutputCacheContext context, CancellationToken cancellationToken) Parameters context OutputCacheContext cancellationToken CancellationToken Returns ValueTask ServeResponseAsync(OutputCacheContext, CancellationToken) public ValueTask ServeResponseAsync(OutputCacheContext context, CancellationToken cancellationToken) Parameters context OutputCacheContext cancellationToken CancellationToken Returns ValueTask"
  },
  "api/Caching.ServiceCollectionExtensions.html": {
    "href": "api/Caching.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace Caching Assembly Caching.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCachingHelper(IServiceCollection) public static IServiceCollection AddCachingHelper(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection"
  },
  "api/Caching.Services.ICacheService.html": {
    "href": "api/Caching.Services.ICacheService.html",
    "title": "Interface ICacheService | ELibrary",
    "keywords": "Interface ICacheService Namespace Caching.Services Assembly Caching.dll public interface ICacheService Extension Methods CacheExtensions.TryGetAsync<T>(ICacheService, string, CancellationToken) CacheExtensions.TrySetAsync<T>(ICacheService, string, T, TimeSpan, CancellationToken) Methods GetAsync(string, CancellationToken) ValueTask<string?> GetAsync(string key, CancellationToken cancellationToken) Parameters key string cancellationToken CancellationToken Returns ValueTask<string> RemoveKeyAsync(string, CancellationToken) ValueTask<bool> RemoveKeyAsync(string key, CancellationToken cancellationToken) Parameters key string cancellationToken CancellationToken Returns ValueTask<bool> SetAsync(string, string, TimeSpan, CancellationToken) ValueTask<bool> SetAsync(string key, string value, TimeSpan duration, CancellationToken cancellationToken) Parameters key string value string duration TimeSpan cancellationToken CancellationToken Returns ValueTask<bool>"
  },
  "api/Caching.Services.InMemoryCacheService.html": {
    "href": "api/Caching.Services.InMemoryCacheService.html",
    "title": "Class InMemoryCacheService | ELibrary",
    "keywords": "Class InMemoryCacheService Namespace Caching.Services Assembly Caching.dll public class InMemoryCacheService : ICacheService Inheritance object InMemoryCacheService Implements ICacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CacheExtensions.TryGetAsync<T>(ICacheService, string, CancellationToken) CacheExtensions.TrySetAsync<T>(ICacheService, string, T, TimeSpan, CancellationToken) Constructors InMemoryCacheService(IMemoryCache, ILogger<InMemoryCacheService>) public InMemoryCacheService(IMemoryCache memoryCache, ILogger<InMemoryCacheService> logger) Parameters memoryCache IMemoryCache logger ILogger<InMemoryCacheService> Methods GetAsync(string, CancellationToken) public ValueTask<string?> GetAsync(string key, CancellationToken cancellationToken) Parameters key string cancellationToken CancellationToken Returns ValueTask<string> RemoveKeyAsync(string, CancellationToken) public ValueTask<bool> RemoveKeyAsync(string key, CancellationToken cancellationToken) Parameters key string cancellationToken CancellationToken Returns ValueTask<bool> SetAsync(string, string, TimeSpan, CancellationToken) public ValueTask<bool> SetAsync(string key, string value, TimeSpan duration, CancellationToken cancellationToken) Parameters key string value string duration TimeSpan cancellationToken CancellationToken Returns ValueTask<bool>"
  },
  "api/Caching.Services.html": {
    "href": "api/Caching.Services.html",
    "title": "Namespace Caching.Services | ELibrary",
    "keywords": "Namespace Caching.Services Classes InMemoryCacheService Interfaces ICacheService"
  },
  "api/Caching.html": {
    "href": "api/Caching.html",
    "title": "Namespace Caching | ELibrary",
    "keywords": "Namespace Caching Classes CacheExtensions OutputCachePolicy ServiceCollectionExtensions"
  },
  "api/DatabaseControl.ApplicationBuilderExtensions.html": {
    "href": "api/DatabaseControl.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions | ELibrary",
    "keywords": "Class ApplicationBuilderExtensions Namespace DatabaseControl Assembly DatabaseControl.dll public static class ApplicationBuilderExtensions Inheritance object ApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureDatabaseAsync<TContext>(IApplicationBuilder, CancellationToken) public static Task<IApplicationBuilder> ConfigureDatabaseAsync<TContext>(this IApplicationBuilder builder, CancellationToken cancellationToken) where TContext : DbContext Parameters builder IApplicationBuilder cancellationToken CancellationToken Returns Task<IApplicationBuilder> Type Parameters TContext"
  },
  "api/DatabaseControl.DatabaseConfiguration.html": {
    "href": "api/DatabaseControl.DatabaseConfiguration.html",
    "title": "Class DatabaseConfiguration | ELibrary",
    "keywords": "Class DatabaseConfiguration Namespace DatabaseControl Assembly DatabaseControl.dll public static class DatabaseConfiguration Inheritance object DatabaseConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties REPOSITORY_RESILIENCE_PIPELINE public static string REPOSITORY_RESILIENCE_PIPELINE { get; } Property Value string"
  },
  "api/DatabaseControl.ServiceCollectionExtensions.html": {
    "href": "api/DatabaseControl.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace DatabaseControl Assembly DatabaseControl.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddDbContextFactory<Context>(IServiceCollection, string, string?, Action<NpgsqlDbContextOptionsBuilder>?, Action<DbContextOptionsBuilder>?) public static IServiceCollection AddDbContextFactory<Context>(this IServiceCollection services, string connectionString, string? migrationAssembly = null, Action<NpgsqlDbContextOptionsBuilder>? dbAdditionalConfig = null, Action<DbContextOptionsBuilder>? additionalConfig = null) where Context : DbContext Parameters services IServiceCollection connectionString string migrationAssembly string dbAdditionalConfig Action<NpgsqlDbContextOptionsBuilder> additionalConfig Action<DbContextOptionsBuilder> Returns IServiceCollection Type Parameters Context AddRepositoryWithResilience<Context>(IServiceCollection, IConfiguration) public static IServiceCollection AddRepositoryWithResilience<Context>(this IServiceCollection services, IConfiguration configuration) where Context : DbContext Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection Type Parameters Context"
  },
  "api/DatabaseControl.html": {
    "href": "api/DatabaseControl.html",
    "title": "Namespace DatabaseControl | ELibrary",
    "keywords": "Namespace DatabaseControl Classes ApplicationBuilderExtensions DatabaseConfiguration ServiceCollectionExtensions"
  },
  "api/EventSourcing.EventDispatcher.html": {
    "href": "api/EventSourcing.EventDispatcher.html",
    "title": "Class EventDispatcher | ELibrary",
    "keywords": "Class EventDispatcher Namespace EventSourcing Assembly EventSourcing.dll public class EventDispatcher : IEventDispatcher Inheritance object EventDispatcher Implements IEventDispatcher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EventDispatcher(IServiceProvider) public EventDispatcher(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods DispatchAsync<TEvent>(TEvent, CancellationToken) public Task DispatchAsync<TEvent>(TEvent @event, CancellationToken cancellationToken) Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/EventSourcing.IEventDispatcher.html": {
    "href": "api/EventSourcing.IEventDispatcher.html",
    "title": "Interface IEventDispatcher | ELibrary",
    "keywords": "Interface IEventDispatcher Namespace EventSourcing Assembly EventSourcing.dll public interface IEventDispatcher Methods DispatchAsync<TEvent>(TEvent, CancellationToken) Task DispatchAsync<TEvent>(TEvent @event, CancellationToken cancellationToken) Parameters event TEvent cancellationToken CancellationToken Returns Task Type Parameters TEvent"
  },
  "api/EventSourcing.IEventHandler-1.html": {
    "href": "api/EventSourcing.IEventHandler-1.html",
    "title": "Interface IEventHandler<TEvent> | ELibrary",
    "keywords": "Interface IEventHandler<TEvent> Namespace EventSourcing Assembly EventSourcing.dll public interface IEventHandler<TEvent> Type Parameters TEvent Methods HandleAsync(TEvent, CancellationToken) Task HandleAsync(TEvent @event, CancellationToken cancellationToken) Parameters event TEvent cancellationToken CancellationToken Returns Task"
  },
  "api/EventSourcing.html": {
    "href": "api/EventSourcing.html",
    "title": "Namespace EventSourcing | ELibrary",
    "keywords": "Namespace EventSourcing Classes EventDispatcher Interfaces IEventDispatcher IEventHandler<TEvent>"
  },
  "api/ExceptionHandling.AuthorizationException.html": {
    "href": "api/ExceptionHandling.AuthorizationException.html",
    "title": "Class AuthorizationException | ELibrary",
    "keywords": "Class AuthorizationException Namespace ExceptionHandling Assembly ExceptionHandling.dll public class AuthorizationException : Exception, ISerializable Inheritance object Exception AuthorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AuthorizationException(IEnumerable<string>) public AuthorizationException(IEnumerable<string> errors) Parameters errors IEnumerable<string> AuthorizationException(string) public AuthorizationException(string error) Parameters error string Properties Errors public IEnumerable<string> Errors { get; } Property Value IEnumerable<string> Methods ToString() Creates and returns a string representation of the current exception. public override string ToString() Returns string A string representation of the current exception."
  },
  "api/ExceptionHandling.ExceptionMiddleware.html": {
    "href": "api/ExceptionHandling.ExceptionMiddleware.html",
    "title": "Class ExceptionMiddleware | ELibrary",
    "keywords": "Class ExceptionMiddleware Namespace ExceptionHandling Assembly ExceptionHandling.dll public class ExceptionMiddleware Inheritance object ExceptionMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExceptionMiddleware(RequestDelegate, ILogger<ExceptionMiddleware>) public ExceptionMiddleware(RequestDelegate next, ILogger<ExceptionMiddleware> logger) Parameters next RequestDelegate logger ILogger<ExceptionMiddleware> Methods InvokeAsync(HttpContext) public Task InvokeAsync(HttpContext httpContext) Parameters httpContext HttpContext Returns Task"
  },
  "api/ExceptionHandling.ExceptionMiddlewareExtensions.html": {
    "href": "api/ExceptionHandling.ExceptionMiddlewareExtensions.html",
    "title": "Class ExceptionMiddlewareExtensions | ELibrary",
    "keywords": "Class ExceptionMiddlewareExtensions Namespace ExceptionHandling Assembly ExceptionHandling.dll public static class ExceptionMiddlewareExtensions Inheritance object ExceptionMiddlewareExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UseExceptionMiddleware(IApplicationBuilder) public static IApplicationBuilder UseExceptionMiddleware(this IApplicationBuilder builder) Parameters builder IApplicationBuilder Returns IApplicationBuilder"
  },
  "api/ExceptionHandling.ResponseError.html": {
    "href": "api/ExceptionHandling.ResponseError.html",
    "title": "Class ResponseError | ELibrary",
    "keywords": "Class ResponseError Namespace ExceptionHandling Assembly ExceptionHandling.dll public class ResponseError Inheritance object ResponseError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Messages public string[]? Messages { get; set; } Property Value string[] StatusCode public string? StatusCode { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/ExceptionHandling.ServiceCollectionExtensions.html": {
    "href": "api/ExceptionHandling.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace ExceptionHandling Assembly ExceptionHandling.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureCustomInvalidModelStateResponseControllers(IServiceCollection) public static IServiceCollection ConfigureCustomInvalidModelStateResponseControllers(this IServiceCollection services) Parameters services IServiceCollection Returns IServiceCollection"
  },
  "api/ExceptionHandling.html": {
    "href": "api/ExceptionHandling.html",
    "title": "Namespace ExceptionHandling | ELibrary",
    "keywords": "Namespace ExceptionHandling Classes AuthorizationException ExceptionMiddleware ExceptionMiddlewareExtensions ResponseError ServiceCollectionExtensions"
  },
  "api/LibraryApi.AutoMapperProfile.html": {
    "href": "api/LibraryApi.AutoMapperProfile.html",
    "title": "Class AutoMapperProfile | ELibrary",
    "keywords": "Class AutoMapperProfile Namespace LibraryApi Assembly LibraryApi.dll public class AutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile AutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AutoMapperProfile() public AutoMapperProfile()"
  },
  "api/LibraryApi.Configuration.html": {
    "href": "api/LibraryApi.Configuration.html",
    "title": "Class Configuration | ELibrary",
    "keywords": "Class Configuration Namespace LibraryApi Assembly LibraryApi.dll public static class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EF_CREATE_DATABASE public static string EF_CREATE_DATABASE { get; } Property Value string LIBRARY_DATABASE_CONNECTION_STRING public static string LIBRARY_DATABASE_CONNECTION_STRING { get; } Property Value string"
  },
  "api/LibraryApi.Controllers.AuthorController.html": {
    "href": "api/LibraryApi.Controllers.AuthorController.html",
    "title": "Class AuthorController | ELibrary",
    "keywords": "Class AuthorController Namespace LibraryApi.Controllers Assembly LibraryApi.dll [Authorize] [Route(\"author\")] [ApiController] public class AuthorController : BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest> Inheritance object ControllerBase BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest> AuthorController Inherited Members BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.entityService BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.mapper BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.GetById(int, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.GetByIds(GetByIdsRequest, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.GetPaginated(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.GetItemTotalAmount(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.Create(CreateAuthorRequest, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.Update(UpdateAuthorRequest, CancellationToken) BaseLibraryEntityController<Author, AuthorResponse, CreateAuthorRequest, AuthorResponse, UpdateAuthorRequest, AuthorResponse, LibraryFilterRequest>.DeleteById(int, CancellationToken) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthorController(ILibraryEntityService<Author>, IMapper) public AuthorController(ILibraryEntityService<Author> entityService, IMapper mapper) Parameters entityService ILibraryEntityService<Author> mapper IMapper"
  },
  "api/LibraryApi.Controllers.BaseLibraryEntityController-7.html": {
    "href": "api/LibraryApi.Controllers.BaseLibraryEntityController-7.html",
    "title": "Class BaseLibraryEntityController<TEntity, TGetResponse, TCreateRequest, TCreateResponse, TUpdateRequest, TUpdateResponse, TFilterRequest> | ELibrary",
    "keywords": "Class BaseLibraryEntityController<TEntity, TGetResponse, TCreateRequest, TCreateResponse, TUpdateRequest, TUpdateResponse, TFilterRequest> Namespace LibraryApi.Controllers Assembly LibraryApi.dll [Authorize] [ApiController] public abstract class BaseLibraryEntityController<TEntity, TGetResponse, TCreateRequest, TCreateResponse, TUpdateRequest, TUpdateResponse, TFilterRequest> : ControllerBase where TEntity : BaseLibraryEntity where TFilterRequest : LibraryFilterRequest Type Parameters TEntity TGetResponse TCreateRequest TCreateResponse TUpdateRequest TUpdateResponse TFilterRequest Inheritance object ControllerBase BaseLibraryEntityController<TEntity, TGetResponse, TCreateRequest, TCreateResponse, TUpdateRequest, TUpdateResponse, TFilterRequest> Derived AuthorController BookController GenreController PublisherController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseLibraryEntityController(ILibraryEntityService<TEntity>, IMapper) protected BaseLibraryEntityController(ILibraryEntityService<TEntity> entityService, IMapper mapper) Parameters entityService ILibraryEntityService<TEntity> mapper IMapper Fields entityService protected readonly ILibraryEntityService<TEntity> entityService Field Value ILibraryEntityService<TEntity> mapper protected readonly IMapper mapper Field Value IMapper Methods Create(TCreateRequest, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpPost] public virtual Task<ActionResult<TCreateResponse>> Create(TCreateRequest request, CancellationToken cancellationToken) Parameters request TCreateRequest cancellationToken CancellationToken Returns Task<ActionResult<TCreateResponse>> DeleteById(int, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpDelete(\"{id}\")] public virtual Task<IActionResult> DeleteById(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<IActionResult> GetById(int, CancellationToken) [HttpGet(\"{id}\")] [AllowAnonymous] [OutputCache(PolicyName = \"BasePolicy\", Duration = 10)] public virtual Task<ActionResult<TGetResponse>> GetById(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<ActionResult<TGetResponse>> GetByIds(GetByIdsRequest, CancellationToken) [HttpPost(\"ids\")] [AllowAnonymous] [OutputCache(PolicyName = \"CacheByIds\")] public virtual Task<ActionResult<IEnumerable<TGetResponse>>> GetByIds(GetByIdsRequest request, CancellationToken cancellationToken) Parameters request GetByIdsRequest cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<TGetResponse>>> GetItemTotalAmount(TFilterRequest, CancellationToken) [AllowAnonymous] [HttpPost(\"amount\")] [OutputCache(PolicyName = \"CacheByFilter\")] public virtual Task<ActionResult<int>> GetItemTotalAmount(TFilterRequest request, CancellationToken cancellationToken) Parameters request TFilterRequest cancellationToken CancellationToken Returns Task<ActionResult<int>> GetPaginated(TFilterRequest, CancellationToken) [AllowAnonymous] [HttpPost(\"pagination\")] [OutputCache(PolicyName = \"CacheByFilter\")] public virtual Task<ActionResult<IEnumerable<TGetResponse>>> GetPaginated(TFilterRequest request, CancellationToken cancellationToken) Parameters request TFilterRequest cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<TGetResponse>>> Update(TUpdateRequest, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpPut] public virtual Task<ActionResult<TUpdateResponse>> Update(TUpdateRequest request, CancellationToken cancellationToken) Parameters request TUpdateRequest cancellationToken CancellationToken Returns Task<ActionResult<TUpdateResponse>>"
  },
  "api/LibraryApi.Controllers.BookController.html": {
    "href": "api/LibraryApi.Controllers.BookController.html",
    "title": "Class BookController | ELibrary",
    "keywords": "Class BookController Namespace LibraryApi.Controllers Assembly LibraryApi.dll [Authorize] [Route(\"book\")] [ApiController] public class BookController : BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest> Inheritance object ControllerBase BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest> BookController Inherited Members BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.entityService BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.mapper BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.GetById(int, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.GetByIds(GetByIdsRequest, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.GetPaginated(BookFilterRequest, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.GetItemTotalAmount(BookFilterRequest, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.Create(CreateBookRequest, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.Update(UpdateBookRequest, CancellationToken) BaseLibraryEntityController<Book, BookResponse, CreateBookRequest, BookResponse, UpdateBookRequest, BookResponse, BookFilterRequest>.DeleteById(int, CancellationToken) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BookController(ILibraryEntityService<Book>, IMapper, IBookService) public BookController(ILibraryEntityService<Book> entityService, IMapper mapper, IBookService bookService) Parameters entityService ILibraryEntityService<Book> mapper IMapper bookService IBookService Methods RaisePopularity(RaiseBookPopularityRequest, CancellationToken) [HttpPost(\"popularity\")] [AllowAnonymous] public Task<IActionResult> RaisePopularity(RaiseBookPopularityRequest request, CancellationToken cancellationToken) Parameters request RaiseBookPopularityRequest cancellationToken CancellationToken Returns Task<IActionResult> UpdateStockAmount(List<UpdateBookStockAmountRequest>, CancellationToken) [HttpPost(\"stockamount\")] [AllowAnonymous] public Task<IActionResult> UpdateStockAmount(List<UpdateBookStockAmountRequest> requests, CancellationToken cancellationToken) Parameters requests List<UpdateBookStockAmountRequest> cancellationToken CancellationToken Returns Task<IActionResult>"
  },
  "api/LibraryApi.Controllers.GenreController.html": {
    "href": "api/LibraryApi.Controllers.GenreController.html",
    "title": "Class GenreController | ELibrary",
    "keywords": "Class GenreController Namespace LibraryApi.Controllers Assembly LibraryApi.dll [Authorize] [Route(\"genre\")] [ApiController] public class GenreController : BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest> Inheritance object ControllerBase BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest> GenreController Inherited Members BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.entityService BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.mapper BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.GetById(int, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.GetByIds(GetByIdsRequest, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.GetPaginated(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.GetItemTotalAmount(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.Create(CreateGenreRequest, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.Update(UpdateGenreRequest, CancellationToken) BaseLibraryEntityController<Genre, GenreResponse, CreateGenreRequest, GenreResponse, UpdateGenreRequest, GenreResponse, LibraryFilterRequest>.DeleteById(int, CancellationToken) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenreController(ILibraryEntityService<Genre>, IMapper) public GenreController(ILibraryEntityService<Genre> entityService, IMapper mapper) Parameters entityService ILibraryEntityService<Genre> mapper IMapper"
  },
  "api/LibraryApi.Controllers.PublisherController.html": {
    "href": "api/LibraryApi.Controllers.PublisherController.html",
    "title": "Class PublisherController | ELibrary",
    "keywords": "Class PublisherController Namespace LibraryApi.Controllers Assembly LibraryApi.dll [Authorize] [Route(\"publisher\")] [ApiController] public class PublisherController : BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest> Inheritance object ControllerBase BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest> PublisherController Inherited Members BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.entityService BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.mapper BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.GetById(int, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.GetByIds(GetByIdsRequest, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.GetPaginated(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.GetItemTotalAmount(LibraryFilterRequest, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.Create(CreatePublisherRequest, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.Update(UpdatePublisherRequest, CancellationToken) BaseLibraryEntityController<Publisher, PublisherResponse, CreatePublisherRequest, PublisherResponse, UpdatePublisherRequest, PublisherResponse, LibraryFilterRequest>.DeleteById(int, CancellationToken) ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PublisherController(ILibraryEntityService<Publisher>, IMapper) public PublisherController(ILibraryEntityService<Publisher> entityService, IMapper mapper) Parameters entityService ILibraryEntityService<Publisher> mapper IMapper"
  },
  "api/LibraryApi.Controllers.html": {
    "href": "api/LibraryApi.Controllers.html",
    "title": "Namespace LibraryApi.Controllers | ELibrary",
    "keywords": "Namespace LibraryApi.Controllers Classes AuthorController BaseLibraryEntityController<TEntity, TGetResponse, TCreateRequest, TCreateResponse, TUpdateRequest, TUpdateResponse, TFilterRequest> BookController GenreController PublisherController"
  },
  "api/LibraryApi.Domain.Dto.Author.CreateAuthorRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Author.CreateAuthorRequest.html",
    "title": "Class CreateAuthorRequest | ELibrary",
    "keywords": "Class CreateAuthorRequest Namespace LibraryApi.Domain.Dto.Author Assembly LibraryApi.dll public class CreateAuthorRequest Inheritance object CreateAuthorRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime LastName public string? LastName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Author.UpdateAuthorRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Author.UpdateAuthorRequest.html",
    "title": "Class UpdateAuthorRequest | ELibrary",
    "keywords": "Class UpdateAuthorRequest Namespace LibraryApi.Domain.Dto.Author Assembly LibraryApi.dll public class UpdateAuthorRequest Inheritance object UpdateAuthorRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int LastName public string? LastName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Author.html": {
    "href": "api/LibraryApi.Domain.Dto.Author.html",
    "title": "Namespace LibraryApi.Domain.Dto.Author | ELibrary",
    "keywords": "Namespace LibraryApi.Domain.Dto.Author Classes CreateAuthorRequest UpdateAuthorRequest"
  },
  "api/LibraryApi.Domain.Dto.Book.CreateBookRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Book.CreateBookRequest.html",
    "title": "Class CreateBookRequest | ELibrary",
    "keywords": "Class CreateBookRequest Namespace LibraryApi.Domain.Dto.Book Assembly LibraryApi.dll public class CreateBookRequest Inheritance object CreateBookRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthorId public int AuthorId { get; set; } Property Value int CoverImgUrl public string? CoverImgUrl { get; set; } Property Value string CoverType public CoverType CoverType { get; set; } Property Value CoverType Description public string? Description { get; set; } Property Value string GenreId public int GenreId { get; set; } Property Value int Name public string? Name { get; set; } Property Value string PageAmount public int PageAmount { get; set; } Property Value int Price public decimal Price { get; set; } Property Value decimal PublicationDate public DateTime PublicationDate { get; set; } Property Value DateTime PublisherId public int PublisherId { get; set; } Property Value int"
  },
  "api/LibraryApi.Domain.Dto.Book.UpdateBookRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Book.UpdateBookRequest.html",
    "title": "Class UpdateBookRequest | ELibrary",
    "keywords": "Class UpdateBookRequest Namespace LibraryApi.Domain.Dto.Book Assembly LibraryApi.dll public class UpdateBookRequest Inheritance object UpdateBookRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthorId public int AuthorId { get; set; } Property Value int CoverImgUrl public string? CoverImgUrl { get; set; } Property Value string CoverType public CoverType CoverType { get; set; } Property Value CoverType Description public string? Description { get; set; } Property Value string GenreId public int GenreId { get; set; } Property Value int Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string PageAmount public int PageAmount { get; set; } Property Value int Price public decimal Price { get; set; } Property Value decimal PublicationDate public DateTime PublicationDate { get; set; } Property Value DateTime PublisherId public int PublisherId { get; set; } Property Value int"
  },
  "api/LibraryApi.Domain.Dto.Book.html": {
    "href": "api/LibraryApi.Domain.Dto.Book.html",
    "title": "Namespace LibraryApi.Domain.Dto.Book | ELibrary",
    "keywords": "Namespace LibraryApi.Domain.Dto.Book Classes CreateBookRequest UpdateBookRequest"
  },
  "api/LibraryApi.Domain.Dto.Genre.CreateGenreRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Genre.CreateGenreRequest.html",
    "title": "Class CreateGenreRequest | ELibrary",
    "keywords": "Class CreateGenreRequest Namespace LibraryApi.Domain.Dto.Genre Assembly LibraryApi.dll public class CreateGenreRequest Inheritance object CreateGenreRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Genre.UpdateGenreRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Genre.UpdateGenreRequest.html",
    "title": "Class UpdateGenreRequest | ELibrary",
    "keywords": "Class UpdateGenreRequest Namespace LibraryApi.Domain.Dto.Genre Assembly LibraryApi.dll public class UpdateGenreRequest Inheritance object UpdateGenreRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Genre.html": {
    "href": "api/LibraryApi.Domain.Dto.Genre.html",
    "title": "Namespace LibraryApi.Domain.Dto.Genre | ELibrary",
    "keywords": "Namespace LibraryApi.Domain.Dto.Genre Classes CreateGenreRequest UpdateGenreRequest"
  },
  "api/LibraryApi.Domain.Dto.Publisher.CreatePublisherRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Publisher.CreatePublisherRequest.html",
    "title": "Class CreatePublisherRequest | ELibrary",
    "keywords": "Class CreatePublisherRequest Namespace LibraryApi.Domain.Dto.Publisher Assembly LibraryApi.dll public class CreatePublisherRequest Inheritance object CreatePublisherRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Publisher.UpdatePublisherRequest.html": {
    "href": "api/LibraryApi.Domain.Dto.Publisher.UpdatePublisherRequest.html",
    "title": "Class UpdatePublisherRequest | ELibrary",
    "keywords": "Class UpdatePublisherRequest Namespace LibraryApi.Domain.Dto.Publisher Assembly LibraryApi.dll public class UpdatePublisherRequest Inheritance object UpdatePublisherRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryApi.Domain.Dto.Publisher.html": {
    "href": "api/LibraryApi.Domain.Dto.Publisher.html",
    "title": "Namespace LibraryApi.Domain.Dto.Publisher | ELibrary",
    "keywords": "Namespace LibraryApi.Domain.Dto.Publisher Classes CreatePublisherRequest UpdatePublisherRequest"
  },
  "api/LibraryApi.Migrations.AddedBookDescription.html": {
    "href": "api/LibraryApi.Migrations.AddedBookDescription.html",
    "title": "Class AddedBookDescription | ELibrary",
    "keywords": "Class AddedBookDescription Namespace LibraryApi.Migrations Assembly LibraryApi.dll A base class inherited by each EF Core migration. [DbContext(typeof(LibraryDbContext))] [Migration(\"20241107164400_AddedBookDescription\")] public class AddedBookDescription : Migration Inheritance object Migration AddedBookDescription Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/LibraryApi.Migrations.InitialMigration.html": {
    "href": "api/LibraryApi.Migrations.InitialMigration.html",
    "title": "Class InitialMigration | ELibrary",
    "keywords": "Class InitialMigration Namespace LibraryApi.Migrations Assembly LibraryApi.dll A base class inherited by each EF Core migration. [DbContext(typeof(LibraryDbContext))] [Migration(\"20241101190149_InitialMigration\")] public class InitialMigration : Migration Inheritance object Migration InitialMigration Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/LibraryApi.Migrations.html": {
    "href": "api/LibraryApi.Migrations.html",
    "title": "Namespace LibraryApi.Migrations | ELibrary",
    "keywords": "Namespace LibraryApi.Migrations Classes AddedBookDescription A base class inherited by each EF Core migration. InitialMigration A base class inherited by each EF Core migration."
  },
  "api/LibraryApi.Services.BookService.html": {
    "href": "api/LibraryApi.Services.BookService.html",
    "title": "Class BookService | ELibrary",
    "keywords": "Class BookService Namespace LibraryApi.Services Assembly LibraryApi.dll public class BookService : LibraryEntityService<Book>, IBookService, ILibraryEntityService<Book> Inheritance object LibraryEntityService<Book> BookService Implements IBookService ILibraryEntityService<Book> Inherited Members LibraryEntityService<Book>.repository LibraryEntityService<Book>.GetByIdAsync(int, CancellationToken) LibraryEntityService<Book>.GetByIdsAsync(IEnumerable<int>, CancellationToken) LibraryEntityService<Book>.GetPaginatedAsync(LibraryFilterRequest, CancellationToken) LibraryEntityService<Book>.GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) LibraryEntityService<Book>.CreateAsync(Book, CancellationToken) LibraryEntityService<Book>.UpdateAsync(Book, CancellationToken) LibraryEntityService<Book>.DeleteAsync(int, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BookService(IBookRepository) public BookService(IBookRepository repository) Parameters repository IBookRepository Methods ChangeBookStockAmount(Dictionary<int, int>, CancellationToken) public Task ChangeBookStockAmount(Dictionary<int, int> changeRequests, CancellationToken cancellationToken) Parameters changeRequests Dictionary<int, int> cancellationToken CancellationToken Returns Task RaisePopularityAsync(IEnumerable<int>, CancellationToken) public Task RaisePopularityAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryApi.Services.IBookService.html": {
    "href": "api/LibraryApi.Services.IBookService.html",
    "title": "Interface IBookService | ELibrary",
    "keywords": "Interface IBookService Namespace LibraryApi.Services Assembly LibraryApi.dll public interface IBookService : ILibraryEntityService<Book> Inherited Members ILibraryEntityService<Book>.CreateAsync(Book, CancellationToken) ILibraryEntityService<Book>.DeleteAsync(int, CancellationToken) ILibraryEntityService<Book>.GetByIdAsync(int, CancellationToken) ILibraryEntityService<Book>.GetByIdsAsync(IEnumerable<int>, CancellationToken) ILibraryEntityService<Book>.GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) ILibraryEntityService<Book>.GetPaginatedAsync(LibraryFilterRequest, CancellationToken) ILibraryEntityService<Book>.UpdateAsync(Book, CancellationToken) Methods ChangeBookStockAmount(Dictionary<int, int>, CancellationToken) Task ChangeBookStockAmount(Dictionary<int, int> changeRequests, CancellationToken cancellationToken) Parameters changeRequests Dictionary<int, int> cancellationToken CancellationToken Returns Task RaisePopularityAsync(IEnumerable<int>, CancellationToken) Task RaisePopularityAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryApi.Services.ILibraryEntityService-1.html": {
    "href": "api/LibraryApi.Services.ILibraryEntityService-1.html",
    "title": "Interface ILibraryEntityService<TEntity> | ELibrary",
    "keywords": "Interface ILibraryEntityService<TEntity> Namespace LibraryApi.Services Assembly LibraryApi.dll public interface ILibraryEntityService<TEntity> where TEntity : BaseLibraryEntity Type Parameters TEntity Methods CreateAsync(TEntity, CancellationToken) Task<TEntity> CreateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(int, CancellationToken) Task DeleteAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task GetByIdAsync(int, CancellationToken) Task<TEntity?> GetByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<TEntity> GetByIdsAsync(IEnumerable<int>, CancellationToken) Task<IEnumerable<TEntity>> GetByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) Task<int> GetItemTotalAmountAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<int> GetPaginatedAsync(LibraryFilterRequest, CancellationToken) Task<IEnumerable<TEntity>> GetPaginatedAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> UpdateAsync(TEntity, CancellationToken) Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity>"
  },
  "api/LibraryApi.Services.LibraryEntityService-1.html": {
    "href": "api/LibraryApi.Services.LibraryEntityService-1.html",
    "title": "Class LibraryEntityService<TEntity> | ELibrary",
    "keywords": "Class LibraryEntityService<TEntity> Namespace LibraryApi.Services Assembly LibraryApi.dll public class LibraryEntityService<TEntity> : ILibraryEntityService<TEntity> where TEntity : BaseLibraryEntity Type Parameters TEntity Inheritance object LibraryEntityService<TEntity> Implements ILibraryEntityService<TEntity> Derived BookService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LibraryEntityService(ILibraryEntityRepository<TEntity>) public LibraryEntityService(ILibraryEntityRepository<TEntity> repository) Parameters repository ILibraryEntityRepository<TEntity> Fields repository protected readonly ILibraryEntityRepository<TEntity> repository Field Value ILibraryEntityRepository<TEntity> Methods CreateAsync(TEntity, CancellationToken) public virtual Task<TEntity> CreateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(int, CancellationToken) public virtual Task DeleteAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task GetByIdAsync(int, CancellationToken) public virtual Task<TEntity?> GetByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<TEntity> GetByIdsAsync(IEnumerable<int>, CancellationToken) public virtual Task<IEnumerable<TEntity>> GetByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) public virtual Task<int> GetItemTotalAmountAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<int> GetPaginatedAsync(LibraryFilterRequest, CancellationToken) public virtual Task<IEnumerable<TEntity>> GetPaginatedAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> UpdateAsync(TEntity, CancellationToken) public virtual Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity>"
  },
  "api/LibraryApi.Services.html": {
    "href": "api/LibraryApi.Services.html",
    "title": "Namespace LibraryApi.Services | ELibrary",
    "keywords": "Namespace LibraryApi.Services Classes BookService LibraryEntityService<TEntity> Interfaces IBookService ILibraryEntityService<TEntity>"
  },
  "api/LibraryApi.Validators.Author.CreateAuthorRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Author.CreateAuthorRequestValidator.html",
    "title": "Class CreateAuthorRequestValidator | ELibrary",
    "keywords": "Class CreateAuthorRequestValidator Namespace LibraryApi.Validators.Author Assembly LibraryApi.dll public class CreateAuthorRequestValidator : AbstractValidator<CreateAuthorRequest>, IValidator<CreateAuthorRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateAuthorRequest> CreateAuthorRequestValidator Implements IValidator<CreateAuthorRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateAuthorRequest>.Validate(CreateAuthorRequest) AbstractValidator<CreateAuthorRequest>.ValidateAsync(CreateAuthorRequest, CancellationToken) AbstractValidator<CreateAuthorRequest>.Validate(ValidationContext<CreateAuthorRequest>) AbstractValidator<CreateAuthorRequest>.ValidateAsync(ValidationContext<CreateAuthorRequest>, CancellationToken) AbstractValidator<CreateAuthorRequest>.CreateDescriptor() AbstractValidator<CreateAuthorRequest>.RuleFor<TProperty>(Expression<Func<CreateAuthorRequest, TProperty>>) AbstractValidator<CreateAuthorRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateAuthorRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateAuthorRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateAuthorRequest, TProperty>>, Func<CreateAuthorRequest, TProperty, TTransformed>) AbstractValidator<CreateAuthorRequest>.RuleForEach<TElement>(Expression<Func<CreateAuthorRequest, IEnumerable<TElement>>>) AbstractValidator<CreateAuthorRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateAuthorRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateAuthorRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateAuthorRequest, IEnumerable<TElement>>>, Func<CreateAuthorRequest, TElement, TTransformed>) AbstractValidator<CreateAuthorRequest>.RuleSet(string, Action) AbstractValidator<CreateAuthorRequest>.When(Func<CreateAuthorRequest, bool>, Action) AbstractValidator<CreateAuthorRequest>.When(Func<CreateAuthorRequest, ValidationContext<CreateAuthorRequest>, bool>, Action) AbstractValidator<CreateAuthorRequest>.Unless(Func<CreateAuthorRequest, bool>, Action) AbstractValidator<CreateAuthorRequest>.Unless(Func<CreateAuthorRequest, ValidationContext<CreateAuthorRequest>, bool>, Action) AbstractValidator<CreateAuthorRequest>.WhenAsync(Func<CreateAuthorRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateAuthorRequest>.WhenAsync(Func<CreateAuthorRequest, ValidationContext<CreateAuthorRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateAuthorRequest>.UnlessAsync(Func<CreateAuthorRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateAuthorRequest>.UnlessAsync(Func<CreateAuthorRequest, ValidationContext<CreateAuthorRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateAuthorRequest>.Include(IValidator<CreateAuthorRequest>) AbstractValidator<CreateAuthorRequest>.Include<TValidator>(Func<CreateAuthorRequest, TValidator>) AbstractValidator<CreateAuthorRequest>.GetEnumerator() AbstractValidator<CreateAuthorRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateAuthorRequest>.PreValidate(ValidationContext<CreateAuthorRequest>, ValidationResult) AbstractValidator<CreateAuthorRequest>.RaiseValidationException(ValidationContext<CreateAuthorRequest>, ValidationResult) AbstractValidator<CreateAuthorRequest>.CascadeMode AbstractValidator<CreateAuthorRequest>.ClassLevelCascadeMode AbstractValidator<CreateAuthorRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateAuthorRequestValidator() public CreateAuthorRequestValidator()"
  },
  "api/LibraryApi.Validators.Author.UpdateAuthorRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Author.UpdateAuthorRequestValidator.html",
    "title": "Class UpdateAuthorRequestValidator | ELibrary",
    "keywords": "Class UpdateAuthorRequestValidator Namespace LibraryApi.Validators.Author Assembly LibraryApi.dll public class UpdateAuthorRequestValidator : AbstractValidator<UpdateAuthorRequest>, IValidator<UpdateAuthorRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateAuthorRequest> UpdateAuthorRequestValidator Implements IValidator<UpdateAuthorRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateAuthorRequest>.Validate(UpdateAuthorRequest) AbstractValidator<UpdateAuthorRequest>.ValidateAsync(UpdateAuthorRequest, CancellationToken) AbstractValidator<UpdateAuthorRequest>.Validate(ValidationContext<UpdateAuthorRequest>) AbstractValidator<UpdateAuthorRequest>.ValidateAsync(ValidationContext<UpdateAuthorRequest>, CancellationToken) AbstractValidator<UpdateAuthorRequest>.CreateDescriptor() AbstractValidator<UpdateAuthorRequest>.RuleFor<TProperty>(Expression<Func<UpdateAuthorRequest, TProperty>>) AbstractValidator<UpdateAuthorRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateAuthorRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateAuthorRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateAuthorRequest, TProperty>>, Func<UpdateAuthorRequest, TProperty, TTransformed>) AbstractValidator<UpdateAuthorRequest>.RuleForEach<TElement>(Expression<Func<UpdateAuthorRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateAuthorRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateAuthorRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateAuthorRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateAuthorRequest, IEnumerable<TElement>>>, Func<UpdateAuthorRequest, TElement, TTransformed>) AbstractValidator<UpdateAuthorRequest>.RuleSet(string, Action) AbstractValidator<UpdateAuthorRequest>.When(Func<UpdateAuthorRequest, bool>, Action) AbstractValidator<UpdateAuthorRequest>.When(Func<UpdateAuthorRequest, ValidationContext<UpdateAuthorRequest>, bool>, Action) AbstractValidator<UpdateAuthorRequest>.Unless(Func<UpdateAuthorRequest, bool>, Action) AbstractValidator<UpdateAuthorRequest>.Unless(Func<UpdateAuthorRequest, ValidationContext<UpdateAuthorRequest>, bool>, Action) AbstractValidator<UpdateAuthorRequest>.WhenAsync(Func<UpdateAuthorRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateAuthorRequest>.WhenAsync(Func<UpdateAuthorRequest, ValidationContext<UpdateAuthorRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateAuthorRequest>.UnlessAsync(Func<UpdateAuthorRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateAuthorRequest>.UnlessAsync(Func<UpdateAuthorRequest, ValidationContext<UpdateAuthorRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateAuthorRequest>.Include(IValidator<UpdateAuthorRequest>) AbstractValidator<UpdateAuthorRequest>.Include<TValidator>(Func<UpdateAuthorRequest, TValidator>) AbstractValidator<UpdateAuthorRequest>.GetEnumerator() AbstractValidator<UpdateAuthorRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateAuthorRequest>.PreValidate(ValidationContext<UpdateAuthorRequest>, ValidationResult) AbstractValidator<UpdateAuthorRequest>.RaiseValidationException(ValidationContext<UpdateAuthorRequest>, ValidationResult) AbstractValidator<UpdateAuthorRequest>.CascadeMode AbstractValidator<UpdateAuthorRequest>.ClassLevelCascadeMode AbstractValidator<UpdateAuthorRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateAuthorRequestValidator() public UpdateAuthorRequestValidator()"
  },
  "api/LibraryApi.Validators.Author.html": {
    "href": "api/LibraryApi.Validators.Author.html",
    "title": "Namespace LibraryApi.Validators.Author | ELibrary",
    "keywords": "Namespace LibraryApi.Validators.Author Classes CreateAuthorRequestValidator UpdateAuthorRequestValidator"
  },
  "api/LibraryApi.Validators.Book.CreateBookRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Book.CreateBookRequestValidator.html",
    "title": "Class CreateBookRequestValidator | ELibrary",
    "keywords": "Class CreateBookRequestValidator Namespace LibraryApi.Validators.Book Assembly LibraryApi.dll public class CreateBookRequestValidator : AbstractValidator<CreateBookRequest>, IValidator<CreateBookRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateBookRequest> CreateBookRequestValidator Implements IValidator<CreateBookRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateBookRequest>.Validate(CreateBookRequest) AbstractValidator<CreateBookRequest>.ValidateAsync(CreateBookRequest, CancellationToken) AbstractValidator<CreateBookRequest>.Validate(ValidationContext<CreateBookRequest>) AbstractValidator<CreateBookRequest>.ValidateAsync(ValidationContext<CreateBookRequest>, CancellationToken) AbstractValidator<CreateBookRequest>.CreateDescriptor() AbstractValidator<CreateBookRequest>.RuleFor<TProperty>(Expression<Func<CreateBookRequest, TProperty>>) AbstractValidator<CreateBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateBookRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateBookRequest, TProperty>>, Func<CreateBookRequest, TProperty, TTransformed>) AbstractValidator<CreateBookRequest>.RuleForEach<TElement>(Expression<Func<CreateBookRequest, IEnumerable<TElement>>>) AbstractValidator<CreateBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateBookRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateBookRequest, IEnumerable<TElement>>>, Func<CreateBookRequest, TElement, TTransformed>) AbstractValidator<CreateBookRequest>.RuleSet(string, Action) AbstractValidator<CreateBookRequest>.When(Func<CreateBookRequest, bool>, Action) AbstractValidator<CreateBookRequest>.When(Func<CreateBookRequest, ValidationContext<CreateBookRequest>, bool>, Action) AbstractValidator<CreateBookRequest>.Unless(Func<CreateBookRequest, bool>, Action) AbstractValidator<CreateBookRequest>.Unless(Func<CreateBookRequest, ValidationContext<CreateBookRequest>, bool>, Action) AbstractValidator<CreateBookRequest>.WhenAsync(Func<CreateBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateBookRequest>.WhenAsync(Func<CreateBookRequest, ValidationContext<CreateBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateBookRequest>.UnlessAsync(Func<CreateBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateBookRequest>.UnlessAsync(Func<CreateBookRequest, ValidationContext<CreateBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateBookRequest>.Include(IValidator<CreateBookRequest>) AbstractValidator<CreateBookRequest>.Include<TValidator>(Func<CreateBookRequest, TValidator>) AbstractValidator<CreateBookRequest>.GetEnumerator() AbstractValidator<CreateBookRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateBookRequest>.PreValidate(ValidationContext<CreateBookRequest>, ValidationResult) AbstractValidator<CreateBookRequest>.RaiseValidationException(ValidationContext<CreateBookRequest>, ValidationResult) AbstractValidator<CreateBookRequest>.CascadeMode AbstractValidator<CreateBookRequest>.ClassLevelCascadeMode AbstractValidator<CreateBookRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateBookRequestValidator() public CreateBookRequestValidator()"
  },
  "api/LibraryApi.Validators.Book.RaiseBookPopularityRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Book.RaiseBookPopularityRequestValidator.html",
    "title": "Class RaiseBookPopularityRequestValidator | ELibrary",
    "keywords": "Class RaiseBookPopularityRequestValidator Namespace LibraryApi.Validators.Book Assembly LibraryApi.dll public class RaiseBookPopularityRequestValidator : AbstractValidator<RaiseBookPopularityRequest>, IValidator<RaiseBookPopularityRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RaiseBookPopularityRequest> RaiseBookPopularityRequestValidator Implements IValidator<RaiseBookPopularityRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RaiseBookPopularityRequest>.Validate(RaiseBookPopularityRequest) AbstractValidator<RaiseBookPopularityRequest>.ValidateAsync(RaiseBookPopularityRequest, CancellationToken) AbstractValidator<RaiseBookPopularityRequest>.Validate(ValidationContext<RaiseBookPopularityRequest>) AbstractValidator<RaiseBookPopularityRequest>.ValidateAsync(ValidationContext<RaiseBookPopularityRequest>, CancellationToken) AbstractValidator<RaiseBookPopularityRequest>.CreateDescriptor() AbstractValidator<RaiseBookPopularityRequest>.RuleFor<TProperty>(Expression<Func<RaiseBookPopularityRequest, TProperty>>) AbstractValidator<RaiseBookPopularityRequest>.Transform<TProperty, TTransformed>(Expression<Func<RaiseBookPopularityRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RaiseBookPopularityRequest>.Transform<TProperty, TTransformed>(Expression<Func<RaiseBookPopularityRequest, TProperty>>, Func<RaiseBookPopularityRequest, TProperty, TTransformed>) AbstractValidator<RaiseBookPopularityRequest>.RuleForEach<TElement>(Expression<Func<RaiseBookPopularityRequest, IEnumerable<TElement>>>) AbstractValidator<RaiseBookPopularityRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<RaiseBookPopularityRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RaiseBookPopularityRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<RaiseBookPopularityRequest, IEnumerable<TElement>>>, Func<RaiseBookPopularityRequest, TElement, TTransformed>) AbstractValidator<RaiseBookPopularityRequest>.RuleSet(string, Action) AbstractValidator<RaiseBookPopularityRequest>.When(Func<RaiseBookPopularityRequest, bool>, Action) AbstractValidator<RaiseBookPopularityRequest>.When(Func<RaiseBookPopularityRequest, ValidationContext<RaiseBookPopularityRequest>, bool>, Action) AbstractValidator<RaiseBookPopularityRequest>.Unless(Func<RaiseBookPopularityRequest, bool>, Action) AbstractValidator<RaiseBookPopularityRequest>.Unless(Func<RaiseBookPopularityRequest, ValidationContext<RaiseBookPopularityRequest>, bool>, Action) AbstractValidator<RaiseBookPopularityRequest>.WhenAsync(Func<RaiseBookPopularityRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<RaiseBookPopularityRequest>.WhenAsync(Func<RaiseBookPopularityRequest, ValidationContext<RaiseBookPopularityRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<RaiseBookPopularityRequest>.UnlessAsync(Func<RaiseBookPopularityRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<RaiseBookPopularityRequest>.UnlessAsync(Func<RaiseBookPopularityRequest, ValidationContext<RaiseBookPopularityRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<RaiseBookPopularityRequest>.Include(IValidator<RaiseBookPopularityRequest>) AbstractValidator<RaiseBookPopularityRequest>.Include<TValidator>(Func<RaiseBookPopularityRequest, TValidator>) AbstractValidator<RaiseBookPopularityRequest>.GetEnumerator() AbstractValidator<RaiseBookPopularityRequest>.EnsureInstanceNotNull(object) AbstractValidator<RaiseBookPopularityRequest>.PreValidate(ValidationContext<RaiseBookPopularityRequest>, ValidationResult) AbstractValidator<RaiseBookPopularityRequest>.RaiseValidationException(ValidationContext<RaiseBookPopularityRequest>, ValidationResult) AbstractValidator<RaiseBookPopularityRequest>.CascadeMode AbstractValidator<RaiseBookPopularityRequest>.ClassLevelCascadeMode AbstractValidator<RaiseBookPopularityRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RaiseBookPopularityRequestValidator() public RaiseBookPopularityRequestValidator()"
  },
  "api/LibraryApi.Validators.Book.UpdateBookRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Book.UpdateBookRequestValidator.html",
    "title": "Class UpdateBookRequestValidator | ELibrary",
    "keywords": "Class UpdateBookRequestValidator Namespace LibraryApi.Validators.Book Assembly LibraryApi.dll public class UpdateBookRequestValidator : AbstractValidator<UpdateBookRequest>, IValidator<UpdateBookRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateBookRequest> UpdateBookRequestValidator Implements IValidator<UpdateBookRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateBookRequest>.Validate(UpdateBookRequest) AbstractValidator<UpdateBookRequest>.ValidateAsync(UpdateBookRequest, CancellationToken) AbstractValidator<UpdateBookRequest>.Validate(ValidationContext<UpdateBookRequest>) AbstractValidator<UpdateBookRequest>.ValidateAsync(ValidationContext<UpdateBookRequest>, CancellationToken) AbstractValidator<UpdateBookRequest>.CreateDescriptor() AbstractValidator<UpdateBookRequest>.RuleFor<TProperty>(Expression<Func<UpdateBookRequest, TProperty>>) AbstractValidator<UpdateBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateBookRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateBookRequest, TProperty>>, Func<UpdateBookRequest, TProperty, TTransformed>) AbstractValidator<UpdateBookRequest>.RuleForEach<TElement>(Expression<Func<UpdateBookRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateBookRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateBookRequest, IEnumerable<TElement>>>, Func<UpdateBookRequest, TElement, TTransformed>) AbstractValidator<UpdateBookRequest>.RuleSet(string, Action) AbstractValidator<UpdateBookRequest>.When(Func<UpdateBookRequest, bool>, Action) AbstractValidator<UpdateBookRequest>.When(Func<UpdateBookRequest, ValidationContext<UpdateBookRequest>, bool>, Action) AbstractValidator<UpdateBookRequest>.Unless(Func<UpdateBookRequest, bool>, Action) AbstractValidator<UpdateBookRequest>.Unless(Func<UpdateBookRequest, ValidationContext<UpdateBookRequest>, bool>, Action) AbstractValidator<UpdateBookRequest>.WhenAsync(Func<UpdateBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookRequest>.WhenAsync(Func<UpdateBookRequest, ValidationContext<UpdateBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookRequest>.UnlessAsync(Func<UpdateBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookRequest>.UnlessAsync(Func<UpdateBookRequest, ValidationContext<UpdateBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookRequest>.Include(IValidator<UpdateBookRequest>) AbstractValidator<UpdateBookRequest>.Include<TValidator>(Func<UpdateBookRequest, TValidator>) AbstractValidator<UpdateBookRequest>.GetEnumerator() AbstractValidator<UpdateBookRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateBookRequest>.PreValidate(ValidationContext<UpdateBookRequest>, ValidationResult) AbstractValidator<UpdateBookRequest>.RaiseValidationException(ValidationContext<UpdateBookRequest>, ValidationResult) AbstractValidator<UpdateBookRequest>.CascadeMode AbstractValidator<UpdateBookRequest>.ClassLevelCascadeMode AbstractValidator<UpdateBookRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateBookRequestValidator() public UpdateBookRequestValidator()"
  },
  "api/LibraryApi.Validators.Book.UpdateBookStockAmountRequestCollectionValidator.html": {
    "href": "api/LibraryApi.Validators.Book.UpdateBookStockAmountRequestCollectionValidator.html",
    "title": "Class UpdateBookStockAmountRequestCollectionValidator | ELibrary",
    "keywords": "Class UpdateBookStockAmountRequestCollectionValidator Namespace LibraryApi.Validators.Book Assembly LibraryApi.dll public class UpdateBookStockAmountRequestCollectionValidator : AbstractValidator<List<UpdateBookStockAmountRequest>>, IValidator<List<UpdateBookStockAmountRequest>>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<List<UpdateBookStockAmountRequest>> UpdateBookStockAmountRequestCollectionValidator Implements IValidator<List<UpdateBookStockAmountRequest>> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<List<UpdateBookStockAmountRequest>>.Validate(List<UpdateBookStockAmountRequest>) AbstractValidator<List<UpdateBookStockAmountRequest>>.ValidateAsync(List<UpdateBookStockAmountRequest>, CancellationToken) AbstractValidator<List<UpdateBookStockAmountRequest>>.Validate(ValidationContext<List<UpdateBookStockAmountRequest>>) AbstractValidator<List<UpdateBookStockAmountRequest>>.ValidateAsync(ValidationContext<List<UpdateBookStockAmountRequest>>, CancellationToken) AbstractValidator<List<UpdateBookStockAmountRequest>>.CreateDescriptor() AbstractValidator<List<UpdateBookStockAmountRequest>>.RuleFor<TProperty>(Expression<Func<List<UpdateBookStockAmountRequest>, TProperty>>) AbstractValidator<List<UpdateBookStockAmountRequest>>.Transform<TProperty, TTransformed>(Expression<Func<List<UpdateBookStockAmountRequest>, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<List<UpdateBookStockAmountRequest>>.Transform<TProperty, TTransformed>(Expression<Func<List<UpdateBookStockAmountRequest>, TProperty>>, Func<List<UpdateBookStockAmountRequest>, TProperty, TTransformed>) AbstractValidator<List<UpdateBookStockAmountRequest>>.RuleForEach<TElement>(Expression<Func<List<UpdateBookStockAmountRequest>, IEnumerable<TElement>>>) AbstractValidator<List<UpdateBookStockAmountRequest>>.TransformForEach<TElement, TTransformed>(Expression<Func<List<UpdateBookStockAmountRequest>, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<List<UpdateBookStockAmountRequest>>.TransformForEach<TElement, TTransformed>(Expression<Func<List<UpdateBookStockAmountRequest>, IEnumerable<TElement>>>, Func<List<UpdateBookStockAmountRequest>, TElement, TTransformed>) AbstractValidator<List<UpdateBookStockAmountRequest>>.RuleSet(string, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.When(Func<List<UpdateBookStockAmountRequest>, bool>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.When(Func<List<UpdateBookStockAmountRequest>, ValidationContext<List<UpdateBookStockAmountRequest>>, bool>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.Unless(Func<List<UpdateBookStockAmountRequest>, bool>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.Unless(Func<List<UpdateBookStockAmountRequest>, ValidationContext<List<UpdateBookStockAmountRequest>>, bool>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.WhenAsync(Func<List<UpdateBookStockAmountRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.WhenAsync(Func<List<UpdateBookStockAmountRequest>, ValidationContext<List<UpdateBookStockAmountRequest>>, CancellationToken, Task<bool>>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.UnlessAsync(Func<List<UpdateBookStockAmountRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.UnlessAsync(Func<List<UpdateBookStockAmountRequest>, ValidationContext<List<UpdateBookStockAmountRequest>>, CancellationToken, Task<bool>>, Action) AbstractValidator<List<UpdateBookStockAmountRequest>>.Include(IValidator<List<UpdateBookStockAmountRequest>>) AbstractValidator<List<UpdateBookStockAmountRequest>>.Include<TValidator>(Func<List<UpdateBookStockAmountRequest>, TValidator>) AbstractValidator<List<UpdateBookStockAmountRequest>>.GetEnumerator() AbstractValidator<List<UpdateBookStockAmountRequest>>.EnsureInstanceNotNull(object) AbstractValidator<List<UpdateBookStockAmountRequest>>.PreValidate(ValidationContext<List<UpdateBookStockAmountRequest>>, ValidationResult) AbstractValidator<List<UpdateBookStockAmountRequest>>.RaiseValidationException(ValidationContext<List<UpdateBookStockAmountRequest>>, ValidationResult) AbstractValidator<List<UpdateBookStockAmountRequest>>.CascadeMode AbstractValidator<List<UpdateBookStockAmountRequest>>.ClassLevelCascadeMode AbstractValidator<List<UpdateBookStockAmountRequest>>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateBookStockAmountRequestCollectionValidator() public UpdateBookStockAmountRequestCollectionValidator()"
  },
  "api/LibraryApi.Validators.Book.UpdateBookStockAmountRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Book.UpdateBookStockAmountRequestValidator.html",
    "title": "Class UpdateBookStockAmountRequestValidator | ELibrary",
    "keywords": "Class UpdateBookStockAmountRequestValidator Namespace LibraryApi.Validators.Book Assembly LibraryApi.dll public class UpdateBookStockAmountRequestValidator : AbstractValidator<UpdateBookStockAmountRequest>, IValidator<UpdateBookStockAmountRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateBookStockAmountRequest> UpdateBookStockAmountRequestValidator Implements IValidator<UpdateBookStockAmountRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateBookStockAmountRequest>.Validate(UpdateBookStockAmountRequest) AbstractValidator<UpdateBookStockAmountRequest>.ValidateAsync(UpdateBookStockAmountRequest, CancellationToken) AbstractValidator<UpdateBookStockAmountRequest>.Validate(ValidationContext<UpdateBookStockAmountRequest>) AbstractValidator<UpdateBookStockAmountRequest>.ValidateAsync(ValidationContext<UpdateBookStockAmountRequest>, CancellationToken) AbstractValidator<UpdateBookStockAmountRequest>.CreateDescriptor() AbstractValidator<UpdateBookStockAmountRequest>.RuleFor<TProperty>(Expression<Func<UpdateBookStockAmountRequest, TProperty>>) AbstractValidator<UpdateBookStockAmountRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateBookStockAmountRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateBookStockAmountRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateBookStockAmountRequest, TProperty>>, Func<UpdateBookStockAmountRequest, TProperty, TTransformed>) AbstractValidator<UpdateBookStockAmountRequest>.RuleForEach<TElement>(Expression<Func<UpdateBookStockAmountRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateBookStockAmountRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateBookStockAmountRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateBookStockAmountRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateBookStockAmountRequest, IEnumerable<TElement>>>, Func<UpdateBookStockAmountRequest, TElement, TTransformed>) AbstractValidator<UpdateBookStockAmountRequest>.RuleSet(string, Action) AbstractValidator<UpdateBookStockAmountRequest>.When(Func<UpdateBookStockAmountRequest, bool>, Action) AbstractValidator<UpdateBookStockAmountRequest>.When(Func<UpdateBookStockAmountRequest, ValidationContext<UpdateBookStockAmountRequest>, bool>, Action) AbstractValidator<UpdateBookStockAmountRequest>.Unless(Func<UpdateBookStockAmountRequest, bool>, Action) AbstractValidator<UpdateBookStockAmountRequest>.Unless(Func<UpdateBookStockAmountRequest, ValidationContext<UpdateBookStockAmountRequest>, bool>, Action) AbstractValidator<UpdateBookStockAmountRequest>.WhenAsync(Func<UpdateBookStockAmountRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookStockAmountRequest>.WhenAsync(Func<UpdateBookStockAmountRequest, ValidationContext<UpdateBookStockAmountRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookStockAmountRequest>.UnlessAsync(Func<UpdateBookStockAmountRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookStockAmountRequest>.UnlessAsync(Func<UpdateBookStockAmountRequest, ValidationContext<UpdateBookStockAmountRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateBookStockAmountRequest>.Include(IValidator<UpdateBookStockAmountRequest>) AbstractValidator<UpdateBookStockAmountRequest>.Include<TValidator>(Func<UpdateBookStockAmountRequest, TValidator>) AbstractValidator<UpdateBookStockAmountRequest>.GetEnumerator() AbstractValidator<UpdateBookStockAmountRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateBookStockAmountRequest>.PreValidate(ValidationContext<UpdateBookStockAmountRequest>, ValidationResult) AbstractValidator<UpdateBookStockAmountRequest>.RaiseValidationException(ValidationContext<UpdateBookStockAmountRequest>, ValidationResult) AbstractValidator<UpdateBookStockAmountRequest>.CascadeMode AbstractValidator<UpdateBookStockAmountRequest>.ClassLevelCascadeMode AbstractValidator<UpdateBookStockAmountRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateBookStockAmountRequestValidator() public UpdateBookStockAmountRequestValidator()"
  },
  "api/LibraryApi.Validators.Book.html": {
    "href": "api/LibraryApi.Validators.Book.html",
    "title": "Namespace LibraryApi.Validators.Book | ELibrary",
    "keywords": "Namespace LibraryApi.Validators.Book Classes CreateBookRequestValidator RaiseBookPopularityRequestValidator UpdateBookRequestValidator UpdateBookStockAmountRequestCollectionValidator UpdateBookStockAmountRequestValidator"
  },
  "api/LibraryApi.Validators.BookFilterRequestValidator.html": {
    "href": "api/LibraryApi.Validators.BookFilterRequestValidator.html",
    "title": "Class BookFilterRequestValidator | ELibrary",
    "keywords": "Class BookFilterRequestValidator Namespace LibraryApi.Validators Assembly LibraryApi.dll public class BookFilterRequestValidator : AbstractValidator<BookFilterRequest>, IValidator<BookFilterRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<BookFilterRequest> BookFilterRequestValidator Implements IValidator<BookFilterRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<BookFilterRequest>.Validate(BookFilterRequest) AbstractValidator<BookFilterRequest>.ValidateAsync(BookFilterRequest, CancellationToken) AbstractValidator<BookFilterRequest>.Validate(ValidationContext<BookFilterRequest>) AbstractValidator<BookFilterRequest>.ValidateAsync(ValidationContext<BookFilterRequest>, CancellationToken) AbstractValidator<BookFilterRequest>.CreateDescriptor() AbstractValidator<BookFilterRequest>.RuleFor<TProperty>(Expression<Func<BookFilterRequest, TProperty>>) AbstractValidator<BookFilterRequest>.Transform<TProperty, TTransformed>(Expression<Func<BookFilterRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<BookFilterRequest>.Transform<TProperty, TTransformed>(Expression<Func<BookFilterRequest, TProperty>>, Func<BookFilterRequest, TProperty, TTransformed>) AbstractValidator<BookFilterRequest>.RuleForEach<TElement>(Expression<Func<BookFilterRequest, IEnumerable<TElement>>>) AbstractValidator<BookFilterRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<BookFilterRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<BookFilterRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<BookFilterRequest, IEnumerable<TElement>>>, Func<BookFilterRequest, TElement, TTransformed>) AbstractValidator<BookFilterRequest>.RuleSet(string, Action) AbstractValidator<BookFilterRequest>.When(Func<BookFilterRequest, bool>, Action) AbstractValidator<BookFilterRequest>.When(Func<BookFilterRequest, ValidationContext<BookFilterRequest>, bool>, Action) AbstractValidator<BookFilterRequest>.Unless(Func<BookFilterRequest, bool>, Action) AbstractValidator<BookFilterRequest>.Unless(Func<BookFilterRequest, ValidationContext<BookFilterRequest>, bool>, Action) AbstractValidator<BookFilterRequest>.WhenAsync(Func<BookFilterRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<BookFilterRequest>.WhenAsync(Func<BookFilterRequest, ValidationContext<BookFilterRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<BookFilterRequest>.UnlessAsync(Func<BookFilterRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<BookFilterRequest>.UnlessAsync(Func<BookFilterRequest, ValidationContext<BookFilterRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<BookFilterRequest>.Include(IValidator<BookFilterRequest>) AbstractValidator<BookFilterRequest>.Include<TValidator>(Func<BookFilterRequest, TValidator>) AbstractValidator<BookFilterRequest>.GetEnumerator() AbstractValidator<BookFilterRequest>.EnsureInstanceNotNull(object) AbstractValidator<BookFilterRequest>.PreValidate(ValidationContext<BookFilterRequest>, ValidationResult) AbstractValidator<BookFilterRequest>.RaiseValidationException(ValidationContext<BookFilterRequest>, ValidationResult) AbstractValidator<BookFilterRequest>.CascadeMode AbstractValidator<BookFilterRequest>.ClassLevelCascadeMode AbstractValidator<BookFilterRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BookFilterRequestValidator(PaginationOptions) public BookFilterRequestValidator(PaginationOptions paginationConfiguration) Parameters paginationConfiguration PaginationOptions"
  },
  "api/LibraryApi.Validators.Genre.CreateGenreRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Genre.CreateGenreRequestValidator.html",
    "title": "Class CreateGenreRequestValidator | ELibrary",
    "keywords": "Class CreateGenreRequestValidator Namespace LibraryApi.Validators.Genre Assembly LibraryApi.dll public class CreateGenreRequestValidator : AbstractValidator<CreateGenreRequest>, IValidator<CreateGenreRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateGenreRequest> CreateGenreRequestValidator Implements IValidator<CreateGenreRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateGenreRequest>.Validate(CreateGenreRequest) AbstractValidator<CreateGenreRequest>.ValidateAsync(CreateGenreRequest, CancellationToken) AbstractValidator<CreateGenreRequest>.Validate(ValidationContext<CreateGenreRequest>) AbstractValidator<CreateGenreRequest>.ValidateAsync(ValidationContext<CreateGenreRequest>, CancellationToken) AbstractValidator<CreateGenreRequest>.CreateDescriptor() AbstractValidator<CreateGenreRequest>.RuleFor<TProperty>(Expression<Func<CreateGenreRequest, TProperty>>) AbstractValidator<CreateGenreRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateGenreRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateGenreRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateGenreRequest, TProperty>>, Func<CreateGenreRequest, TProperty, TTransformed>) AbstractValidator<CreateGenreRequest>.RuleForEach<TElement>(Expression<Func<CreateGenreRequest, IEnumerable<TElement>>>) AbstractValidator<CreateGenreRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateGenreRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateGenreRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateGenreRequest, IEnumerable<TElement>>>, Func<CreateGenreRequest, TElement, TTransformed>) AbstractValidator<CreateGenreRequest>.RuleSet(string, Action) AbstractValidator<CreateGenreRequest>.When(Func<CreateGenreRequest, bool>, Action) AbstractValidator<CreateGenreRequest>.When(Func<CreateGenreRequest, ValidationContext<CreateGenreRequest>, bool>, Action) AbstractValidator<CreateGenreRequest>.Unless(Func<CreateGenreRequest, bool>, Action) AbstractValidator<CreateGenreRequest>.Unless(Func<CreateGenreRequest, ValidationContext<CreateGenreRequest>, bool>, Action) AbstractValidator<CreateGenreRequest>.WhenAsync(Func<CreateGenreRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateGenreRequest>.WhenAsync(Func<CreateGenreRequest, ValidationContext<CreateGenreRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateGenreRequest>.UnlessAsync(Func<CreateGenreRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateGenreRequest>.UnlessAsync(Func<CreateGenreRequest, ValidationContext<CreateGenreRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateGenreRequest>.Include(IValidator<CreateGenreRequest>) AbstractValidator<CreateGenreRequest>.Include<TValidator>(Func<CreateGenreRequest, TValidator>) AbstractValidator<CreateGenreRequest>.GetEnumerator() AbstractValidator<CreateGenreRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateGenreRequest>.PreValidate(ValidationContext<CreateGenreRequest>, ValidationResult) AbstractValidator<CreateGenreRequest>.RaiseValidationException(ValidationContext<CreateGenreRequest>, ValidationResult) AbstractValidator<CreateGenreRequest>.CascadeMode AbstractValidator<CreateGenreRequest>.ClassLevelCascadeMode AbstractValidator<CreateGenreRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateGenreRequestValidator() public CreateGenreRequestValidator()"
  },
  "api/LibraryApi.Validators.Genre.UpdateGenreRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Genre.UpdateGenreRequestValidator.html",
    "title": "Class UpdateGenreRequestValidator | ELibrary",
    "keywords": "Class UpdateGenreRequestValidator Namespace LibraryApi.Validators.Genre Assembly LibraryApi.dll public class UpdateGenreRequestValidator : AbstractValidator<UpdateGenreRequest>, IValidator<UpdateGenreRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateGenreRequest> UpdateGenreRequestValidator Implements IValidator<UpdateGenreRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateGenreRequest>.Validate(UpdateGenreRequest) AbstractValidator<UpdateGenreRequest>.ValidateAsync(UpdateGenreRequest, CancellationToken) AbstractValidator<UpdateGenreRequest>.Validate(ValidationContext<UpdateGenreRequest>) AbstractValidator<UpdateGenreRequest>.ValidateAsync(ValidationContext<UpdateGenreRequest>, CancellationToken) AbstractValidator<UpdateGenreRequest>.CreateDescriptor() AbstractValidator<UpdateGenreRequest>.RuleFor<TProperty>(Expression<Func<UpdateGenreRequest, TProperty>>) AbstractValidator<UpdateGenreRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateGenreRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateGenreRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateGenreRequest, TProperty>>, Func<UpdateGenreRequest, TProperty, TTransformed>) AbstractValidator<UpdateGenreRequest>.RuleForEach<TElement>(Expression<Func<UpdateGenreRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateGenreRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateGenreRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateGenreRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateGenreRequest, IEnumerable<TElement>>>, Func<UpdateGenreRequest, TElement, TTransformed>) AbstractValidator<UpdateGenreRequest>.RuleSet(string, Action) AbstractValidator<UpdateGenreRequest>.When(Func<UpdateGenreRequest, bool>, Action) AbstractValidator<UpdateGenreRequest>.When(Func<UpdateGenreRequest, ValidationContext<UpdateGenreRequest>, bool>, Action) AbstractValidator<UpdateGenreRequest>.Unless(Func<UpdateGenreRequest, bool>, Action) AbstractValidator<UpdateGenreRequest>.Unless(Func<UpdateGenreRequest, ValidationContext<UpdateGenreRequest>, bool>, Action) AbstractValidator<UpdateGenreRequest>.WhenAsync(Func<UpdateGenreRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateGenreRequest>.WhenAsync(Func<UpdateGenreRequest, ValidationContext<UpdateGenreRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateGenreRequest>.UnlessAsync(Func<UpdateGenreRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateGenreRequest>.UnlessAsync(Func<UpdateGenreRequest, ValidationContext<UpdateGenreRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateGenreRequest>.Include(IValidator<UpdateGenreRequest>) AbstractValidator<UpdateGenreRequest>.Include<TValidator>(Func<UpdateGenreRequest, TValidator>) AbstractValidator<UpdateGenreRequest>.GetEnumerator() AbstractValidator<UpdateGenreRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateGenreRequest>.PreValidate(ValidationContext<UpdateGenreRequest>, ValidationResult) AbstractValidator<UpdateGenreRequest>.RaiseValidationException(ValidationContext<UpdateGenreRequest>, ValidationResult) AbstractValidator<UpdateGenreRequest>.CascadeMode AbstractValidator<UpdateGenreRequest>.ClassLevelCascadeMode AbstractValidator<UpdateGenreRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateGenreRequestValidator() public UpdateGenreRequestValidator()"
  },
  "api/LibraryApi.Validators.Genre.html": {
    "href": "api/LibraryApi.Validators.Genre.html",
    "title": "Namespace LibraryApi.Validators.Genre | ELibrary",
    "keywords": "Namespace LibraryApi.Validators.Genre Classes CreateGenreRequestValidator UpdateGenreRequestValidator"
  },
  "api/LibraryApi.Validators.GetByIdsRequestValidator.html": {
    "href": "api/LibraryApi.Validators.GetByIdsRequestValidator.html",
    "title": "Class GetByIdsRequestValidator | ELibrary",
    "keywords": "Class GetByIdsRequestValidator Namespace LibraryApi.Validators Assembly LibraryApi.dll public class GetByIdsRequestValidator : AbstractValidator<GetByIdsRequest>, IValidator<GetByIdsRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<GetByIdsRequest> GetByIdsRequestValidator Implements IValidator<GetByIdsRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<GetByIdsRequest>.Validate(GetByIdsRequest) AbstractValidator<GetByIdsRequest>.ValidateAsync(GetByIdsRequest, CancellationToken) AbstractValidator<GetByIdsRequest>.Validate(ValidationContext<GetByIdsRequest>) AbstractValidator<GetByIdsRequest>.ValidateAsync(ValidationContext<GetByIdsRequest>, CancellationToken) AbstractValidator<GetByIdsRequest>.CreateDescriptor() AbstractValidator<GetByIdsRequest>.RuleFor<TProperty>(Expression<Func<GetByIdsRequest, TProperty>>) AbstractValidator<GetByIdsRequest>.Transform<TProperty, TTransformed>(Expression<Func<GetByIdsRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<GetByIdsRequest>.Transform<TProperty, TTransformed>(Expression<Func<GetByIdsRequest, TProperty>>, Func<GetByIdsRequest, TProperty, TTransformed>) AbstractValidator<GetByIdsRequest>.RuleForEach<TElement>(Expression<Func<GetByIdsRequest, IEnumerable<TElement>>>) AbstractValidator<GetByIdsRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<GetByIdsRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<GetByIdsRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<GetByIdsRequest, IEnumerable<TElement>>>, Func<GetByIdsRequest, TElement, TTransformed>) AbstractValidator<GetByIdsRequest>.RuleSet(string, Action) AbstractValidator<GetByIdsRequest>.When(Func<GetByIdsRequest, bool>, Action) AbstractValidator<GetByIdsRequest>.When(Func<GetByIdsRequest, ValidationContext<GetByIdsRequest>, bool>, Action) AbstractValidator<GetByIdsRequest>.Unless(Func<GetByIdsRequest, bool>, Action) AbstractValidator<GetByIdsRequest>.Unless(Func<GetByIdsRequest, ValidationContext<GetByIdsRequest>, bool>, Action) AbstractValidator<GetByIdsRequest>.WhenAsync(Func<GetByIdsRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<GetByIdsRequest>.WhenAsync(Func<GetByIdsRequest, ValidationContext<GetByIdsRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetByIdsRequest>.UnlessAsync(Func<GetByIdsRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<GetByIdsRequest>.UnlessAsync(Func<GetByIdsRequest, ValidationContext<GetByIdsRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetByIdsRequest>.Include(IValidator<GetByIdsRequest>) AbstractValidator<GetByIdsRequest>.Include<TValidator>(Func<GetByIdsRequest, TValidator>) AbstractValidator<GetByIdsRequest>.GetEnumerator() AbstractValidator<GetByIdsRequest>.EnsureInstanceNotNull(object) AbstractValidator<GetByIdsRequest>.PreValidate(ValidationContext<GetByIdsRequest>, ValidationResult) AbstractValidator<GetByIdsRequest>.RaiseValidationException(ValidationContext<GetByIdsRequest>, ValidationResult) AbstractValidator<GetByIdsRequest>.CascadeMode AbstractValidator<GetByIdsRequest>.ClassLevelCascadeMode AbstractValidator<GetByIdsRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetByIdsRequestValidator(PaginationOptions) public GetByIdsRequestValidator(PaginationOptions paginationConfiguration) Parameters paginationConfiguration PaginationOptions"
  },
  "api/LibraryApi.Validators.LibraryFilterRequestValidator.html": {
    "href": "api/LibraryApi.Validators.LibraryFilterRequestValidator.html",
    "title": "Class LibraryFilterRequestValidator | ELibrary",
    "keywords": "Class LibraryFilterRequestValidator Namespace LibraryApi.Validators Assembly LibraryApi.dll public class LibraryFilterRequestValidator : AbstractValidator<LibraryFilterRequest>, IValidator<LibraryFilterRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<LibraryFilterRequest> LibraryFilterRequestValidator Implements IValidator<LibraryFilterRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<LibraryFilterRequest>.Validate(LibraryFilterRequest) AbstractValidator<LibraryFilterRequest>.ValidateAsync(LibraryFilterRequest, CancellationToken) AbstractValidator<LibraryFilterRequest>.Validate(ValidationContext<LibraryFilterRequest>) AbstractValidator<LibraryFilterRequest>.ValidateAsync(ValidationContext<LibraryFilterRequest>, CancellationToken) AbstractValidator<LibraryFilterRequest>.CreateDescriptor() AbstractValidator<LibraryFilterRequest>.RuleFor<TProperty>(Expression<Func<LibraryFilterRequest, TProperty>>) AbstractValidator<LibraryFilterRequest>.Transform<TProperty, TTransformed>(Expression<Func<LibraryFilterRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<LibraryFilterRequest>.Transform<TProperty, TTransformed>(Expression<Func<LibraryFilterRequest, TProperty>>, Func<LibraryFilterRequest, TProperty, TTransformed>) AbstractValidator<LibraryFilterRequest>.RuleForEach<TElement>(Expression<Func<LibraryFilterRequest, IEnumerable<TElement>>>) AbstractValidator<LibraryFilterRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<LibraryFilterRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<LibraryFilterRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<LibraryFilterRequest, IEnumerable<TElement>>>, Func<LibraryFilterRequest, TElement, TTransformed>) AbstractValidator<LibraryFilterRequest>.RuleSet(string, Action) AbstractValidator<LibraryFilterRequest>.When(Func<LibraryFilterRequest, bool>, Action) AbstractValidator<LibraryFilterRequest>.When(Func<LibraryFilterRequest, ValidationContext<LibraryFilterRequest>, bool>, Action) AbstractValidator<LibraryFilterRequest>.Unless(Func<LibraryFilterRequest, bool>, Action) AbstractValidator<LibraryFilterRequest>.Unless(Func<LibraryFilterRequest, ValidationContext<LibraryFilterRequest>, bool>, Action) AbstractValidator<LibraryFilterRequest>.WhenAsync(Func<LibraryFilterRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<LibraryFilterRequest>.WhenAsync(Func<LibraryFilterRequest, ValidationContext<LibraryFilterRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<LibraryFilterRequest>.UnlessAsync(Func<LibraryFilterRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<LibraryFilterRequest>.UnlessAsync(Func<LibraryFilterRequest, ValidationContext<LibraryFilterRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<LibraryFilterRequest>.Include(IValidator<LibraryFilterRequest>) AbstractValidator<LibraryFilterRequest>.Include<TValidator>(Func<LibraryFilterRequest, TValidator>) AbstractValidator<LibraryFilterRequest>.GetEnumerator() AbstractValidator<LibraryFilterRequest>.EnsureInstanceNotNull(object) AbstractValidator<LibraryFilterRequest>.PreValidate(ValidationContext<LibraryFilterRequest>, ValidationResult) AbstractValidator<LibraryFilterRequest>.RaiseValidationException(ValidationContext<LibraryFilterRequest>, ValidationResult) AbstractValidator<LibraryFilterRequest>.CascadeMode AbstractValidator<LibraryFilterRequest>.ClassLevelCascadeMode AbstractValidator<LibraryFilterRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LibraryFilterRequestValidator(PaginationOptions) public LibraryFilterRequestValidator(PaginationOptions paginationConfiguration) Parameters paginationConfiguration PaginationOptions"
  },
  "api/LibraryApi.Validators.Publisher.CreatePublisherRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Publisher.CreatePublisherRequestValidator.html",
    "title": "Class CreatePublisherRequestValidator | ELibrary",
    "keywords": "Class CreatePublisherRequestValidator Namespace LibraryApi.Validators.Publisher Assembly LibraryApi.dll public class CreatePublisherRequestValidator : AbstractValidator<CreatePublisherRequest>, IValidator<CreatePublisherRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreatePublisherRequest> CreatePublisherRequestValidator Implements IValidator<CreatePublisherRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreatePublisherRequest>.Validate(CreatePublisherRequest) AbstractValidator<CreatePublisherRequest>.ValidateAsync(CreatePublisherRequest, CancellationToken) AbstractValidator<CreatePublisherRequest>.Validate(ValidationContext<CreatePublisherRequest>) AbstractValidator<CreatePublisherRequest>.ValidateAsync(ValidationContext<CreatePublisherRequest>, CancellationToken) AbstractValidator<CreatePublisherRequest>.CreateDescriptor() AbstractValidator<CreatePublisherRequest>.RuleFor<TProperty>(Expression<Func<CreatePublisherRequest, TProperty>>) AbstractValidator<CreatePublisherRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreatePublisherRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreatePublisherRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreatePublisherRequest, TProperty>>, Func<CreatePublisherRequest, TProperty, TTransformed>) AbstractValidator<CreatePublisherRequest>.RuleForEach<TElement>(Expression<Func<CreatePublisherRequest, IEnumerable<TElement>>>) AbstractValidator<CreatePublisherRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreatePublisherRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreatePublisherRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreatePublisherRequest, IEnumerable<TElement>>>, Func<CreatePublisherRequest, TElement, TTransformed>) AbstractValidator<CreatePublisherRequest>.RuleSet(string, Action) AbstractValidator<CreatePublisherRequest>.When(Func<CreatePublisherRequest, bool>, Action) AbstractValidator<CreatePublisherRequest>.When(Func<CreatePublisherRequest, ValidationContext<CreatePublisherRequest>, bool>, Action) AbstractValidator<CreatePublisherRequest>.Unless(Func<CreatePublisherRequest, bool>, Action) AbstractValidator<CreatePublisherRequest>.Unless(Func<CreatePublisherRequest, ValidationContext<CreatePublisherRequest>, bool>, Action) AbstractValidator<CreatePublisherRequest>.WhenAsync(Func<CreatePublisherRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreatePublisherRequest>.WhenAsync(Func<CreatePublisherRequest, ValidationContext<CreatePublisherRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreatePublisherRequest>.UnlessAsync(Func<CreatePublisherRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreatePublisherRequest>.UnlessAsync(Func<CreatePublisherRequest, ValidationContext<CreatePublisherRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreatePublisherRequest>.Include(IValidator<CreatePublisherRequest>) AbstractValidator<CreatePublisherRequest>.Include<TValidator>(Func<CreatePublisherRequest, TValidator>) AbstractValidator<CreatePublisherRequest>.GetEnumerator() AbstractValidator<CreatePublisherRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreatePublisherRequest>.PreValidate(ValidationContext<CreatePublisherRequest>, ValidationResult) AbstractValidator<CreatePublisherRequest>.RaiseValidationException(ValidationContext<CreatePublisherRequest>, ValidationResult) AbstractValidator<CreatePublisherRequest>.CascadeMode AbstractValidator<CreatePublisherRequest>.ClassLevelCascadeMode AbstractValidator<CreatePublisherRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreatePublisherRequestValidator() public CreatePublisherRequestValidator()"
  },
  "api/LibraryApi.Validators.Publisher.UpdatePublisherRequestValidator.html": {
    "href": "api/LibraryApi.Validators.Publisher.UpdatePublisherRequestValidator.html",
    "title": "Class UpdatePublisherRequestValidator | ELibrary",
    "keywords": "Class UpdatePublisherRequestValidator Namespace LibraryApi.Validators.Publisher Assembly LibraryApi.dll public class UpdatePublisherRequestValidator : AbstractValidator<UpdatePublisherRequest>, IValidator<UpdatePublisherRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdatePublisherRequest> UpdatePublisherRequestValidator Implements IValidator<UpdatePublisherRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdatePublisherRequest>.Validate(UpdatePublisherRequest) AbstractValidator<UpdatePublisherRequest>.ValidateAsync(UpdatePublisherRequest, CancellationToken) AbstractValidator<UpdatePublisherRequest>.Validate(ValidationContext<UpdatePublisherRequest>) AbstractValidator<UpdatePublisherRequest>.ValidateAsync(ValidationContext<UpdatePublisherRequest>, CancellationToken) AbstractValidator<UpdatePublisherRequest>.CreateDescriptor() AbstractValidator<UpdatePublisherRequest>.RuleFor<TProperty>(Expression<Func<UpdatePublisherRequest, TProperty>>) AbstractValidator<UpdatePublisherRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdatePublisherRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdatePublisherRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdatePublisherRequest, TProperty>>, Func<UpdatePublisherRequest, TProperty, TTransformed>) AbstractValidator<UpdatePublisherRequest>.RuleForEach<TElement>(Expression<Func<UpdatePublisherRequest, IEnumerable<TElement>>>) AbstractValidator<UpdatePublisherRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdatePublisherRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdatePublisherRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdatePublisherRequest, IEnumerable<TElement>>>, Func<UpdatePublisherRequest, TElement, TTransformed>) AbstractValidator<UpdatePublisherRequest>.RuleSet(string, Action) AbstractValidator<UpdatePublisherRequest>.When(Func<UpdatePublisherRequest, bool>, Action) AbstractValidator<UpdatePublisherRequest>.When(Func<UpdatePublisherRequest, ValidationContext<UpdatePublisherRequest>, bool>, Action) AbstractValidator<UpdatePublisherRequest>.Unless(Func<UpdatePublisherRequest, bool>, Action) AbstractValidator<UpdatePublisherRequest>.Unless(Func<UpdatePublisherRequest, ValidationContext<UpdatePublisherRequest>, bool>, Action) AbstractValidator<UpdatePublisherRequest>.WhenAsync(Func<UpdatePublisherRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdatePublisherRequest>.WhenAsync(Func<UpdatePublisherRequest, ValidationContext<UpdatePublisherRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdatePublisherRequest>.UnlessAsync(Func<UpdatePublisherRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdatePublisherRequest>.UnlessAsync(Func<UpdatePublisherRequest, ValidationContext<UpdatePublisherRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdatePublisherRequest>.Include(IValidator<UpdatePublisherRequest>) AbstractValidator<UpdatePublisherRequest>.Include<TValidator>(Func<UpdatePublisherRequest, TValidator>) AbstractValidator<UpdatePublisherRequest>.GetEnumerator() AbstractValidator<UpdatePublisherRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdatePublisherRequest>.PreValidate(ValidationContext<UpdatePublisherRequest>, ValidationResult) AbstractValidator<UpdatePublisherRequest>.RaiseValidationException(ValidationContext<UpdatePublisherRequest>, ValidationResult) AbstractValidator<UpdatePublisherRequest>.CascadeMode AbstractValidator<UpdatePublisherRequest>.ClassLevelCascadeMode AbstractValidator<UpdatePublisherRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdatePublisherRequestValidator() public UpdatePublisherRequestValidator()"
  },
  "api/LibraryApi.Validators.Publisher.html": {
    "href": "api/LibraryApi.Validators.Publisher.html",
    "title": "Namespace LibraryApi.Validators.Publisher | ELibrary",
    "keywords": "Namespace LibraryApi.Validators.Publisher Classes CreatePublisherRequestValidator UpdatePublisherRequestValidator"
  },
  "api/LibraryApi.Validators.html": {
    "href": "api/LibraryApi.Validators.html",
    "title": "Namespace LibraryApi.Validators | ELibrary",
    "keywords": "Namespace LibraryApi.Validators Classes BookFilterRequestValidator GetByIdsRequestValidator LibraryFilterRequestValidator"
  },
  "api/LibraryApi.html": {
    "href": "api/LibraryApi.html",
    "title": "Namespace LibraryApi | ELibrary",
    "keywords": "Namespace LibraryApi Classes AutoMapperProfile Configuration"
  },
  "api/LibraryShopEntities.Data.LibraryDbContext.html": {
    "href": "api/LibraryShopEntities.Data.LibraryDbContext.html",
    "title": "Class LibraryDbContext | ELibrary",
    "keywords": "Class LibraryDbContext Namespace LibraryShopEntities.Data Assembly LibraryShopEntities.dll public class LibraryDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext LibraryDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LibraryDbContext(DbContextOptions) public LibraryDbContext(DbContextOptions options) Parameters options DbContextOptions Properties Authors public virtual DbSet<Author> Authors { get; set; } Property Value DbSet<Author> BookPopularities public virtual DbSet<BookPopularity> BookPopularities { get; set; } Property Value DbSet<BookPopularity> Books public virtual DbSet<Book> Books { get; set; } Property Value DbSet<Book> Genres public virtual DbSet<Genre> Genres { get; set; } Property Value DbSet<Genre> Publishers public virtual DbSet<Publisher> Publishers { get; set; } Property Value DbSet<Publisher> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples."
  },
  "api/LibraryShopEntities.Data.ShopDbContext.html": {
    "href": "api/LibraryShopEntities.Data.ShopDbContext.html",
    "title": "Class ShopDbContext | ELibrary",
    "keywords": "Class ShopDbContext Namespace LibraryShopEntities.Data Assembly LibraryShopEntities.dll public class ShopDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext ShopDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShopDbContext(DbContextOptions) public ShopDbContext(DbContextOptions options) Parameters options DbContextOptions Properties CartBooks public virtual DbSet<CartBook> CartBooks { get; set; } Property Value DbSet<CartBook> Carts public virtual DbSet<Cart> Carts { get; set; } Property Value DbSet<Cart> Clients public virtual DbSet<Client> Clients { get; set; } Property Value DbSet<Client> OrderBooks public virtual DbSet<OrderBook> OrderBooks { get; set; } Property Value DbSet<OrderBook> Orders public virtual DbSet<Order> Orders { get; set; } Property Value DbSet<Order> StockBookChanges public virtual DbSet<StockBookChange> StockBookChanges { get; set; } Property Value DbSet<StockBookChange> StockBookOrders public virtual DbSet<StockBookOrder> StockBookOrders { get; set; } Property Value DbSet<StockBookOrder> Methods OnModelCreating(ModelBuilder) Override this method to further configure the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on your derived context. The resulting model may be cached and re-used for subsequent instances of your derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context. Databases (and other extensions) typically define extension methods on this object that allow you to configure aspects of the model that are specific to a given database. Remarks If a model is explicitly set on the options for this context (via UseModel(IModel)) then this method will not be run. However, it will still run when creating a compiled model. See Modeling entity types and relationships for more information and examples. SaveChangesAsync(CancellationToken) Saves all changes made in this context to the database. public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<int> A task that represents the asynchronous save operation. The task result contains the number of state entries written to the database. Remarks This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Entity Framework Core does not support multiple parallel operations being run on the same DbContext instance. This includes both parallel execution of async queries and any explicit concurrent use from multiple threads. Therefore, always await async calls immediately, or use separate DbContext instances for operations that execute in parallel. See Avoiding DbContext threading issues for more information and examples. See Saving data in EF Core for more information and examples. Exceptions DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory. OperationCanceledException If the CancellationToken is canceled."
  },
  "api/LibraryShopEntities.Data.html": {
    "href": "api/LibraryShopEntities.Data.html",
    "title": "Namespace LibraryShopEntities.Data | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Data Classes LibraryDbContext ShopDbContext"
  },
  "api/LibraryShopEntities.Domain.Dtos.Library.AuthorResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Library.AuthorResponse.html",
    "title": "Class AuthorResponse | ELibrary",
    "keywords": "Class AuthorResponse Namespace LibraryShopEntities.Domain.Dtos.Library Assembly LibraryShopEntities.dll public class AuthorResponse Inheritance object AuthorResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int LastName public string? LastName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Library.BookResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Library.BookResponse.html",
    "title": "Class BookResponse | ELibrary",
    "keywords": "Class BookResponse Namespace LibraryShopEntities.Domain.Dtos.Library Assembly LibraryShopEntities.dll public class BookResponse Inheritance object BookResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Author public AuthorResponse? Author { get; set; } Property Value AuthorResponse CoverImgUrl public string? CoverImgUrl { get; set; } Property Value string CoverType public CoverType CoverType { get; set; } Property Value CoverType Description public string? Description { get; set; } Property Value string Genre public GenreResponse? Genre { get; set; } Property Value GenreResponse Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string PageAmount public int PageAmount { get; set; } Property Value int Price public decimal Price { get; set; } Property Value decimal PublicationDate public DateTime PublicationDate { get; set; } Property Value DateTime Publisher public PublisherResponse? Publisher { get; set; } Property Value PublisherResponse StockAmount public int StockAmount { get; set; } Property Value int"
  },
  "api/LibraryShopEntities.Domain.Dtos.Library.GenreResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Library.GenreResponse.html",
    "title": "Class GenreResponse | ELibrary",
    "keywords": "Class GenreResponse Namespace LibraryShopEntities.Domain.Dtos.Library Assembly LibraryShopEntities.dll public class GenreResponse Inheritance object GenreResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Library.PublisherResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Library.PublisherResponse.html",
    "title": "Class PublisherResponse | ELibrary",
    "keywords": "Class PublisherResponse Namespace LibraryShopEntities.Domain.Dtos.Library Assembly LibraryShopEntities.dll public class PublisherResponse Inheritance object PublisherResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int Name public string? Name { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Library.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Library.html",
    "title": "Namespace LibraryShopEntities.Domain.Dtos.Library | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Dtos.Library Classes AuthorResponse BookResponse GenreResponse PublisherResponse"
  },
  "api/LibraryShopEntities.Domain.Dtos.SharedRequests.GetByIdsRequest.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.SharedRequests.GetByIdsRequest.html",
    "title": "Class GetByIdsRequest | ELibrary",
    "keywords": "Class GetByIdsRequest Namespace LibraryShopEntities.Domain.Dtos.SharedRequests Assembly LibraryShopEntities.dll public class GetByIdsRequest Inheritance object GetByIdsRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Ids public List<int> Ids { get; set; } Property Value List<int> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/LibraryShopEntities.Domain.Dtos.SharedRequests.RaiseBookPopularityRequest.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.SharedRequests.RaiseBookPopularityRequest.html",
    "title": "Class RaiseBookPopularityRequest | ELibrary",
    "keywords": "Class RaiseBookPopularityRequest Namespace LibraryShopEntities.Domain.Dtos.SharedRequests Assembly LibraryShopEntities.dll public class RaiseBookPopularityRequest Inheritance object RaiseBookPopularityRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Ids public List<int> Ids { get; set; } Property Value List<int>"
  },
  "api/LibraryShopEntities.Domain.Dtos.SharedRequests.UpdateBookStockAmountRequest.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.SharedRequests.UpdateBookStockAmountRequest.html",
    "title": "Class UpdateBookStockAmountRequest | ELibrary",
    "keywords": "Class UpdateBookStockAmountRequest Namespace LibraryShopEntities.Domain.Dtos.SharedRequests Assembly LibraryShopEntities.dll public class UpdateBookStockAmountRequest Inheritance object UpdateBookStockAmountRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookId public int BookId { get; set; } Property Value int ChangeAmount public int ChangeAmount { get; set; } Property Value int"
  },
  "api/LibraryShopEntities.Domain.Dtos.SharedRequests.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.SharedRequests.html",
    "title": "Namespace LibraryShopEntities.Domain.Dtos.SharedRequests | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Dtos.SharedRequests Classes GetByIdsRequest RaiseBookPopularityRequest UpdateBookStockAmountRequest"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.CartBookResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.CartBookResponse.html",
    "title": "Class CartBookResponse | ELibrary",
    "keywords": "Class CartBookResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class CartBookResponse Inheritance object CartBookResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Book public BookResponse? Book { get; set; } Property Value BookResponse BookAmount public int BookAmount { get; set; } Property Value int BookId public int BookId { get; set; } Property Value int Id public string? Id { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.CartResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.CartResponse.html",
    "title": "Class CartResponse | ELibrary",
    "keywords": "Class CartResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class CartResponse Inheritance object CartResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Books public List<CartBookResponse>? Books { get; set; } Property Value List<CartBookResponse>"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.ClientResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.ClientResponse.html",
    "title": "Class ClientResponse | ELibrary",
    "keywords": "Class ClientResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class ClientResponse Inheritance object ClientResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string? Address { get; set; } Property Value string DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime Email public string? Email { get; set; } Property Value string Id public string? Id { get; set; } Property Value string LastName public string? LastName { get; set; } Property Value string MiddleName public string? MiddleName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Phone public string? Phone { get; set; } Property Value string UserId public string? UserId { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.OrderBookResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.OrderBookResponse.html",
    "title": "Class OrderBookResponse | ELibrary",
    "keywords": "Class OrderBookResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class OrderBookResponse Inheritance object OrderBookResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Book public BookResponse? Book { get; set; } Property Value BookResponse BookAmount public int BookAmount { get; set; } Property Value int BookId public int BookId { get; set; } Property Value int BookPrice public decimal BookPrice { get; set; } Property Value decimal Id public string? Id { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.OrderResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.OrderResponse.html",
    "title": "Class OrderResponse | ELibrary",
    "keywords": "Class OrderResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class OrderResponse Inheritance object OrderResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Client public ClientResponse? Client { get; set; } Property Value ClientResponse ContactClientName public string ContactClientName { get; set; } Property Value string ContactPhone public string ContactPhone { get; set; } Property Value string CreatedAt public DateTime CreatedAt { get; set; } Property Value DateTime DeliveryAddress public string? DeliveryAddress { get; set; } Property Value string DeliveryMethod public DeliveryMethod DeliveryMethod { get; set; } Property Value DeliveryMethod DeliveryTime public DateTime DeliveryTime { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int OrderAmount public int OrderAmount { get; set; } Property Value int OrderBooks public List<OrderBookResponse>? OrderBooks { get; set; } Property Value List<OrderBookResponse> OrderStatus public OrderStatus OrderStatus { get; set; } Property Value OrderStatus PaymentMethod public PaymentMethod PaymentMethod { get; set; } Property Value PaymentMethod TotalPrice public decimal TotalPrice { get; set; } Property Value decimal UpdatedAt public DateTime UpdatedAt { get; set; } Property Value DateTime"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.StockBookChangeResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.StockBookChangeResponse.html",
    "title": "Class StockBookChangeResponse | ELibrary",
    "keywords": "Class StockBookChangeResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class StockBookChangeResponse Inheritance object StockBookChangeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Book public BookResponse? Book { get; set; } Property Value BookResponse BookId public int BookId { get; set; } Property Value int ChangeAmount public int ChangeAmount { get; set; } Property Value int Id public int Id { get; set; } Property Value int"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.StockBookOrderResponse.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.StockBookOrderResponse.html",
    "title": "Class StockBookOrderResponse | ELibrary",
    "keywords": "Class StockBookOrderResponse Namespace LibraryShopEntities.Domain.Dtos.Shop Assembly LibraryShopEntities.dll public class StockBookOrderResponse Inheritance object StockBookOrderResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Client public ClientResponse? Client { get; set; } Property Value ClientResponse CreatedAt public DateTime CreatedAt { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int StockBookChanges public List<StockBookChangeResponse>? StockBookChanges { get; set; } Property Value List<StockBookChangeResponse> TotalChangeAmount public int TotalChangeAmount { get; set; } Property Value int Type public StockBookOrderType Type { get; set; } Property Value StockBookOrderType UpdatedAt public DateTime UpdatedAt { get; set; } Property Value DateTime"
  },
  "api/LibraryShopEntities.Domain.Dtos.Shop.html": {
    "href": "api/LibraryShopEntities.Domain.Dtos.Shop.html",
    "title": "Namespace LibraryShopEntities.Domain.Dtos.Shop | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Dtos.Shop Classes CartBookResponse CartResponse ClientResponse OrderBookResponse OrderResponse StockBookChangeResponse StockBookOrderResponse"
  },
  "api/LibraryShopEntities.Domain.Entities.ITrackable.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.ITrackable.html",
    "title": "Interface ITrackable | ELibrary",
    "keywords": "Interface ITrackable Namespace LibraryShopEntities.Domain.Entities Assembly LibraryShopEntities.dll public interface ITrackable Properties CreatedAt DateTime CreatedAt { get; set; } Property Value DateTime UpdatedAt DateTime UpdatedAt { get; set; } Property Value DateTime"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.Author.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.Author.html",
    "title": "Class Author | ELibrary",
    "keywords": "Class Author Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public class Author : BaseLibraryEntity Inheritance object BaseLibraryEntity Author Inherited Members BaseLibraryEntity.Id BaseLibraryEntity.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth [Required] public DateTime DateOfBirth { get; set; } Property Value DateTime LastName [Required] [MaxLength(256)] public string LastName { get; set; } Property Value string Methods Copy(BaseLibraryEntity) public override void Copy(BaseLibraryEntity other) Parameters other BaseLibraryEntity"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.BaseLibraryEntity.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.BaseLibraryEntity.html",
    "title": "Class BaseLibraryEntity | ELibrary",
    "keywords": "Class BaseLibraryEntity Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public abstract class BaseLibraryEntity Inheritance object BaseLibraryEntity Derived Author Book Genre Publisher Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int Id { get; set; } Property Value int Name [Required] [MaxLength(256)] public string Name { get; set; } Property Value string Methods Copy(BaseLibraryEntity) public abstract void Copy(BaseLibraryEntity other) Parameters other BaseLibraryEntity"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.Book.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.Book.html",
    "title": "Class Book | ELibrary",
    "keywords": "Class Book Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public class Book : BaseLibraryEntity Inheritance object BaseLibraryEntity Book Inherited Members BaseLibraryEntity.Id BaseLibraryEntity.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Author [ForeignKey(\"AuthorId\")] public Author Author { get; set; } Property Value Author AuthorId [Required] public int AuthorId { get; set; } Property Value int BookPopularity public BookPopularity? BookPopularity { get; set; } Property Value BookPopularity CoverImgUrl [Required] [MaxLength(1024)] public string CoverImgUrl { get; set; } Property Value string CoverType [Required] public CoverType CoverType { get; set; } Property Value CoverType Description [MaxLength(4096)] public string? Description { get; set; } Property Value string Genre [ForeignKey(\"GenreId\")] public Genre Genre { get; set; } Property Value Genre GenreId [Required] public int GenreId { get; set; } Property Value int PageAmount [Required] [Range(1, 2147483647, ErrorMessage = \"Page amount must be greater than 0\")] public int PageAmount { get; set; } Property Value int Price [Required] [Column(TypeName = \"decimal(18, 2)\")] public decimal Price { get; set; } Property Value decimal PublicationDate [Required] public DateTime PublicationDate { get; set; } Property Value DateTime Publisher [ForeignKey(\"PublisherId\")] public Publisher Publisher { get; set; } Property Value Publisher PublisherId [Required] public int PublisherId { get; set; } Property Value int StockAmount [Range(0, 2147483647, ErrorMessage = \"Stock amount must be greater than or equal to 0\")] public int StockAmount { get; set; } Property Value int Methods Copy(BaseLibraryEntity) public override void Copy(BaseLibraryEntity other) Parameters other BaseLibraryEntity"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.BookPopularity.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.BookPopularity.html",
    "title": "Class BookPopularity | ELibrary",
    "keywords": "Class BookPopularity Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll [Index(\"BookId\", new string[] { }, IsUnique = true)] public class BookPopularity Inheritance object BookPopularity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Book [ForeignKey(\"BookId\")] public Book Book { get; set; } Property Value Book BookId [Required] public int BookId { get; set; } Property Value int Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int Id { get; set; } Property Value int Popularity public float Popularity { get; set; } Property Value float"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.CoverType.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.CoverType.html",
    "title": "Enum CoverType | ELibrary",
    "keywords": "Enum CoverType Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public enum CoverType Fields Any = 0 Hard = 1 Soft = 2"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.Genre.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.Genre.html",
    "title": "Class Genre | ELibrary",
    "keywords": "Class Genre Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public class Genre : BaseLibraryEntity Inheritance object BaseLibraryEntity Genre Inherited Members BaseLibraryEntity.Id BaseLibraryEntity.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Copy(BaseLibraryEntity) public override void Copy(BaseLibraryEntity other) Parameters other BaseLibraryEntity"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.Publisher.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.Publisher.html",
    "title": "Class Publisher | ELibrary",
    "keywords": "Class Publisher Namespace LibraryShopEntities.Domain.Entities.Library Assembly LibraryShopEntities.dll public class Publisher : BaseLibraryEntity Inheritance object BaseLibraryEntity Publisher Inherited Members BaseLibraryEntity.Id BaseLibraryEntity.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Copy(BaseLibraryEntity) public override void Copy(BaseLibraryEntity other) Parameters other BaseLibraryEntity"
  },
  "api/LibraryShopEntities.Domain.Entities.Library.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Library.html",
    "title": "Namespace LibraryShopEntities.Domain.Entities.Library | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Entities.Library Classes Author BaseLibraryEntity Book BookPopularity Genre Publisher Enums CoverType"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.Cart.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.Cart.html",
    "title": "Class Cart | ELibrary",
    "keywords": "Class Cart Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class Cart Inheritance object Cart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Books public List<CartBook> Books { get; set; } Property Value List<CartBook> Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public string Id { get; set; } Property Value string UserId [Required] [MaxLength(256)] public string UserId { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.CartBook.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.CartBook.html",
    "title": "Class CartBook | ELibrary",
    "keywords": "Class CartBook Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class CartBook Inheritance object CartBook Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookAmount [Required] [Range(0, 2147483647, ErrorMessage = \"Book amount must be greater or equal than 0\")] public int BookAmount { get; set; } Property Value int BookId [Required] public int BookId { get; set; } Property Value int Cart [ForeignKey(\"CartId\")] public Cart Cart { get; set; } Property Value Cart CartId [Required] public string CartId { get; set; } Property Value string Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public string Id { get; set; } Property Value string Methods Copy(CartBook) public void Copy(CartBook other) Parameters other CartBook"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.Client.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.Client.html",
    "title": "Class Client | ELibrary",
    "keywords": "Class Client Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll [Index(\"UserId\", new string[] { }, IsUnique = true)] public class Client Inheritance object Client Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address [MaxLength(512)] public string Address { get; set; } Property Value string DateOfBirth [Required] public DateTime DateOfBirth { get; set; } Property Value DateTime Email [Required] [MaxLength(256)] public string Email { get; set; } Property Value string Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public string Id { get; set; } Property Value string LastName [MaxLength(256)] public string LastName { get; set; } Property Value string MiddleName [MaxLength(256)] public string MiddleName { get; set; } Property Value string Name [Required] [MaxLength(256)] public string Name { get; set; } Property Value string Orders public List<Order> Orders { get; set; } Property Value List<Order> Phone [Required] [MinLength(10)] [MaxLength(50)] [Phone] public string Phone { get; set; } Property Value string UserId [Required] [MaxLength(256)] public string UserId { get; set; } Property Value string Methods Copy(Client) public void Copy(Client other) Parameters other Client"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.DeliveryMethod.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.DeliveryMethod.html",
    "title": "Enum DeliveryMethod | ELibrary",
    "keywords": "Enum DeliveryMethod Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public enum DeliveryMethod Fields AddressDelivery = 1 SelfPickup = 0"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.Order.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.Order.html",
    "title": "Class Order | ELibrary",
    "keywords": "Class Order Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class Order : ITrackable Inheritance object Order Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Client [ForeignKey(\"ClientId\")] public Client Client { get; set; } Property Value Client ClientId [Required] public string ClientId { get; set; } Property Value string ContactClientName [Required] [MaxLength(256)] public string ContactClientName { get; set; } Property Value string ContactPhone [Required] [MinLength(10)] [MaxLength(50)] [Phone] public string ContactPhone { get; set; } Property Value string CreatedAt [Required] public DateTime CreatedAt { get; set; } Property Value DateTime DeliveryAddress [Required] [MaxLength(512)] public string DeliveryAddress { get; set; } Property Value string DeliveryMethod [Required] public DeliveryMethod DeliveryMethod { get; set; } Property Value DeliveryMethod DeliveryTime [Required] public DateTime DeliveryTime { get; set; } Property Value DateTime Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int Id { get; set; } Property Value int OrderAmount [Range(1, 2147483647, ErrorMessage = \"Order amount must be at least 1.\")] public int OrderAmount { get; set; } Property Value int OrderBooks public List<OrderBook> OrderBooks { get; set; } Property Value List<OrderBook> OrderStatus [Required] public OrderStatus OrderStatus { get; set; } Property Value OrderStatus PaymentMethod [Required] public PaymentMethod PaymentMethod { get; set; } Property Value PaymentMethod TotalPrice [Required] [Column(TypeName = \"decimal(18, 2)\")] public decimal TotalPrice { get; set; } Property Value decimal UpdatedAt [Required] public DateTime UpdatedAt { get; set; } Property Value DateTime Methods Copy(Order) public void Copy(Order other) Parameters other Order"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.OrderBook.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.OrderBook.html",
    "title": "Class OrderBook | ELibrary",
    "keywords": "Class OrderBook Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class OrderBook Inheritance object OrderBook Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookAmount [Required] [Range(1, 2147483647, ErrorMessage = \"Book amount must be greater than 0\")] public int BookAmount { get; set; } Property Value int BookId [Required] public int BookId { get; set; } Property Value int BookPrice [Required] public decimal BookPrice { get; set; } Property Value decimal Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public string Id { get; set; } Property Value string Order [ForeignKey(\"OrderId\")] public Order Order { get; set; } Property Value Order OrderId [Required] public int OrderId { get; set; } Property Value int"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.OrderStatus.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.OrderStatus.html",
    "title": "Enum OrderStatus | ELibrary",
    "keywords": "Enum OrderStatus Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public enum OrderStatus Fields Canceled = -1 Completed = 1 InProcessing = 0"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.PaymentMethod.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.PaymentMethod.html",
    "title": "Enum PaymentMethod | ELibrary",
    "keywords": "Enum PaymentMethod Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public enum PaymentMethod Fields Cash = 0"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.StockBookChange.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.StockBookChange.html",
    "title": "Class StockBookChange | ELibrary",
    "keywords": "Class StockBookChange Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class StockBookChange Inheritance object StockBookChange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookId [Required] public int BookId { get; set; } Property Value int ChangeAmount [Required] public int ChangeAmount { get; set; } Property Value int Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int Id { get; set; } Property Value int"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.StockBookOrder.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.StockBookOrder.html",
    "title": "Class StockBookOrder | ELibrary",
    "keywords": "Class StockBookOrder Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public class StockBookOrder : ITrackable Inheritance object StockBookOrder Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Client [ForeignKey(\"ClientId\")] public Client Client { get; set; } Property Value Client ClientId [Required] public string ClientId { get; set; } Property Value string CreatedAt [Required] public DateTime CreatedAt { get; set; } Property Value DateTime Id [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public int Id { get; set; } Property Value int StockBookChanges public List<StockBookChange> StockBookChanges { get; set; } Property Value List<StockBookChange> TotalChangeAmount [Required] public int TotalChangeAmount { get; set; } Property Value int Type [Required] public StockBookOrderType Type { get; set; } Property Value StockBookOrderType UpdatedAt [Required] public DateTime UpdatedAt { get; set; } Property Value DateTime"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.StockBookOrderType.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.StockBookOrderType.html",
    "title": "Enum StockBookOrderType | ELibrary",
    "keywords": "Enum StockBookOrderType Namespace LibraryShopEntities.Domain.Entities.Shop Assembly LibraryShopEntities.dll public enum StockBookOrderType Fields ClientOrder = 1 ClientOrderCancel = 2 ManagerOrderCancel = 3 StockReplenishment = 0"
  },
  "api/LibraryShopEntities.Domain.Entities.Shop.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.Shop.html",
    "title": "Namespace LibraryShopEntities.Domain.Entities.Shop | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Entities.Shop Classes Cart CartBook Client Order OrderBook StockBookChange StockBookOrder Enums DeliveryMethod OrderStatus PaymentMethod StockBookOrderType"
  },
  "api/LibraryShopEntities.Domain.Entities.html": {
    "href": "api/LibraryShopEntities.Domain.Entities.html",
    "title": "Namespace LibraryShopEntities.Domain.Entities | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Domain.Entities Interfaces ITrackable"
  },
  "api/LibraryShopEntities.Filters.BookFilterRequest.html": {
    "href": "api/LibraryShopEntities.Filters.BookFilterRequest.html",
    "title": "Class BookFilterRequest | ELibrary",
    "keywords": "Class BookFilterRequest Namespace LibraryShopEntities.Filters Assembly LibraryShopEntities.dll public class BookFilterRequest : LibraryFilterRequest Inheritance object PaginationRequest LibraryFilterRequest BookFilterRequest Inherited Members LibraryFilterRequest.ContainsName PaginationRequest.PageNumber PaginationRequest.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties AuthorId public int? AuthorId { get; set; } Property Value int? CoverType public CoverType? CoverType { get; set; } Property Value CoverType? GenreId public int? GenreId { get; set; } Property Value int? MaxPageAmount public int? MaxPageAmount { get; set; } Property Value int? MaxPrice public decimal? MaxPrice { get; set; } Property Value decimal? MinPageAmount public int? MinPageAmount { get; set; } Property Value int? MinPrice public decimal? MinPrice { get; set; } Property Value decimal? OnlyInStock public bool? OnlyInStock { get; set; } Property Value bool? PublicationFrom public DateTime? PublicationFrom { get; set; } Property Value DateTime? PublicationTo public DateTime? PublicationTo { get; set; } Property Value DateTime? PublisherId public int? PublisherId { get; set; } Property Value int? Sorting public BookSorting? Sorting { get; set; } Property Value BookSorting? Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/LibraryShopEntities.Filters.BookSorting.html": {
    "href": "api/LibraryShopEntities.Filters.BookSorting.html",
    "title": "Enum BookSorting | ELibrary",
    "keywords": "Enum BookSorting Namespace LibraryShopEntities.Filters Assembly LibraryShopEntities.dll public enum BookSorting Fields LeastPopular = 1 MostPopular = 0"
  },
  "api/LibraryShopEntities.Filters.GetOrdersFilter.html": {
    "href": "api/LibraryShopEntities.Filters.GetOrdersFilter.html",
    "title": "Class GetOrdersFilter | ELibrary",
    "keywords": "Class GetOrdersFilter Namespace LibraryShopEntities.Filters Assembly LibraryShopEntities.dll public class GetOrdersFilter : PaginationRequest Inheritance object PaginationRequest GetOrdersFilter Inherited Members PaginationRequest.PageNumber PaginationRequest.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClientId public string? ClientId { get; set; } Property Value string"
  },
  "api/LibraryShopEntities.Filters.LibraryFilterRequest.html": {
    "href": "api/LibraryShopEntities.Filters.LibraryFilterRequest.html",
    "title": "Class LibraryFilterRequest | ELibrary",
    "keywords": "Class LibraryFilterRequest Namespace LibraryShopEntities.Filters Assembly LibraryShopEntities.dll public class LibraryFilterRequest : PaginationRequest Inheritance object PaginationRequest LibraryFilterRequest Derived BookFilterRequest Inherited Members PaginationRequest.PageNumber PaginationRequest.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties ContainsName public string ContainsName { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/LibraryShopEntities.Filters.html": {
    "href": "api/LibraryShopEntities.Filters.html",
    "title": "Namespace LibraryShopEntities.Filters | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Filters Classes BookFilterRequest GetOrdersFilter LibraryFilterRequest Enums BookSorting"
  },
  "api/LibraryShopEntities.Repositories.Library.AuthorRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.AuthorRepository.html",
    "title": "Class AuthorRepository | ELibrary",
    "keywords": "Class AuthorRepository Namespace LibraryShopEntities.Repositories.Library Assembly LibraryShopEntities.dll public class AuthorRepository : LibraryEntityRepository<Author>, ILibraryEntityRepository<Author> Inheritance object LibraryEntityRepository<Author> AuthorRepository Implements ILibraryEntityRepository<Author> Inherited Members LibraryEntityRepository<Author>.repository LibraryEntityRepository<Author>.GetByIdAsync(int, CancellationToken) LibraryEntityRepository<Author>.GetByIdsAsync(IEnumerable<int>, CancellationToken) LibraryEntityRepository<Author>.GetPaginatedAsync(LibraryFilterRequest, CancellationToken) LibraryEntityRepository<Author>.GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) LibraryEntityRepository<Author>.CreateAsync(Author, CancellationToken) LibraryEntityRepository<Author>.UpdateAsync(Author, CancellationToken) LibraryEntityRepository<Author>.UpdateRangeAsync(IEnumerable<Author>, CancellationToken) LibraryEntityRepository<Author>.DeleteAsync(Author, CancellationToken) LibraryEntityRepository<Author>.ApplyOrdering(IQueryable<Author>) LibraryEntityRepository<Author>.ApplyPagination(IQueryable<Author>, LibraryFilterRequest) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthorRepository(IDatabaseRepository<LibraryDbContext>) public AuthorRepository(IDatabaseRepository<LibraryDbContext> repository) Parameters repository IDatabaseRepository<LibraryDbContext> Methods ApplyFilter(IQueryable<Author>, LibraryFilterRequest) protected override IQueryable<Author> ApplyFilter(IQueryable<Author> query, LibraryFilterRequest req) Parameters query IQueryable<Author> req LibraryFilterRequest Returns IQueryable<Author>"
  },
  "api/LibraryShopEntities.Repositories.Library.BookRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.BookRepository.html",
    "title": "Class BookRepository | ELibrary",
    "keywords": "Class BookRepository Namespace LibraryShopEntities.Repositories.Library Assembly LibraryShopEntities.dll public sealed class BookRepository : LibraryEntityRepository<Book>, IBookRepository, ILibraryEntityRepository<Book> Inheritance object LibraryEntityRepository<Book> BookRepository Implements IBookRepository ILibraryEntityRepository<Book> Inherited Members LibraryEntityRepository<Book>.UpdateRangeAsync(IEnumerable<Book>, CancellationToken) LibraryEntityRepository<Book>.DeleteAsync(Book, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors BookRepository(IDatabaseRepository<LibraryDbContext>) public BookRepository(IDatabaseRepository<LibraryDbContext> repository) Parameters repository IDatabaseRepository<LibraryDbContext> Methods ApplyFilter(IQueryable<Book>, LibraryFilterRequest) protected override IQueryable<Book> ApplyFilter(IQueryable<Book> query, LibraryFilterRequest req) Parameters query IQueryable<Book> req LibraryFilterRequest Returns IQueryable<Book> CreateAsync(Book, CancellationToken) public override Task<Book> CreateAsync(Book book, CancellationToken cancellationToken) Parameters book Book cancellationToken CancellationToken Returns Task<Book> GetByIdAsync(int, CancellationToken) public override Task<Book?> GetByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<Book> GetByIdsAsync(IEnumerable<int>, CancellationToken) public override Task<IEnumerable<Book>> GetByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<Book>> GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) public override Task<int> GetItemTotalAmountAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<int> GetPaginatedAsync(LibraryFilterRequest, CancellationToken) public override Task<IEnumerable<Book>> GetPaginatedAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<IEnumerable<Book>> GetPopularitiesByIdsAsync(IEnumerable<int>, CancellationToken) public Task<IEnumerable<BookPopularity>> GetPopularitiesByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<BookPopularity>> UpdateAsync(Book, CancellationToken) public override Task<Book> UpdateAsync(Book book, CancellationToken cancellationToken) Parameters book Book cancellationToken CancellationToken Returns Task<Book> UpdatePopularityRangeAsync(IEnumerable<BookPopularity>, CancellationToken) public Task UpdatePopularityRangeAsync(IEnumerable<BookPopularity> popularities, CancellationToken cancellationToken) Parameters popularities IEnumerable<BookPopularity> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryShopEntities.Repositories.Library.IBookRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.IBookRepository.html",
    "title": "Interface IBookRepository | ELibrary",
    "keywords": "Interface IBookRepository Namespace LibraryShopEntities.Repositories.Library Assembly LibraryShopEntities.dll public interface IBookRepository : ILibraryEntityRepository<Book> Inherited Members ILibraryEntityRepository<Book>.CreateAsync(Book, CancellationToken) ILibraryEntityRepository<Book>.DeleteAsync(Book, CancellationToken) ILibraryEntityRepository<Book>.GetByIdAsync(int, CancellationToken) ILibraryEntityRepository<Book>.GetByIdsAsync(IEnumerable<int>, CancellationToken) ILibraryEntityRepository<Book>.GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) ILibraryEntityRepository<Book>.GetPaginatedAsync(LibraryFilterRequest, CancellationToken) ILibraryEntityRepository<Book>.UpdateAsync(Book, CancellationToken) ILibraryEntityRepository<Book>.UpdateRangeAsync(IEnumerable<Book>, CancellationToken) Methods GetPopularitiesByIdsAsync(IEnumerable<int>, CancellationToken) Task<IEnumerable<BookPopularity>> GetPopularitiesByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<BookPopularity>> UpdatePopularityRangeAsync(IEnumerable<BookPopularity>, CancellationToken) Task UpdatePopularityRangeAsync(IEnumerable<BookPopularity> popularities, CancellationToken cancellationToken) Parameters popularities IEnumerable<BookPopularity> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryShopEntities.Repositories.Library.ILibraryEntityRepository-1.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.ILibraryEntityRepository-1.html",
    "title": "Interface ILibraryEntityRepository<TEntity> | ELibrary",
    "keywords": "Interface ILibraryEntityRepository<TEntity> Namespace LibraryShopEntities.Repositories.Library Assembly LibraryShopEntities.dll public interface ILibraryEntityRepository<TEntity> where TEntity : BaseLibraryEntity Type Parameters TEntity Methods CreateAsync(TEntity, CancellationToken) Task<TEntity> CreateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(TEntity, CancellationToken) Task DeleteAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task GetByIdAsync(int, CancellationToken) Task<TEntity?> GetByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<TEntity> GetByIdsAsync(IEnumerable<int>, CancellationToken) Task<IEnumerable<TEntity>> GetByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) Task<int> GetItemTotalAmountAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<int> GetPaginatedAsync(LibraryFilterRequest, CancellationToken) Task<IEnumerable<TEntity>> GetPaginatedAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> UpdateAsync(TEntity, CancellationToken) Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> UpdateRangeAsync(IEnumerable<TEntity>, CancellationToken) Task UpdateRangeAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken) Parameters entities IEnumerable<TEntity> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryShopEntities.Repositories.Library.LibraryEntityRepository-1.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.LibraryEntityRepository-1.html",
    "title": "Class LibraryEntityRepository<TEntity> | ELibrary",
    "keywords": "Class LibraryEntityRepository<TEntity> Namespace LibraryShopEntities.Repositories.Library Assembly LibraryShopEntities.dll public class LibraryEntityRepository<TEntity> : ILibraryEntityRepository<TEntity> where TEntity : BaseLibraryEntity Type Parameters TEntity Inheritance object LibraryEntityRepository<TEntity> Implements ILibraryEntityRepository<TEntity> Derived AuthorRepository BookRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LibraryEntityRepository(IDatabaseRepository<LibraryDbContext>) public LibraryEntityRepository(IDatabaseRepository<LibraryDbContext> repository) Parameters repository IDatabaseRepository<LibraryDbContext> Fields repository protected readonly IDatabaseRepository<LibraryDbContext> repository Field Value IDatabaseRepository<LibraryDbContext> Methods ApplyFilter(IQueryable<TEntity>, LibraryFilterRequest) protected virtual IQueryable<TEntity> ApplyFilter(IQueryable<TEntity> query, LibraryFilterRequest req) Parameters query IQueryable<TEntity> req LibraryFilterRequest Returns IQueryable<TEntity> ApplyOrdering(IQueryable<TEntity>) protected virtual IQueryable<TEntity> ApplyOrdering(IQueryable<TEntity> query) Parameters query IQueryable<TEntity> Returns IQueryable<TEntity> ApplyPagination(IQueryable<TEntity>, LibraryFilterRequest) protected virtual IQueryable<TEntity> ApplyPagination(IQueryable<TEntity> query, LibraryFilterRequest req) Parameters query IQueryable<TEntity> req LibraryFilterRequest Returns IQueryable<TEntity> CreateAsync(TEntity, CancellationToken) public virtual Task<TEntity> CreateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> DeleteAsync(TEntity, CancellationToken) public virtual Task DeleteAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task GetByIdAsync(int, CancellationToken) public virtual Task<TEntity?> GetByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<TEntity> GetByIdsAsync(IEnumerable<int>, CancellationToken) public virtual Task<IEnumerable<TEntity>> GetByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> GetItemTotalAmountAsync(LibraryFilterRequest, CancellationToken) public virtual Task<int> GetItemTotalAmountAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<int> GetPaginatedAsync(LibraryFilterRequest, CancellationToken) public virtual Task<IEnumerable<TEntity>> GetPaginatedAsync(LibraryFilterRequest req, CancellationToken cancellationToken) Parameters req LibraryFilterRequest cancellationToken CancellationToken Returns Task<IEnumerable<TEntity>> UpdateAsync(TEntity, CancellationToken) public virtual Task<TEntity> UpdateAsync(TEntity entity, CancellationToken cancellationToken) Parameters entity TEntity cancellationToken CancellationToken Returns Task<TEntity> UpdateRangeAsync(IEnumerable<TEntity>, CancellationToken) public virtual Task UpdateRangeAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken) Parameters entities IEnumerable<TEntity> cancellationToken CancellationToken Returns Task"
  },
  "api/LibraryShopEntities.Repositories.Library.html": {
    "href": "api/LibraryShopEntities.Repositories.Library.html",
    "title": "Namespace LibraryShopEntities.Repositories.Library | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Repositories.Library Classes AuthorRepository BookRepository LibraryEntityRepository<TEntity> Interfaces IBookRepository ILibraryEntityRepository<TEntity>"
  },
  "api/LibraryShopEntities.Repositories.Shop.CartRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.CartRepository.html",
    "title": "Class CartRepository | ELibrary",
    "keywords": "Class CartRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public class CartRepository : ICartRepository Inheritance object CartRepository Implements ICartRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartRepository(IDatabaseRepository<ShopDbContext>) public CartRepository(IDatabaseRepository<ShopDbContext> repository) Parameters repository IDatabaseRepository<ShopDbContext> Methods AddCartAsync(Cart, CancellationToken) public Task<Cart> AddCartAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<Cart> CheckBookInCartAsync(string, string, CancellationToken) public Task<bool> CheckBookInCartAsync(string cartId, string id, CancellationToken cancellationToken) Parameters cartId string id string cancellationToken CancellationToken Returns Task<bool> DeleteCartBookAsync(CartBook, CancellationToken) public Task DeleteCartBookAsync(CartBook cartBook, CancellationToken cancellationToken) Parameters cartBook CartBook cancellationToken CancellationToken Returns Task GetCartBookByBookIdAsync(string, int, CancellationToken) public Task<CartBook?> GetCartBookByBookIdAsync(string cartId, int bookId, CancellationToken cancellationToken) Parameters cartId string bookId int cancellationToken CancellationToken Returns Task<CartBook> GetCartBookByIdAsync(string, string, CancellationToken) public Task<CartBook?> GetCartBookByIdAsync(string cartId, string id, CancellationToken cancellationToken) Parameters cartId string id string cancellationToken CancellationToken Returns Task<CartBook> GetCartByUserIdAsync(string, bool, CancellationToken) public Task<Cart?> GetCartByUserIdAsync(string userId, bool includeBooks, CancellationToken cancellationToken) Parameters userId string includeBooks bool cancellationToken CancellationToken Returns Task<Cart> UpdateCartAsync(Cart, CancellationToken) public Task<Cart> UpdateCartAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<Cart> UpdateCartBookAsync(CartBook, CancellationToken) public Task<CartBook> UpdateCartBookAsync(CartBook cartBook, CancellationToken cancellationToken) Parameters cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook>"
  },
  "api/LibraryShopEntities.Repositories.Shop.ClientRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.ClientRepository.html",
    "title": "Class ClientRepository | ELibrary",
    "keywords": "Class ClientRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public class ClientRepository : IClientRepository Inheritance object ClientRepository Implements IClientRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientRepository(IDatabaseRepository<ShopDbContext>) public ClientRepository(IDatabaseRepository<ShopDbContext> repository) Parameters repository IDatabaseRepository<ShopDbContext> Methods CreateClientAsync(Client, CancellationToken) public Task<Client> CreateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client> DeleteClientAsync(Client, CancellationToken) public Task DeleteClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task GetClientByUserIdAsync(string, CancellationToken) public Task<Client?> GetClientByUserIdAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Client> UpdateClientAsync(Client, CancellationToken) public Task<Client> UpdateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client>"
  },
  "api/LibraryShopEntities.Repositories.Shop.ICartRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.ICartRepository.html",
    "title": "Interface ICartRepository | ELibrary",
    "keywords": "Interface ICartRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public interface ICartRepository Methods AddCartAsync(Cart, CancellationToken) Task<Cart> AddCartAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<Cart> CheckBookInCartAsync(string, string, CancellationToken) Task<bool> CheckBookInCartAsync(string cartId, string id, CancellationToken cancellationToken) Parameters cartId string id string cancellationToken CancellationToken Returns Task<bool> DeleteCartBookAsync(CartBook, CancellationToken) Task DeleteCartBookAsync(CartBook cartBook, CancellationToken cancellationToken) Parameters cartBook CartBook cancellationToken CancellationToken Returns Task GetCartBookByBookIdAsync(string, int, CancellationToken) Task<CartBook?> GetCartBookByBookIdAsync(string cartId, int bookId, CancellationToken cancellationToken) Parameters cartId string bookId int cancellationToken CancellationToken Returns Task<CartBook> GetCartBookByIdAsync(string, string, CancellationToken) Task<CartBook?> GetCartBookByIdAsync(string cartId, string id, CancellationToken cancellationToken) Parameters cartId string id string cancellationToken CancellationToken Returns Task<CartBook> GetCartByUserIdAsync(string, bool, CancellationToken) Task<Cart?> GetCartByUserIdAsync(string userId, bool includeBooks, CancellationToken cancellationToken) Parameters userId string includeBooks bool cancellationToken CancellationToken Returns Task<Cart> UpdateCartAsync(Cart, CancellationToken) Task<Cart> UpdateCartAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<Cart> UpdateCartBookAsync(CartBook, CancellationToken) Task<CartBook> UpdateCartBookAsync(CartBook cartBook, CancellationToken cancellationToken) Parameters cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook>"
  },
  "api/LibraryShopEntities.Repositories.Shop.IClientRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.IClientRepository.html",
    "title": "Interface IClientRepository | ELibrary",
    "keywords": "Interface IClientRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public interface IClientRepository Methods CreateClientAsync(Client, CancellationToken) Task<Client> CreateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client> DeleteClientAsync(Client, CancellationToken) Task DeleteClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task GetClientByUserIdAsync(string, CancellationToken) Task<Client?> GetClientByUserIdAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Client> UpdateClientAsync(Client, CancellationToken) Task<Client> UpdateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client>"
  },
  "api/LibraryShopEntities.Repositories.Shop.IOrderRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.IOrderRepository.html",
    "title": "Interface IOrderRepository | ELibrary",
    "keywords": "Interface IOrderRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public interface IOrderRepository Methods AddOrderAsync(Order, CancellationToken) Task<Order> AddOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order> DeleteOrderAsync(Order, CancellationToken) Task DeleteOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task GetOrderByIdAsync(int, CancellationToken) Task<Order?> GetOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<Order> GetOrderCountAsync(GetOrdersFilter, CancellationToken) Task<int> GetOrderCountAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<int> GetPaginatedOrdersAsync(GetOrdersFilter, CancellationToken) Task<IEnumerable<Order>> GetPaginatedOrdersAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<IEnumerable<Order>> UpdateOrderAsync(Order, CancellationToken) Task<Order> UpdateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order>"
  },
  "api/LibraryShopEntities.Repositories.Shop.IStockBookOrderRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.IStockBookOrderRepository.html",
    "title": "Interface IStockBookOrderRepository | ELibrary",
    "keywords": "Interface IStockBookOrderRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public interface IStockBookOrderRepository Methods AddStockBookOrderAsync(StockBookOrder, CancellationToken) Task<StockBookOrder> AddStockBookOrderAsync(StockBookOrder stockBookOrder, CancellationToken cancellationToken) Parameters stockBookOrder StockBookOrder cancellationToken CancellationToken Returns Task<StockBookOrder> GetPaginatedStockBookOrdersAsync(PaginationRequest, CancellationToken) Task<IEnumerable<StockBookOrder>> GetPaginatedStockBookOrdersAsync(PaginationRequest pagination, CancellationToken cancellationToken) Parameters pagination PaginationRequest cancellationToken CancellationToken Returns Task<IEnumerable<StockBookOrder>> GetStockBookOrderAmountAsync(CancellationToken) Task<int> GetStockBookOrderAmountAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<int> GetStockBookOrderByIdAsync(int, CancellationToken) Task<StockBookOrder?> GetStockBookOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<StockBookOrder>"
  },
  "api/LibraryShopEntities.Repositories.Shop.OrderRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.OrderRepository.html",
    "title": "Class OrderRepository | ELibrary",
    "keywords": "Class OrderRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public class OrderRepository : IOrderRepository Inheritance object OrderRepository Implements IOrderRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderRepository(IDatabaseRepository<ShopDbContext>) public OrderRepository(IDatabaseRepository<ShopDbContext> repository) Parameters repository IDatabaseRepository<ShopDbContext> Methods AddOrderAsync(Order, CancellationToken) public Task<Order> AddOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order> DeleteOrderAsync(Order, CancellationToken) public Task DeleteOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task GetOrderByIdAsync(int, CancellationToken) public Task<Order?> GetOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<Order> GetOrderCountAsync(GetOrdersFilter, CancellationToken) public Task<int> GetOrderCountAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<int> GetPaginatedOrdersAsync(GetOrdersFilter, CancellationToken) public Task<IEnumerable<Order>> GetPaginatedOrdersAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<IEnumerable<Order>> UpdateOrderAsync(Order, CancellationToken) public Task<Order> UpdateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order>"
  },
  "api/LibraryShopEntities.Repositories.Shop.StockBookOrderRepository.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.StockBookOrderRepository.html",
    "title": "Class StockBookOrderRepository | ELibrary",
    "keywords": "Class StockBookOrderRepository Namespace LibraryShopEntities.Repositories.Shop Assembly LibraryShopEntities.dll public class StockBookOrderRepository : IStockBookOrderRepository Inheritance object StockBookOrderRepository Implements IStockBookOrderRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StockBookOrderRepository(IDatabaseRepository<ShopDbContext>) public StockBookOrderRepository(IDatabaseRepository<ShopDbContext> repository) Parameters repository IDatabaseRepository<ShopDbContext> Methods AddStockBookOrderAsync(StockBookOrder, CancellationToken) public Task<StockBookOrder> AddStockBookOrderAsync(StockBookOrder stockBookOrder, CancellationToken cancellationToken) Parameters stockBookOrder StockBookOrder cancellationToken CancellationToken Returns Task<StockBookOrder> GetPaginatedStockBookOrdersAsync(PaginationRequest, CancellationToken) public Task<IEnumerable<StockBookOrder>> GetPaginatedStockBookOrdersAsync(PaginationRequest pagination, CancellationToken cancellationToken) Parameters pagination PaginationRequest cancellationToken CancellationToken Returns Task<IEnumerable<StockBookOrder>> GetStockBookOrderAmountAsync(CancellationToken) public Task<int> GetStockBookOrderAmountAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<int> GetStockBookOrderByIdAsync(int, CancellationToken) public Task<StockBookOrder?> GetStockBookOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<StockBookOrder>"
  },
  "api/LibraryShopEntities.Repositories.Shop.html": {
    "href": "api/LibraryShopEntities.Repositories.Shop.html",
    "title": "Namespace LibraryShopEntities.Repositories.Shop | ELibrary",
    "keywords": "Namespace LibraryShopEntities.Repositories.Shop Classes CartRepository ClientRepository OrderRepository StockBookOrderRepository Interfaces ICartRepository IClientRepository IOrderRepository IStockBookOrderRepository"
  },
  "api/Logging.HostBuilderExtensions.html": {
    "href": "api/Logging.HostBuilderExtensions.html",
    "title": "Class HostBuilderExtensions | ELibrary",
    "keywords": "Class HostBuilderExtensions Namespace Logging Assembly Logging.dll public static class HostBuilderExtensions Inheritance object HostBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddLogging(IHostBuilder) public static IHostBuilder AddLogging(this IHostBuilder hostBuilder) Parameters hostBuilder IHostBuilder Returns IHostBuilder"
  },
  "api/Logging.html": {
    "href": "api/Logging.html",
    "title": "Namespace Logging | ELibrary",
    "keywords": "Namespace Logging Classes HostBuilderExtensions"
  },
  "api/Pagination.PaginationConfiguration.html": {
    "href": "api/Pagination.PaginationConfiguration.html",
    "title": "Class PaginationConfiguration | ELibrary",
    "keywords": "Class PaginationConfiguration Namespace Pagination Assembly Pagination.dll public static class PaginationConfiguration Inheritance object PaginationConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MAX_PAGINATION_PAGE_SIZE public static string MAX_PAGINATION_PAGE_SIZE { get; } Property Value string"
  },
  "api/Pagination.PaginationOptions.html": {
    "href": "api/Pagination.PaginationOptions.html",
    "title": "Class PaginationOptions | ELibrary",
    "keywords": "Class PaginationOptions Namespace Pagination Assembly Pagination.dll public record PaginationOptions : IEquatable<PaginationOptions> Inheritance object PaginationOptions Implements IEquatable<PaginationOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaginationOptions(int) public PaginationOptions(int MaxPaginationPageSize) Parameters MaxPaginationPageSize int Properties MaxPaginationPageSize public int MaxPaginationPageSize { get; init; } Property Value int"
  },
  "api/Pagination.PaginationRequest.html": {
    "href": "api/Pagination.PaginationRequest.html",
    "title": "Class PaginationRequest | ELibrary",
    "keywords": "Class PaginationRequest Namespace Pagination Assembly Pagination.dll public class PaginationRequest Inheritance object PaginationRequest Derived GetOrdersFilter LibraryFilterRequest AdminGetUserFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PageNumber public int PageNumber { get; set; } Property Value int PageSize public int PageSize { get; set; } Property Value int"
  },
  "api/Pagination.PaginationRequestValidator.html": {
    "href": "api/Pagination.PaginationRequestValidator.html",
    "title": "Class PaginationRequestValidator | ELibrary",
    "keywords": "Class PaginationRequestValidator Namespace Pagination Assembly Pagination.dll public class PaginationRequestValidator : AbstractValidator<PaginationRequest>, IValidator<PaginationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<PaginationRequest> PaginationRequestValidator Implements IValidator<PaginationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<PaginationRequest>.Validate(PaginationRequest) AbstractValidator<PaginationRequest>.ValidateAsync(PaginationRequest, CancellationToken) AbstractValidator<PaginationRequest>.Validate(ValidationContext<PaginationRequest>) AbstractValidator<PaginationRequest>.ValidateAsync(ValidationContext<PaginationRequest>, CancellationToken) AbstractValidator<PaginationRequest>.CreateDescriptor() AbstractValidator<PaginationRequest>.RuleFor<TProperty>(Expression<Func<PaginationRequest, TProperty>>) AbstractValidator<PaginationRequest>.Transform<TProperty, TTransformed>(Expression<Func<PaginationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<PaginationRequest>.Transform<TProperty, TTransformed>(Expression<Func<PaginationRequest, TProperty>>, Func<PaginationRequest, TProperty, TTransformed>) AbstractValidator<PaginationRequest>.RuleForEach<TElement>(Expression<Func<PaginationRequest, IEnumerable<TElement>>>) AbstractValidator<PaginationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<PaginationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<PaginationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<PaginationRequest, IEnumerable<TElement>>>, Func<PaginationRequest, TElement, TTransformed>) AbstractValidator<PaginationRequest>.RuleSet(string, Action) AbstractValidator<PaginationRequest>.When(Func<PaginationRequest, bool>, Action) AbstractValidator<PaginationRequest>.When(Func<PaginationRequest, ValidationContext<PaginationRequest>, bool>, Action) AbstractValidator<PaginationRequest>.Unless(Func<PaginationRequest, bool>, Action) AbstractValidator<PaginationRequest>.Unless(Func<PaginationRequest, ValidationContext<PaginationRequest>, bool>, Action) AbstractValidator<PaginationRequest>.WhenAsync(Func<PaginationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<PaginationRequest>.WhenAsync(Func<PaginationRequest, ValidationContext<PaginationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<PaginationRequest>.UnlessAsync(Func<PaginationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<PaginationRequest>.UnlessAsync(Func<PaginationRequest, ValidationContext<PaginationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<PaginationRequest>.Include(IValidator<PaginationRequest>) AbstractValidator<PaginationRequest>.Include<TValidator>(Func<PaginationRequest, TValidator>) AbstractValidator<PaginationRequest>.GetEnumerator() AbstractValidator<PaginationRequest>.EnsureInstanceNotNull(object) AbstractValidator<PaginationRequest>.PreValidate(ValidationContext<PaginationRequest>, ValidationResult) AbstractValidator<PaginationRequest>.RaiseValidationException(ValidationContext<PaginationRequest>, ValidationResult) AbstractValidator<PaginationRequest>.CascadeMode AbstractValidator<PaginationRequest>.ClassLevelCascadeMode AbstractValidator<PaginationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PaginationRequestValidator(PaginationOptions) public PaginationRequestValidator(PaginationOptions paginationOptions) Parameters paginationOptions PaginationOptions"
  },
  "api/Pagination.ServiceCollectionExtensions.html": {
    "href": "api/Pagination.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace Pagination Assembly Pagination.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddPagination(IServiceCollection, IConfiguration) public static IServiceCollection AddPagination(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection"
  },
  "api/Pagination.html": {
    "href": "api/Pagination.html",
    "title": "Namespace Pagination | ELibrary",
    "keywords": "Namespace Pagination Classes PaginationConfiguration PaginationOptions PaginationRequest PaginationRequestValidator ServiceCollectionExtensions"
  },
  "api/Resilience.ResilienceConfiguration.html": {
    "href": "api/Resilience.ResilienceConfiguration.html",
    "title": "Class ResilienceConfiguration | ELibrary",
    "keywords": "Class ResilienceConfiguration Namespace Resilience Assembly Resilience.dll public static class ResilienceConfiguration Inheritance object ResilienceConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DEFAULT_RESILIENCE_PIPELINE_SECTION public static string DEFAULT_RESILIENCE_PIPELINE_SECTION { get; } Property Value string"
  },
  "api/Resilience.ResilienceHelpers.html": {
    "href": "api/Resilience.ResilienceHelpers.html",
    "title": "Class ResilienceHelpers | ELibrary",
    "keywords": "Class ResilienceHelpers Namespace Resilience Assembly Resilience.dll public static class ResilienceHelpers Inheritance object ResilienceHelpers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConfigureResiliencePipeline(ResiliencePipelineBuilder, AddResiliencePipelineContext<string>, ResiliencePipelineConfiguration) public static void ConfigureResiliencePipeline(ResiliencePipelineBuilder builder, AddResiliencePipelineContext<string> context, ResiliencePipelineConfiguration config) Parameters builder ResiliencePipelineBuilder context AddResiliencePipelineContext<string> config ResiliencePipelineConfiguration"
  },
  "api/Resilience.ResiliencePipelineConfiguration.html": {
    "href": "api/Resilience.ResiliencePipelineConfiguration.html",
    "title": "Class ResiliencePipelineConfiguration | ELibrary",
    "keywords": "Class ResiliencePipelineConfiguration Namespace Resilience Assembly Resilience.dll public class ResiliencePipelineConfiguration Inheritance object ResiliencePipelineConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CircuitFailureRatio public float CircuitFailureRatio { get; set; } Property Value float CircuitMinimumThroughput public int CircuitMinimumThroughput { get; set; } Property Value int CircuitWaitInSeconds public int CircuitWaitInSeconds { get; set; } Property Value int MaxRetryCount public int MaxRetryCount { get; set; } Property Value int RetryWaitInSeconds public int RetryWaitInSeconds { get; set; } Property Value int"
  },
  "api/Resilience.ServiceCollectionExtensions.html": {
    "href": "api/Resilience.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace Resilience Assembly Resilience.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddDefaultResiliencePipeline(IServiceCollection, IConfiguration, string) public static IServiceCollection AddDefaultResiliencePipeline(this IServiceCollection services, IConfiguration configuration, string defaultName = \"Default\") Parameters services IServiceCollection configuration IConfiguration defaultName string Returns IServiceCollection"
  },
  "api/Resilience.html": {
    "href": "api/Resilience.html",
    "title": "Namespace Resilience | ELibrary",
    "keywords": "Namespace Resilience Classes ResilienceConfiguration ResilienceHelpers ResiliencePipelineConfiguration ServiceCollectionExtensions"
  },
  "api/Shared.ApplicationBuilderExtensions.html": {
    "href": "api/Shared.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions | ELibrary",
    "keywords": "Class ApplicationBuilderExtensions Namespace Shared Assembly Shared.dll public static class ApplicationBuilderExtensions Inheritance object ApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods UseSharedMiddleware(IApplicationBuilder) public static IApplicationBuilder UseSharedMiddleware(this IApplicationBuilder builder) Parameters builder IApplicationBuilder Returns IApplicationBuilder UseSwagger(IApplicationBuilder, string) public static IApplicationBuilder UseSwagger(this IApplicationBuilder builder, string title) Parameters builder IApplicationBuilder title string Returns IApplicationBuilder"
  },
  "api/Shared.Configurations.SharedConfiguration.html": {
    "href": "api/Shared.Configurations.SharedConfiguration.html",
    "title": "Class SharedConfiguration | ELibrary",
    "keywords": "Class SharedConfiguration Namespace Shared.Configurations Assembly Shared.dll public static class SharedConfiguration Inheritance object SharedConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ALLOWED_CORS_ORIGINS public static string ALLOWED_CORS_ORIGINS { get; } Property Value string HTTP_CLIENT_RESILIENCE_PIPELINE public static string HTTP_CLIENT_RESILIENCE_PIPELINE { get; } Property Value string"
  },
  "api/Shared.Configurations.html": {
    "href": "api/Shared.Configurations.html",
    "title": "Namespace Shared.Configurations | ELibrary",
    "keywords": "Namespace Shared.Configurations Classes SharedConfiguration"
  },
  "api/Shared.Extensions.html": {
    "href": "api/Shared.Extensions.html",
    "title": "Class Extensions | ELibrary",
    "keywords": "Class Extensions Namespace Shared Assembly Shared.dll public static class Extensions Inheritance object Extensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TryToDeserialize<T>(string?, out T?) public static bool TryToDeserialize<T>(this string? message, out T? obj) Parameters message string obj T Returns bool Type Parameters T"
  },
  "api/Shared.Helpers.HashHelper.html": {
    "href": "api/Shared.Helpers.HashHelper.html",
    "title": "Class HashHelper | ELibrary",
    "keywords": "Class HashHelper Namespace Shared.Helpers Assembly Shared.dll public static class HashHelper Inheritance object HashHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeHash(string) public static string ComputeHash(string str) Parameters str string Returns string"
  },
  "api/Shared.Helpers.HttpHelper.html": {
    "href": "api/Shared.Helpers.HttpHelper.html",
    "title": "Class HttpHelper | ELibrary",
    "keywords": "Class HttpHelper Namespace Shared.Helpers Assembly Shared.dll public class HttpHelper : IHttpHelper Inheritance object HttpHelper Implements IHttpHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HttpHelper(IHttpClientFactory) public HttpHelper(IHttpClientFactory httpClientFactory) Parameters httpClientFactory IHttpClientFactory Methods SendGetRequestAsync<T>(string, Dictionary<string, string>?, string?, CancellationToken) public Task<T?> SendGetRequestAsync<T>(string endpoint, Dictionary<string, string>? queryParams = null, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string queryParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPostRequestAsync<T>(string, Dictionary<string, string>, string?, CancellationToken) public Task<T?> SendPostRequestAsync<T>(string endpoint, Dictionary<string, string> bodyParams, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string bodyParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPostRequestAsync<T>(string, string, string?, CancellationToken) public Task<T?> SendPostRequestAsync<T>(string endpoint, string json, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string json string accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPutRequestAsync(string, string, Dictionary<string, string>?, string?, CancellationToken) public Task SendPutRequestAsync(string endpoint, string jsonBody, Dictionary<string, string>? queryParams = null, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string jsonBody string queryParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task"
  },
  "api/Shared.Helpers.IHttpHelper.html": {
    "href": "api/Shared.Helpers.IHttpHelper.html",
    "title": "Interface IHttpHelper | ELibrary",
    "keywords": "Interface IHttpHelper Namespace Shared.Helpers Assembly Shared.dll public interface IHttpHelper Methods SendGetRequestAsync<T>(string, Dictionary<string, string>?, string?, CancellationToken) Task<T?> SendGetRequestAsync<T>(string endpoint, Dictionary<string, string>? queryParams = null, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string queryParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPostRequestAsync<T>(string, Dictionary<string, string>, string?, CancellationToken) Task<T?> SendPostRequestAsync<T>(string endpoint, Dictionary<string, string> bodyParams, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string bodyParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPostRequestAsync<T>(string, string, string?, CancellationToken) Task<T?> SendPostRequestAsync<T>(string endpoint, string json, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string json string accessToken string cancellationToken CancellationToken Returns Task<T> Type Parameters T SendPutRequestAsync(string, string, Dictionary<string, string>?, string?, CancellationToken) Task SendPutRequestAsync(string endpoint, string jsonBody, Dictionary<string, string>? queryParams = null, string? accessToken = null, CancellationToken cancellationToken = default) Parameters endpoint string jsonBody string queryParams Dictionary<string, string> accessToken string cancellationToken CancellationToken Returns Task"
  },
  "api/Shared.Helpers.html": {
    "href": "api/Shared.Helpers.html",
    "title": "Namespace Shared.Helpers | ELibrary",
    "keywords": "Namespace Shared.Helpers Classes HashHelper HttpHelper Interfaces IHttpHelper"
  },
  "api/Shared.Repositories.DatabaseRepository-1.html": {
    "href": "api/Shared.Repositories.DatabaseRepository-1.html",
    "title": "Class DatabaseRepository<TContext> | ELibrary",
    "keywords": "Class DatabaseRepository<TContext> Namespace Shared.Repositories Assembly DatabaseControl.dll public class DatabaseRepository<TContext> : IDatabaseRepository<TContext> where TContext : DbContext Type Parameters TContext Inheritance object DatabaseRepository<TContext> Implements IDatabaseRepository<TContext> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatabaseRepository(IDbContextFactory<TContext>, ResiliencePipelineProvider<string>) public DatabaseRepository(IDbContextFactory<TContext> dbContextFactory, ResiliencePipelineProvider<string> resiliencePipelineProvider) Parameters dbContextFactory IDbContextFactory<TContext> resiliencePipelineProvider ResiliencePipelineProvider<string> Methods AddAsync<T>(T, CancellationToken) public Task<T> AddAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task<T> Type Parameters T CreateDbContextAsync(CancellationToken) protected Task<TContext> CreateDbContextAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<TContext> DeleteAsync<T>(T, CancellationToken) public Task DeleteAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task Type Parameters T GetQueryableAsync<T>(CancellationToken) public Task<IQueryable<T>> GetQueryableAsync<T>(CancellationToken cancellationToken) where T : class Parameters cancellationToken CancellationToken Returns Task<IQueryable<T>> Type Parameters T MigrateDatabaseAsync(CancellationToken) public Task MigrateDatabaseAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task UpdateAsync<T>(T, CancellationToken) public Task<T> UpdateAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task<T> Type Parameters T UpdateRangeAsync<T>(IEnumerable<T>, CancellationToken) public Task UpdateRangeAsync<T>(IEnumerable<T> obj, CancellationToken cancellationToken) where T : class Parameters obj IEnumerable<T> cancellationToken CancellationToken Returns Task Type Parameters T"
  },
  "api/Shared.Repositories.IDatabaseRepository-1.html": {
    "href": "api/Shared.Repositories.IDatabaseRepository-1.html",
    "title": "Interface IDatabaseRepository<TContext> | ELibrary",
    "keywords": "Interface IDatabaseRepository<TContext> Namespace Shared.Repositories Assembly DatabaseControl.dll public interface IDatabaseRepository<TContext> where TContext : DbContext Type Parameters TContext Methods AddAsync<T>(T, CancellationToken) Task<T> AddAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task<T> Type Parameters T DeleteAsync<T>(T, CancellationToken) Task DeleteAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task Type Parameters T GetQueryableAsync<T>(CancellationToken) Task<IQueryable<T>> GetQueryableAsync<T>(CancellationToken cancellationToken) where T : class Parameters cancellationToken CancellationToken Returns Task<IQueryable<T>> Type Parameters T MigrateDatabaseAsync(CancellationToken) Task MigrateDatabaseAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task UpdateAsync<T>(T, CancellationToken) Task<T> UpdateAsync<T>(T obj, CancellationToken cancellationToken) where T : class Parameters obj T cancellationToken CancellationToken Returns Task<T> Type Parameters T UpdateRangeAsync<T>(IEnumerable<T>, CancellationToken) Task UpdateRangeAsync<T>(IEnumerable<T> obj, CancellationToken cancellationToken) where T : class Parameters obj IEnumerable<T> cancellationToken CancellationToken Returns Task Type Parameters T"
  },
  "api/Shared.Repositories.html": {
    "href": "api/Shared.Repositories.html",
    "title": "Namespace Shared.Repositories | ELibrary",
    "keywords": "Namespace Shared.Repositories Classes DatabaseRepository<TContext> Interfaces IDatabaseRepository<TContext>"
  },
  "api/Shared.ServiceCollectionExtensions.html": {
    "href": "api/Shared.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | ELibrary",
    "keywords": "Class ServiceCollectionExtensions Namespace Shared Assembly Shared.dll public static class ServiceCollectionExtensions Inheritance object ServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddApplicationCors(IServiceCollection, IConfiguration, string, bool) public static IServiceCollection AddApplicationCors(this IServiceCollection services, IConfiguration configuration, string allowSpecificOrigins, bool isDevelopment) Parameters services IServiceCollection configuration IConfiguration allowSpecificOrigins string isDevelopment bool Returns IServiceCollection AddCustomHttpClientServiceWithResilience(IServiceCollection, IConfiguration) public static IServiceCollection AddCustomHttpClientServiceWithResilience(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection configuration IConfiguration Returns IServiceCollection AddSharedFluentValidation(IServiceCollection, Type) public static IServiceCollection AddSharedFluentValidation(this IServiceCollection services, Type type) Parameters services IServiceCollection type Type Returns IServiceCollection AddSwagger(IServiceCollection, string) public static IServiceCollection AddSwagger(this IServiceCollection services, string title) Parameters services IServiceCollection title string Returns IServiceCollection"
  },
  "api/Shared.html": {
    "href": "api/Shared.html",
    "title": "Namespace Shared | ELibrary",
    "keywords": "Namespace Shared Classes ApplicationBuilderExtensions Extensions ServiceCollectionExtensions"
  },
  "api/ShopApi.AutoMapperProfile.html": {
    "href": "api/ShopApi.AutoMapperProfile.html",
    "title": "Class AutoMapperProfile | ELibrary",
    "keywords": "Class AutoMapperProfile Namespace ShopApi Assembly ShopApi.dll public class AutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile AutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AutoMapperProfile() public AutoMapperProfile()"
  },
  "api/ShopApi.Configuration.html": {
    "href": "api/ShopApi.Configuration.html",
    "title": "Class Configuration | ELibrary",
    "keywords": "Class Configuration Namespace ShopApi Assembly ShopApi.dll public static class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CHAT_CONFIGURATION_SECTION public static string CHAT_CONFIGURATION_SECTION { get; } Property Value string CHAT_RESILIENCE_PIPELINE public static string CHAT_RESILIENCE_PIPELINE { get; } Property Value string DEFAULT_RESILIENCE_PIPELINE public static string DEFAULT_RESILIENCE_PIPELINE { get; } Property Value string EF_CREATE_DATABASE public static string EF_CREATE_DATABASE { get; } Property Value string LIBRARY_API_URL public static string LIBRARY_API_URL { get; } Property Value string SHOP_DATABASE_CONNECTION_STRING public static string SHOP_DATABASE_CONNECTION_STRING { get; } Property Value string SHOP_MAX_ORDER_AMOUNT public static string SHOP_MAX_ORDER_AMOUNT { get; } Property Value string"
  },
  "api/ShopApi.Controllers.AdvisorController.html": {
    "href": "api/ShopApi.Controllers.AdvisorController.html",
    "title": "Class AdvisorController | ELibrary",
    "keywords": "Class AdvisorController Namespace ShopApi.Controllers Assembly ShopApi.dll [Route(\"advisor\")] [ApiController] public class AdvisorController : ControllerBase Inheritance object ControllerBase AdvisorController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdvisorController(IAdvisorService, IMapper) public AdvisorController(IAdvisorService advisorService, IMapper mapper) Parameters advisorService IAdvisorService mapper IMapper Methods SendQuery(AdvisorQueryRequest, CancellationToken) [HttpPost] [OutputCache(PolicyName = \"AdvisorPolicy\")] public Task<ActionResult<AdvisorResponse?>> SendQuery(AdvisorQueryRequest request, CancellationToken cancellationToken) Parameters request AdvisorQueryRequest cancellationToken CancellationToken Returns Task<ActionResult<AdvisorResponse>>"
  },
  "api/ShopApi.Controllers.CartController.html": {
    "href": "api/ShopApi.Controllers.CartController.html",
    "title": "Class CartController | ELibrary",
    "keywords": "Class CartController Namespace ShopApi.Controllers Assembly ShopApi.dll [Authorize(Policy = \"RequireClientRole\")] [Route(\"cart\")] [ApiController] public class CartController : ControllerBase Inheritance object ControllerBase CartController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartController(IMediator) public CartController(IMediator mediator) Parameters mediator IMediator Methods AddBookToCart(AddBookToCartRequest, CancellationToken) [HttpPost(\"cartbook\")] public Task<ActionResult<CartBookResponse>> AddBookToCart(AddBookToCartRequest request, CancellationToken cancellationToken) Parameters request AddBookToCartRequest cancellationToken CancellationToken Returns Task<ActionResult<CartBookResponse>> DeleteBooksFromCart(List<DeleteCartBookFromCartRequest>, CancellationToken) [HttpPut] public Task<ActionResult<CartResponse>> DeleteBooksFromCart(List<DeleteCartBookFromCartRequest> requests, CancellationToken cancellationToken) Parameters requests List<DeleteCartBookFromCartRequest> cancellationToken CancellationToken Returns Task<ActionResult<CartResponse>> GetCart(CancellationToken) [HttpGet] [OutputCache(PolicyName = \"CartPolicy\")] public Task<ActionResult<CartResponse>> GetCart(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<ActionResult<CartResponse>> GetInCartAmount(CancellationToken) [HttpGet(\"amount\")] [OutputCache(PolicyName = \"CartPolicy\")] public Task<ActionResult<int>> GetInCartAmount(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<ActionResult<int>> UpdateCartBookInCart(UpdateCartBookRequest, CancellationToken) [HttpPut(\"cartbook\")] public Task<ActionResult<CartBookResponse>> UpdateCartBookInCart(UpdateCartBookRequest request, CancellationToken cancellationToken) Parameters request UpdateCartBookRequest cancellationToken CancellationToken Returns Task<ActionResult<CartBookResponse>>"
  },
  "api/ShopApi.Controllers.ClientController.html": {
    "href": "api/ShopApi.Controllers.ClientController.html",
    "title": "Class ClientController | ELibrary",
    "keywords": "Class ClientController Namespace ShopApi.Controllers Assembly ShopApi.dll [Authorize(Policy = \"RequireClientRole\")] [Route(\"client\")] [ApiController] public class ClientController : ControllerBase Inheritance object ControllerBase ClientController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientController(IMediator) public ClientController(IMediator mediator) Parameters mediator IMediator Methods AdminCreateClient(string, CreateClientRequest, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPost(\"admin/{userId}\")] public Task<ActionResult<ClientResponse>> AdminCreateClient(string userId, CreateClientRequest request, CancellationToken cancellationToken) Parameters userId string request CreateClientRequest cancellationToken CancellationToken Returns Task<ActionResult<ClientResponse>> AdminGetClient(string, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpGet(\"admin/{userId}\")] public Task<ActionResult<GetClientResponse>> AdminGetClient(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<ActionResult<GetClientResponse>> AdminUpdateClient(string, UpdateClientRequest, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPut(\"admin/{userId}\")] public Task<ActionResult<ClientResponse>> AdminUpdateClient(string userId, UpdateClientRequest request, CancellationToken cancellationToken) Parameters userId string request UpdateClientRequest cancellationToken CancellationToken Returns Task<ActionResult<ClientResponse>> CreateClient(CreateClientRequest, CancellationToken) [HttpPost] public Task<ActionResult<ClientResponse>> CreateClient(CreateClientRequest request, CancellationToken cancellationToken) Parameters request CreateClientRequest cancellationToken CancellationToken Returns Task<ActionResult<ClientResponse>> GetClient(CancellationToken) [HttpGet] [OutputCache(PolicyName = \"ClientPolicy\")] public Task<ActionResult<GetClientResponse>> GetClient(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<ActionResult<GetClientResponse>> UpdateClient(UpdateClientRequest, CancellationToken) [HttpPut] public Task<ActionResult<ClientResponse>> UpdateClient(UpdateClientRequest request, CancellationToken cancellationToken) Parameters request UpdateClientRequest cancellationToken CancellationToken Returns Task<ActionResult<ClientResponse>>"
  },
  "api/ShopApi.Controllers.OrderController.html": {
    "href": "api/ShopApi.Controllers.OrderController.html",
    "title": "Class OrderController | ELibrary",
    "keywords": "Class OrderController Namespace ShopApi.Controllers Assembly ShopApi.dll [Authorize(Policy = \"RequireClientRole\")] [Route(\"order\")] [ApiController] public class OrderController : ControllerBase Inheritance object ControllerBase OrderController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderController(IMediator) public OrderController(IMediator mediator) Parameters mediator IMediator Methods CancelOrder(int, CancellationToken) [HttpDelete(\"{id}\")] public Task<IActionResult> CancelOrder(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<IActionResult> CreateOrder(CreateOrderRequest, CancellationToken) [HttpPost] public Task<ActionResult<OrderResponse>> CreateOrder(CreateOrderRequest request, CancellationToken cancellationToken) Parameters request CreateOrderRequest cancellationToken CancellationToken Returns Task<ActionResult<OrderResponse>> GetOrderAmount(GetOrdersFilter, CancellationToken) [HttpPost(\"amount\")] [OutputCache(PolicyName = \"OrderPaginationPolicy\")] public Task<ActionResult<int>> GetOrderAmount(GetOrdersFilter request, CancellationToken cancellationToken) Parameters request GetOrdersFilter cancellationToken CancellationToken Returns Task<ActionResult<int>> GetOrders(GetOrdersFilter, CancellationToken) [HttpPost(\"pagination\")] [OutputCache(PolicyName = \"OrderPaginationPolicy\")] public Task<ActionResult<IEnumerable<OrderResponse>>> GetOrders(GetOrdersFilter request, CancellationToken cancellationToken) Parameters request GetOrdersFilter cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<OrderResponse>>> ManagerCancelOrder(int, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpDelete(\"manager/{id}\")] public Task<IActionResult> ManagerCancelOrder(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<IActionResult> ManagerGetOrderAmount(GetOrdersFilter, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpPost(\"manager/amount\")] public Task<ActionResult<int>> ManagerGetOrderAmount(GetOrdersFilter request, CancellationToken cancellationToken) Parameters request GetOrdersFilter cancellationToken CancellationToken Returns Task<ActionResult<int>> ManagerGetOrderById(int, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpGet(\"manager/{id}\")] public Task<ActionResult<OrderResponse>> ManagerGetOrderById(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<ActionResult<OrderResponse>> ManagerGetPaginatedOrders(GetOrdersFilter, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpPost(\"manager/pagination\")] public Task<ActionResult<IEnumerable<OrderResponse>>> ManagerGetPaginatedOrders(GetOrdersFilter request, CancellationToken cancellationToken) Parameters request GetOrdersFilter cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<OrderResponse>>> ManagerUpdateOrder(ManagerUpdateOrderRequest, CancellationToken) [Authorize(Policy = \"RequireManagerRole\")] [HttpPut(\"manager\")] public Task<ActionResult<OrderResponse>> ManagerUpdateOrder(ManagerUpdateOrderRequest request, CancellationToken cancellationToken) Parameters request ManagerUpdateOrderRequest cancellationToken CancellationToken Returns Task<ActionResult<OrderResponse>> UpdateOrder(ClientUpdateOrderRequest, CancellationToken) [HttpPatch] public Task<ActionResult<OrderResponse>> UpdateOrder(ClientUpdateOrderRequest request, CancellationToken cancellationToken) Parameters request ClientUpdateOrderRequest cancellationToken CancellationToken Returns Task<ActionResult<OrderResponse>>"
  },
  "api/ShopApi.Controllers.StatisticsController.html": {
    "href": "api/ShopApi.Controllers.StatisticsController.html",
    "title": "Class StatisticsController | ELibrary",
    "keywords": "Class StatisticsController Namespace ShopApi.Controllers Assembly ShopApi.dll [Authorize(Policy = \"RequireManagerRole\")] [Route(\"statistics\")] [ApiController] public class StatisticsController : ControllerBase Inheritance object ControllerBase StatisticsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatisticsController(IMapper, IStatisticsService) public StatisticsController(IMapper mapper, IStatisticsService statisticsService) Parameters mapper IMapper statisticsService IStatisticsService Methods GetShopStatistics(GetShopStatisticsRequest, CancellationToken) [HttpPost] [OutputCache(PolicyName = \"StatisticsPolicy\")] public Task<ActionResult<ShopStatisticsResponse>> GetShopStatistics(GetShopStatisticsRequest request, CancellationToken cancellationToken) Parameters request GetShopStatisticsRequest cancellationToken CancellationToken Returns Task<ActionResult<ShopStatisticsResponse>>"
  },
  "api/ShopApi.Controllers.StockBookOrderController.html": {
    "href": "api/ShopApi.Controllers.StockBookOrderController.html",
    "title": "Class StockBookOrderController | ELibrary",
    "keywords": "Class StockBookOrderController Namespace ShopApi.Controllers Assembly ShopApi.dll [Authorize(Policy = \"RequireManagerRole\")] [Route(\"stockbook\")] [ApiController] public class StockBookOrderController : ControllerBase Inheritance object ControllerBase StockBookOrderController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StockBookOrderController(IMediator) public StockBookOrderController(IMediator mediator) Parameters mediator IMediator Methods CreateStockBookOrder(CreateStockBookOrderRequest, CancellationToken) [HttpPost] public Task<ActionResult<StockBookOrderResponse>> CreateStockBookOrder(CreateStockBookOrderRequest request, CancellationToken cancellationToken) Parameters request CreateStockBookOrderRequest cancellationToken CancellationToken Returns Task<ActionResult<StockBookOrderResponse>> GetStockOrderAmount(CancellationToken) [HttpGet(\"amount\")] [OutputCache(PolicyName = \"StockBookOrderPaginationPolicy\")] public Task<ActionResult<int>> GetStockOrderAmount(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<ActionResult<int>> GetStockOrderById(int, CancellationToken) [HttpGet(\"{id}\")] public Task<ActionResult<StockBookOrderResponse>> GetStockOrderById(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<ActionResult<StockBookOrderResponse>> GetStockOrderPaginated(PaginationRequest, CancellationToken) [HttpPost(\"pagination\")] [OutputCache(PolicyName = \"StockBookOrderPaginationPolicy\")] public Task<ActionResult<IEnumerable<StockBookOrderResponse>>> GetStockOrderPaginated(PaginationRequest paginationRequest, CancellationToken cancellationToken) Parameters paginationRequest PaginationRequest cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<StockBookOrderResponse>>>"
  },
  "api/ShopApi.Controllers.html": {
    "href": "api/ShopApi.Controllers.html",
    "title": "Namespace ShopApi.Controllers | ELibrary",
    "keywords": "Namespace ShopApi.Controllers Classes AdvisorController CartController ClientController OrderController StatisticsController StockBookOrderController"
  },
  "api/ShopApi.Features.AdvisorFeature.ChatConfiguration.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.ChatConfiguration.html",
    "title": "Class ChatConfiguration | ELibrary",
    "keywords": "Class ChatConfiguration Namespace ShopApi.Features.AdvisorFeature Assembly ShopApi.dll public class ChatConfiguration Inheritance object ChatConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BotUrl public string BotUrl { get; set; } Property Value string"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.AdvisorQueryRequest.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.AdvisorQueryRequest.html",
    "title": "Class AdvisorQueryRequest | ELibrary",
    "keywords": "Class AdvisorQueryRequest Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos Assembly ShopApi.dll public class AdvisorQueryRequest Inheritance object AdvisorQueryRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Query public string? Query { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.AdvisorResponse.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.AdvisorResponse.html",
    "title": "Class AdvisorResponse | ELibrary",
    "keywords": "Class AdvisorResponse Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos Assembly ShopApi.dll public class AdvisorResponse Inheritance object AdvisorResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message public string? Message { get; set; } Property Value string"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.ChatAdvisorQueryRequest.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.ChatAdvisorQueryRequest.html",
    "title": "Class ChatAdvisorQueryRequest | ELibrary",
    "keywords": "Class ChatAdvisorQueryRequest Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos Assembly ShopApi.dll public class ChatAdvisorQueryRequest Inheritance object ChatAdvisorQueryRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Query [JsonPropertyName(\"query\")] public string Query { get; set; } Property Value string"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.ChatAdvisorResponse.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.ChatAdvisorResponse.html",
    "title": "Class ChatAdvisorResponse | ELibrary",
    "keywords": "Class ChatAdvisorResponse Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos Assembly ShopApi.dll public class ChatAdvisorResponse Inheritance object ChatAdvisorResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Message public string? Message { get; set; } Property Value string"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Dtos.html",
    "title": "Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.AdvisorFeature.Domain.Dtos Classes AdvisorQueryRequest AdvisorResponse ChatAdvisorQueryRequest ChatAdvisorResponse"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Validators.AdvisorQueryRequestValidator.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Validators.AdvisorQueryRequestValidator.html",
    "title": "Class AdvisorQueryRequestValidator | ELibrary",
    "keywords": "Class AdvisorQueryRequestValidator Namespace ShopApi.Features.AdvisorFeature.Domain.Validators Assembly ShopApi.dll public class AdvisorQueryRequestValidator : AbstractValidator<AdvisorQueryRequest>, IValidator<AdvisorQueryRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AdvisorQueryRequest> AdvisorQueryRequestValidator Implements IValidator<AdvisorQueryRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AdvisorQueryRequest>.Validate(AdvisorQueryRequest) AbstractValidator<AdvisorQueryRequest>.ValidateAsync(AdvisorQueryRequest, CancellationToken) AbstractValidator<AdvisorQueryRequest>.Validate(ValidationContext<AdvisorQueryRequest>) AbstractValidator<AdvisorQueryRequest>.ValidateAsync(ValidationContext<AdvisorQueryRequest>, CancellationToken) AbstractValidator<AdvisorQueryRequest>.CreateDescriptor() AbstractValidator<AdvisorQueryRequest>.RuleFor<TProperty>(Expression<Func<AdvisorQueryRequest, TProperty>>) AbstractValidator<AdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdvisorQueryRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdvisorQueryRequest, TProperty>>, Func<AdvisorQueryRequest, TProperty, TTransformed>) AbstractValidator<AdvisorQueryRequest>.RuleForEach<TElement>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>) AbstractValidator<AdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>, Func<AdvisorQueryRequest, TElement, TTransformed>) AbstractValidator<AdvisorQueryRequest>.RuleSet(string, Action) AbstractValidator<AdvisorQueryRequest>.When(Func<AdvisorQueryRequest, bool>, Action) AbstractValidator<AdvisorQueryRequest>.When(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, bool>, Action) AbstractValidator<AdvisorQueryRequest>.Unless(Func<AdvisorQueryRequest, bool>, Action) AbstractValidator<AdvisorQueryRequest>.Unless(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, bool>, Action) AbstractValidator<AdvisorQueryRequest>.WhenAsync(Func<AdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.WhenAsync(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.UnlessAsync(Func<AdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.UnlessAsync(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.Include(IValidator<AdvisorQueryRequest>) AbstractValidator<AdvisorQueryRequest>.Include<TValidator>(Func<AdvisorQueryRequest, TValidator>) AbstractValidator<AdvisorQueryRequest>.GetEnumerator() AbstractValidator<AdvisorQueryRequest>.EnsureInstanceNotNull(object) AbstractValidator<AdvisorQueryRequest>.PreValidate(ValidationContext<AdvisorQueryRequest>, ValidationResult) AbstractValidator<AdvisorQueryRequest>.RaiseValidationException(ValidationContext<AdvisorQueryRequest>, ValidationResult) AbstractValidator<AdvisorQueryRequest>.CascadeMode AbstractValidator<AdvisorQueryRequest>.ClassLevelCascadeMode AbstractValidator<AdvisorQueryRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdvisorQueryRequestValidator() public AdvisorQueryRequestValidator()"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Validators.ChatAdvisorQueryRequestValidator.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Validators.ChatAdvisorQueryRequestValidator.html",
    "title": "Class ChatAdvisorQueryRequestValidator | ELibrary",
    "keywords": "Class ChatAdvisorQueryRequestValidator Namespace ShopApi.Features.AdvisorFeature.Domain.Validators Assembly ShopApi.dll public class ChatAdvisorQueryRequestValidator : AbstractValidator<ChatAdvisorQueryRequest>, IValidator<ChatAdvisorQueryRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ChatAdvisorQueryRequest> ChatAdvisorQueryRequestValidator Implements IValidator<ChatAdvisorQueryRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ChatAdvisorQueryRequest>.Validate(ChatAdvisorQueryRequest) AbstractValidator<ChatAdvisorQueryRequest>.ValidateAsync(ChatAdvisorQueryRequest, CancellationToken) AbstractValidator<ChatAdvisorQueryRequest>.Validate(ValidationContext<ChatAdvisorQueryRequest>) AbstractValidator<ChatAdvisorQueryRequest>.ValidateAsync(ValidationContext<ChatAdvisorQueryRequest>, CancellationToken) AbstractValidator<ChatAdvisorQueryRequest>.CreateDescriptor() AbstractValidator<ChatAdvisorQueryRequest>.RuleFor<TProperty>(Expression<Func<ChatAdvisorQueryRequest, TProperty>>) AbstractValidator<ChatAdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<ChatAdvisorQueryRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ChatAdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<ChatAdvisorQueryRequest, TProperty>>, Func<ChatAdvisorQueryRequest, TProperty, TTransformed>) AbstractValidator<ChatAdvisorQueryRequest>.RuleForEach<TElement>(Expression<Func<ChatAdvisorQueryRequest, IEnumerable<TElement>>>) AbstractValidator<ChatAdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ChatAdvisorQueryRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ChatAdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ChatAdvisorQueryRequest, IEnumerable<TElement>>>, Func<ChatAdvisorQueryRequest, TElement, TTransformed>) AbstractValidator<ChatAdvisorQueryRequest>.RuleSet(string, Action) AbstractValidator<ChatAdvisorQueryRequest>.When(Func<ChatAdvisorQueryRequest, bool>, Action) AbstractValidator<ChatAdvisorQueryRequest>.When(Func<ChatAdvisorQueryRequest, ValidationContext<ChatAdvisorQueryRequest>, bool>, Action) AbstractValidator<ChatAdvisorQueryRequest>.Unless(Func<ChatAdvisorQueryRequest, bool>, Action) AbstractValidator<ChatAdvisorQueryRequest>.Unless(Func<ChatAdvisorQueryRequest, ValidationContext<ChatAdvisorQueryRequest>, bool>, Action) AbstractValidator<ChatAdvisorQueryRequest>.WhenAsync(Func<ChatAdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ChatAdvisorQueryRequest>.WhenAsync(Func<ChatAdvisorQueryRequest, ValidationContext<ChatAdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ChatAdvisorQueryRequest>.UnlessAsync(Func<ChatAdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ChatAdvisorQueryRequest>.UnlessAsync(Func<ChatAdvisorQueryRequest, ValidationContext<ChatAdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ChatAdvisorQueryRequest>.Include(IValidator<ChatAdvisorQueryRequest>) AbstractValidator<ChatAdvisorQueryRequest>.Include<TValidator>(Func<ChatAdvisorQueryRequest, TValidator>) AbstractValidator<ChatAdvisorQueryRequest>.GetEnumerator() AbstractValidator<ChatAdvisorQueryRequest>.EnsureInstanceNotNull(object) AbstractValidator<ChatAdvisorQueryRequest>.PreValidate(ValidationContext<ChatAdvisorQueryRequest>, ValidationResult) AbstractValidator<ChatAdvisorQueryRequest>.RaiseValidationException(ValidationContext<ChatAdvisorQueryRequest>, ValidationResult) AbstractValidator<ChatAdvisorQueryRequest>.CascadeMode AbstractValidator<ChatAdvisorQueryRequest>.ClassLevelCascadeMode AbstractValidator<ChatAdvisorQueryRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChatAdvisorQueryRequestValidator() public ChatAdvisorQueryRequestValidator()"
  },
  "api/ShopApi.Features.AdvisorFeature.Domain.Validators.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Domain.Validators.html",
    "title": "Namespace ShopApi.Features.AdvisorFeature.Domain.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.AdvisorFeature.Domain.Validators Classes AdvisorQueryRequestValidator ChatAdvisorQueryRequestValidator"
  },
  "api/ShopApi.Features.AdvisorFeature.Services.AdvisorService.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Services.AdvisorService.html",
    "title": "Class AdvisorService | ELibrary",
    "keywords": "Class AdvisorService Namespace ShopApi.Features.AdvisorFeature.Services Assembly ShopApi.dll public class AdvisorService : IAdvisorService Inheritance object AdvisorService Implements IAdvisorService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdvisorService(ResiliencePipelineProvider<string>, IHttpHelper, IConfiguration) public AdvisorService(ResiliencePipelineProvider<string> resiliencePipelineProvider, IHttpHelper httpHelper, IConfiguration configuration) Parameters resiliencePipelineProvider ResiliencePipelineProvider<string> httpHelper IHttpHelper configuration IConfiguration Methods SendQueryAsync(ChatAdvisorQueryRequest, CancellationToken) public Task<ChatAdvisorResponse?> SendQueryAsync(ChatAdvisorQueryRequest req, CancellationToken cancellationToken) Parameters req ChatAdvisorQueryRequest cancellationToken CancellationToken Returns Task<ChatAdvisorResponse>"
  },
  "api/ShopApi.Features.AdvisorFeature.Services.IAdvisorService.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Services.IAdvisorService.html",
    "title": "Interface IAdvisorService | ELibrary",
    "keywords": "Interface IAdvisorService Namespace ShopApi.Features.AdvisorFeature.Services Assembly ShopApi.dll public interface IAdvisorService Methods SendQueryAsync(ChatAdvisorQueryRequest, CancellationToken) Task<ChatAdvisorResponse?> SendQueryAsync(ChatAdvisorQueryRequest req, CancellationToken cancellationToken) Parameters req ChatAdvisorQueryRequest cancellationToken CancellationToken Returns Task<ChatAdvisorResponse>"
  },
  "api/ShopApi.Features.AdvisorFeature.Services.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Services.html",
    "title": "Namespace ShopApi.Features.AdvisorFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.AdvisorFeature.Services Classes AdvisorService Interfaces IAdvisorService"
  },
  "api/ShopApi.Features.AdvisorFeature.Validators.AdvisorQueryRequestValidator.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Validators.AdvisorQueryRequestValidator.html",
    "title": "Class AdvisorQueryRequestValidator | ELibrary",
    "keywords": "Class AdvisorQueryRequestValidator Namespace ShopApi.Features.AdvisorFeature.Validators Assembly ShopApi.dll public class AdvisorQueryRequestValidator : AbstractValidator<AdvisorQueryRequest>, IValidator<AdvisorQueryRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AdvisorQueryRequest> AdvisorQueryRequestValidator Implements IValidator<AdvisorQueryRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AdvisorQueryRequest>.Validate(AdvisorQueryRequest) AbstractValidator<AdvisorQueryRequest>.ValidateAsync(AdvisorQueryRequest, CancellationToken) AbstractValidator<AdvisorQueryRequest>.Validate(ValidationContext<AdvisorQueryRequest>) AbstractValidator<AdvisorQueryRequest>.ValidateAsync(ValidationContext<AdvisorQueryRequest>, CancellationToken) AbstractValidator<AdvisorQueryRequest>.CreateDescriptor() AbstractValidator<AdvisorQueryRequest>.RuleFor<TProperty>(Expression<Func<AdvisorQueryRequest, TProperty>>) AbstractValidator<AdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdvisorQueryRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AdvisorQueryRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdvisorQueryRequest, TProperty>>, Func<AdvisorQueryRequest, TProperty, TTransformed>) AbstractValidator<AdvisorQueryRequest>.RuleForEach<TElement>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>) AbstractValidator<AdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AdvisorQueryRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdvisorQueryRequest, IEnumerable<TElement>>>, Func<AdvisorQueryRequest, TElement, TTransformed>) AbstractValidator<AdvisorQueryRequest>.RuleSet(string, Action) AbstractValidator<AdvisorQueryRequest>.When(Func<AdvisorQueryRequest, bool>, Action) AbstractValidator<AdvisorQueryRequest>.When(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, bool>, Action) AbstractValidator<AdvisorQueryRequest>.Unless(Func<AdvisorQueryRequest, bool>, Action) AbstractValidator<AdvisorQueryRequest>.Unless(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, bool>, Action) AbstractValidator<AdvisorQueryRequest>.WhenAsync(Func<AdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.WhenAsync(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.UnlessAsync(Func<AdvisorQueryRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.UnlessAsync(Func<AdvisorQueryRequest, ValidationContext<AdvisorQueryRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdvisorQueryRequest>.Include(IValidator<AdvisorQueryRequest>) AbstractValidator<AdvisorQueryRequest>.Include<TValidator>(Func<AdvisorQueryRequest, TValidator>) AbstractValidator<AdvisorQueryRequest>.GetEnumerator() AbstractValidator<AdvisorQueryRequest>.EnsureInstanceNotNull(object) AbstractValidator<AdvisorQueryRequest>.PreValidate(ValidationContext<AdvisorQueryRequest>, ValidationResult) AbstractValidator<AdvisorQueryRequest>.RaiseValidationException(ValidationContext<AdvisorQueryRequest>, ValidationResult) AbstractValidator<AdvisorQueryRequest>.CascadeMode AbstractValidator<AdvisorQueryRequest>.ClassLevelCascadeMode AbstractValidator<AdvisorQueryRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdvisorQueryRequestValidator() public AdvisorQueryRequestValidator()"
  },
  "api/ShopApi.Features.AdvisorFeature.Validators.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.Validators.html",
    "title": "Namespace ShopApi.Features.AdvisorFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.AdvisorFeature.Validators Classes AdvisorQueryRequestValidator"
  },
  "api/ShopApi.Features.AdvisorFeature.html": {
    "href": "api/ShopApi.Features.AdvisorFeature.html",
    "title": "Namespace ShopApi.Features.AdvisorFeature | ELibrary",
    "keywords": "Namespace ShopApi.Features.AdvisorFeature Classes ChatConfiguration"
  },
  "api/ShopApi.Features.CartFeature.Command.AddBookToCart.AddBookToCartCommand.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.AddBookToCart.AddBookToCartCommand.html",
    "title": "Class AddBookToCartCommand | ELibrary",
    "keywords": "Class AddBookToCartCommand Namespace ShopApi.Features.CartFeature.Command.AddBookToCart Assembly ShopApi.dll public record AddBookToCartCommand : IRequest<CartBookResponse>, IBaseRequest, IEquatable<AddBookToCartCommand> Inheritance object AddBookToCartCommand Implements IRequest<CartBookResponse> IBaseRequest IEquatable<AddBookToCartCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddBookToCartCommand(string, AddBookToCartRequest) public AddBookToCartCommand(string UserId, AddBookToCartRequest Request) Parameters UserId string Request AddBookToCartRequest Properties Request public AddBookToCartRequest Request { get; init; } Property Value AddBookToCartRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Command.AddBookToCart.AddBookToCartCommandHandler.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.AddBookToCart.AddBookToCartCommandHandler.html",
    "title": "Class AddBookToCartCommandHandler | ELibrary",
    "keywords": "Class AddBookToCartCommandHandler Namespace ShopApi.Features.CartFeature.Command.AddBookToCart Assembly ShopApi.dll public class AddBookToCartCommandHandler : IRequestHandler<AddBookToCartCommand, CartBookResponse> Inheritance object AddBookToCartCommandHandler Implements IRequestHandler<AddBookToCartCommand, CartBookResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddBookToCartCommandHandler(ICartService, ILibraryService, IMapper) public AddBookToCartCommandHandler(ICartService cartService, ILibraryService libraryService, IMapper mapper) Parameters cartService ICartService libraryService ILibraryService mapper IMapper Methods Handle(AddBookToCartCommand, CancellationToken) Handles a request public Task<CartBookResponse> Handle(AddBookToCartCommand command, CancellationToken cancellationToken) Parameters command AddBookToCartCommand cancellationToken CancellationToken Cancellation token Returns Task<CartBookResponse> Response from the request"
  },
  "api/ShopApi.Features.CartFeature.Command.AddBookToCart.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.AddBookToCart.html",
    "title": "Namespace ShopApi.Features.CartFeature.Command.AddBookToCart | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Command.AddBookToCart Classes AddBookToCartCommand AddBookToCartCommandHandler"
  },
  "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.DeleteBooksFromCartCommand.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.DeleteBooksFromCartCommand.html",
    "title": "Class DeleteBooksFromCartCommand | ELibrary",
    "keywords": "Class DeleteBooksFromCartCommand Namespace ShopApi.Features.CartFeature.Command.DeleteBooksFromCart Assembly ShopApi.dll public record DeleteBooksFromCartCommand : IRequest<CartResponse>, IBaseRequest, IEquatable<DeleteBooksFromCartCommand> Inheritance object DeleteBooksFromCartCommand Implements IRequest<CartResponse> IBaseRequest IEquatable<DeleteBooksFromCartCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteBooksFromCartCommand(string, IEnumerable<DeleteCartBookFromCartRequest>) public DeleteBooksFromCartCommand(string UserId, IEnumerable<DeleteCartBookFromCartRequest> Requests) Parameters UserId string Requests IEnumerable<DeleteCartBookFromCartRequest> Properties Requests public IEnumerable<DeleteCartBookFromCartRequest> Requests { get; init; } Property Value IEnumerable<DeleteCartBookFromCartRequest> UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.DeleteBooksFromCartCommandHandler.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.DeleteBooksFromCartCommandHandler.html",
    "title": "Class DeleteBooksFromCartCommandHandler | ELibrary",
    "keywords": "Class DeleteBooksFromCartCommandHandler Namespace ShopApi.Features.CartFeature.Command.DeleteBooksFromCart Assembly ShopApi.dll public class DeleteBooksFromCartCommandHandler : IRequestHandler<DeleteBooksFromCartCommand, CartResponse> Inheritance object DeleteBooksFromCartCommandHandler Implements IRequestHandler<DeleteBooksFromCartCommand, CartResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteBooksFromCartCommandHandler(ICartService, ILibraryService, IMapper) public DeleteBooksFromCartCommandHandler(ICartService cartService, ILibraryService libraryService, IMapper mapper) Parameters cartService ICartService libraryService ILibraryService mapper IMapper Methods Handle(DeleteBooksFromCartCommand, CancellationToken) Handles a request public Task<CartResponse> Handle(DeleteBooksFromCartCommand command, CancellationToken cancellationToken) Parameters command DeleteBooksFromCartCommand cancellationToken CancellationToken Cancellation token Returns Task<CartResponse> Response from the request"
  },
  "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.DeleteBooksFromCart.html",
    "title": "Namespace ShopApi.Features.CartFeature.Command.DeleteBooksFromCart | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Command.DeleteBooksFromCart Classes DeleteBooksFromCartCommand DeleteBooksFromCartCommandHandler"
  },
  "api/ShopApi.Features.CartFeature.Command.GetCart.GetCartQuery.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetCart.GetCartQuery.html",
    "title": "Class GetCartQuery | ELibrary",
    "keywords": "Class GetCartQuery Namespace ShopApi.Features.CartFeature.Command.GetCart Assembly ShopApi.dll public record GetCartQuery : IRequest<CartResponse>, IBaseRequest, IEquatable<GetCartQuery> Inheritance object GetCartQuery Implements IRequest<CartResponse> IBaseRequest IEquatable<GetCartQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCartQuery(string) public GetCartQuery(string UserId) Parameters UserId string Properties UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Command.GetCart.GetCartQueryHandler.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetCart.GetCartQueryHandler.html",
    "title": "Class GetCartQueryHandler | ELibrary",
    "keywords": "Class GetCartQueryHandler Namespace ShopApi.Features.CartFeature.Command.GetCart Assembly ShopApi.dll public class GetCartQueryHandler : IRequestHandler<GetCartQuery, CartResponse> Inheritance object GetCartQueryHandler Implements IRequestHandler<GetCartQuery, CartResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCartQueryHandler(ICartService, ILibraryService, IMapper) public GetCartQueryHandler(ICartService cartService, ILibraryService libraryService, IMapper mapper) Parameters cartService ICartService libraryService ILibraryService mapper IMapper Methods Handle(GetCartQuery, CancellationToken) Handles a request public Task<CartResponse> Handle(GetCartQuery request, CancellationToken cancellationToken) Parameters request GetCartQuery The request cancellationToken CancellationToken Cancellation token Returns Task<CartResponse> Response from the request"
  },
  "api/ShopApi.Features.CartFeature.Command.GetCart.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetCart.html",
    "title": "Namespace ShopApi.Features.CartFeature.Command.GetCart | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Command.GetCart Classes GetCartQuery GetCartQueryHandler"
  },
  "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.GetInCartAmountQuery.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.GetInCartAmountQuery.html",
    "title": "Class GetInCartAmountQuery | ELibrary",
    "keywords": "Class GetInCartAmountQuery Namespace ShopApi.Features.CartFeature.Command.GetInCartAmount Assembly ShopApi.dll public record GetInCartAmountQuery : IRequest<int>, IBaseRequest, IEquatable<GetInCartAmountQuery> Inheritance object GetInCartAmountQuery Implements IRequest<int> IBaseRequest IEquatable<GetInCartAmountQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetInCartAmountQuery(string) public GetInCartAmountQuery(string UserId) Parameters UserId string Properties UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.GetInCartAmountQueryHandler.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.GetInCartAmountQueryHandler.html",
    "title": "Class GetInCartAmountQueryHandler | ELibrary",
    "keywords": "Class GetInCartAmountQueryHandler Namespace ShopApi.Features.CartFeature.Command.GetInCartAmount Assembly ShopApi.dll public class GetInCartAmountQueryHandler : IRequestHandler<GetInCartAmountQuery, int> Inheritance object GetInCartAmountQueryHandler Implements IRequestHandler<GetInCartAmountQuery, int> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetInCartAmountQueryHandler(ICartService) public GetInCartAmountQueryHandler(ICartService cartService) Parameters cartService ICartService Methods Handle(GetInCartAmountQuery, CancellationToken) Handles a request public Task<int> Handle(GetInCartAmountQuery request, CancellationToken cancellationToken) Parameters request GetInCartAmountQuery The request cancellationToken CancellationToken Cancellation token Returns Task<int> Response from the request"
  },
  "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.GetInCartAmount.html",
    "title": "Namespace ShopApi.Features.CartFeature.Command.GetInCartAmount | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Command.GetInCartAmount Classes GetInCartAmountQuery GetInCartAmountQueryHandler"
  },
  "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.UpdateCartBookInCartCommand.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.UpdateCartBookInCartCommand.html",
    "title": "Class UpdateCartBookInCartCommand | ELibrary",
    "keywords": "Class UpdateCartBookInCartCommand Namespace ShopApi.Features.CartFeature.Command.UpdateCartBookInCart Assembly ShopApi.dll public record UpdateCartBookInCartCommand : IRequest<CartBookResponse>, IBaseRequest, IEquatable<UpdateCartBookInCartCommand> Inheritance object UpdateCartBookInCartCommand Implements IRequest<CartBookResponse> IBaseRequest IEquatable<UpdateCartBookInCartCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartBookInCartCommand(string, UpdateCartBookRequest) public UpdateCartBookInCartCommand(string UserId, UpdateCartBookRequest Request) Parameters UserId string Request UpdateCartBookRequest Properties Request public UpdateCartBookRequest Request { get; init; } Property Value UpdateCartBookRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.UpdateCartBookInCartCommandHandler.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.UpdateCartBookInCartCommandHandler.html",
    "title": "Class UpdateCartBookInCartCommandHandler | ELibrary",
    "keywords": "Class UpdateCartBookInCartCommandHandler Namespace ShopApi.Features.CartFeature.Command.UpdateCartBookInCart Assembly ShopApi.dll public class UpdateCartBookInCartCommandHandler : IRequestHandler<UpdateCartBookInCartCommand, CartBookResponse> Inheritance object UpdateCartBookInCartCommandHandler Implements IRequestHandler<UpdateCartBookInCartCommand, CartBookResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartBookInCartCommandHandler(ICartService, ILibraryService, IMapper) public UpdateCartBookInCartCommandHandler(ICartService cartService, ILibraryService libraryService, IMapper mapper) Parameters cartService ICartService libraryService ILibraryService mapper IMapper Methods Handle(UpdateCartBookInCartCommand, CancellationToken) Handles a request public Task<CartBookResponse> Handle(UpdateCartBookInCartCommand command, CancellationToken cancellationToken) Parameters command UpdateCartBookInCartCommand cancellationToken CancellationToken Cancellation token Returns Task<CartBookResponse> Response from the request"
  },
  "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.html": {
    "href": "api/ShopApi.Features.CartFeature.Command.UpdateCartBookInCart.html",
    "title": "Namespace ShopApi.Features.CartFeature.Command.UpdateCartBookInCart | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Command.UpdateCartBookInCart Classes UpdateCartBookInCartCommand UpdateCartBookInCartCommandHandler"
  },
  "api/ShopApi.Features.CartFeature.Dtos.AddBookToCartRequest.html": {
    "href": "api/ShopApi.Features.CartFeature.Dtos.AddBookToCartRequest.html",
    "title": "Class AddBookToCartRequest | ELibrary",
    "keywords": "Class AddBookToCartRequest Namespace ShopApi.Features.CartFeature.Dtos Assembly ShopApi.dll public class AddBookToCartRequest Inheritance object AddBookToCartRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookAmount public int BookAmount { get; set; } Property Value int BookId public int BookId { get; set; } Property Value int"
  },
  "api/ShopApi.Features.CartFeature.Dtos.DeleteCartBookFromCartRequest.html": {
    "href": "api/ShopApi.Features.CartFeature.Dtos.DeleteCartBookFromCartRequest.html",
    "title": "Class DeleteCartBookFromCartRequest | ELibrary",
    "keywords": "Class DeleteCartBookFromCartRequest Namespace ShopApi.Features.CartFeature.Dtos Assembly ShopApi.dll public class DeleteCartBookFromCartRequest Inheritance object DeleteCartBookFromCartRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int"
  },
  "api/ShopApi.Features.CartFeature.Dtos.UpdateCartBookRequest.html": {
    "href": "api/ShopApi.Features.CartFeature.Dtos.UpdateCartBookRequest.html",
    "title": "Class UpdateCartBookRequest | ELibrary",
    "keywords": "Class UpdateCartBookRequest Namespace ShopApi.Features.CartFeature.Dtos Assembly ShopApi.dll public class UpdateCartBookRequest Inheritance object UpdateCartBookRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookAmount public int BookAmount { get; set; } Property Value int Id public string? Id { get; set; } Property Value string"
  },
  "api/ShopApi.Features.CartFeature.Dtos.html": {
    "href": "api/ShopApi.Features.CartFeature.Dtos.html",
    "title": "Namespace ShopApi.Features.CartFeature.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Dtos Classes AddBookToCartRequest DeleteCartBookFromCartRequest UpdateCartBookRequest"
  },
  "api/ShopApi.Features.CartFeature.Services.CartService.html": {
    "href": "api/ShopApi.Features.CartFeature.Services.CartService.html",
    "title": "Class CartService | ELibrary",
    "keywords": "Class CartService Namespace ShopApi.Features.CartFeature.Services Assembly ShopApi.dll public class CartService : ICartService Inheritance object CartService Implements ICartService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartService(ICartRepository, IConfiguration) public CartService(ICartRepository repository, IConfiguration configuration) Parameters repository ICartRepository configuration IConfiguration Methods AddCartBookAsync(Cart, CartBook, CancellationToken) public Task<CartBook> AddCartBookAsync(Cart cart, CartBook cartBook, CancellationToken cancellationToken) Parameters cart Cart cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook> CheckBookCartAsync(Cart, string, CancellationToken) public Task<bool> CheckBookCartAsync(Cart cart, string id, CancellationToken cancellationToken) Parameters cart Cart id string cancellationToken CancellationToken Returns Task<bool> CreateCartAsync(string, CancellationToken) public Task<Cart> CreateCartAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Cart> DeleteBooksFromCartAsync(Cart, int[], CancellationToken) public Task<Cart> DeleteBooksFromCartAsync(Cart cart, int[] bookIds, CancellationToken cancellationToken) Parameters cart Cart bookIds int[] cancellationToken CancellationToken Returns Task<Cart> GetCartByUserIdAsync(string, bool, CancellationToken) public Task<Cart?> GetCartByUserIdAsync(string userId, bool includeProducts, CancellationToken cancellationToken) Parameters userId string includeProducts bool cancellationToken CancellationToken Returns Task<Cart> GetInCartAmountAsync(Cart, CancellationToken) public Task<int> GetInCartAmountAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<int> UpdateCartBookAsync(Cart, CartBook, CancellationToken) public Task<CartBook> UpdateCartBookAsync(Cart cart, CartBook cartBook, CancellationToken cancellationToken) Parameters cart Cart cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook>"
  },
  "api/ShopApi.Features.CartFeature.Services.ICartService.html": {
    "href": "api/ShopApi.Features.CartFeature.Services.ICartService.html",
    "title": "Interface ICartService | ELibrary",
    "keywords": "Interface ICartService Namespace ShopApi.Features.CartFeature.Services Assembly ShopApi.dll public interface ICartService Methods AddCartBookAsync(Cart, CartBook, CancellationToken) Task<CartBook> AddCartBookAsync(Cart cart, CartBook cartBook, CancellationToken cancellationToken) Parameters cart Cart cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook> CheckBookCartAsync(Cart, string, CancellationToken) Task<bool> CheckBookCartAsync(Cart cart, string id, CancellationToken cancellationToken) Parameters cart Cart id string cancellationToken CancellationToken Returns Task<bool> CreateCartAsync(string, CancellationToken) Task<Cart> CreateCartAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Cart> DeleteBooksFromCartAsync(Cart, int[], CancellationToken) Task<Cart> DeleteBooksFromCartAsync(Cart cart, int[] bookIds, CancellationToken cancellationToken) Parameters cart Cart bookIds int[] cancellationToken CancellationToken Returns Task<Cart> GetCartByUserIdAsync(string, bool, CancellationToken) Task<Cart?> GetCartByUserIdAsync(string userId, bool includeProducts, CancellationToken cancellationToken) Parameters userId string includeProducts bool cancellationToken CancellationToken Returns Task<Cart> GetInCartAmountAsync(Cart, CancellationToken) Task<int> GetInCartAmountAsync(Cart cart, CancellationToken cancellationToken) Parameters cart Cart cancellationToken CancellationToken Returns Task<int> UpdateCartBookAsync(Cart, CartBook, CancellationToken) Task<CartBook> UpdateCartBookAsync(Cart cart, CartBook cartBook, CancellationToken cancellationToken) Parameters cart Cart cartBook CartBook cancellationToken CancellationToken Returns Task<CartBook>"
  },
  "api/ShopApi.Features.CartFeature.Services.html": {
    "href": "api/ShopApi.Features.CartFeature.Services.html",
    "title": "Namespace ShopApi.Features.CartFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Services Classes CartService Interfaces ICartService"
  },
  "api/ShopApi.Features.CartFeature.Validators.AddBookToCartRequestValidator.html": {
    "href": "api/ShopApi.Features.CartFeature.Validators.AddBookToCartRequestValidator.html",
    "title": "Class AddBookToCartRequestValidator | ELibrary",
    "keywords": "Class AddBookToCartRequestValidator Namespace ShopApi.Features.CartFeature.Validators Assembly ShopApi.dll public class AddBookToCartRequestValidator : AbstractValidator<AddBookToCartRequest>, IValidator<AddBookToCartRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AddBookToCartRequest> AddBookToCartRequestValidator Implements IValidator<AddBookToCartRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AddBookToCartRequest>.Validate(AddBookToCartRequest) AbstractValidator<AddBookToCartRequest>.ValidateAsync(AddBookToCartRequest, CancellationToken) AbstractValidator<AddBookToCartRequest>.Validate(ValidationContext<AddBookToCartRequest>) AbstractValidator<AddBookToCartRequest>.ValidateAsync(ValidationContext<AddBookToCartRequest>, CancellationToken) AbstractValidator<AddBookToCartRequest>.CreateDescriptor() AbstractValidator<AddBookToCartRequest>.RuleFor<TProperty>(Expression<Func<AddBookToCartRequest, TProperty>>) AbstractValidator<AddBookToCartRequest>.Transform<TProperty, TTransformed>(Expression<Func<AddBookToCartRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AddBookToCartRequest>.Transform<TProperty, TTransformed>(Expression<Func<AddBookToCartRequest, TProperty>>, Func<AddBookToCartRequest, TProperty, TTransformed>) AbstractValidator<AddBookToCartRequest>.RuleForEach<TElement>(Expression<Func<AddBookToCartRequest, IEnumerable<TElement>>>) AbstractValidator<AddBookToCartRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AddBookToCartRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AddBookToCartRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AddBookToCartRequest, IEnumerable<TElement>>>, Func<AddBookToCartRequest, TElement, TTransformed>) AbstractValidator<AddBookToCartRequest>.RuleSet(string, Action) AbstractValidator<AddBookToCartRequest>.When(Func<AddBookToCartRequest, bool>, Action) AbstractValidator<AddBookToCartRequest>.When(Func<AddBookToCartRequest, ValidationContext<AddBookToCartRequest>, bool>, Action) AbstractValidator<AddBookToCartRequest>.Unless(Func<AddBookToCartRequest, bool>, Action) AbstractValidator<AddBookToCartRequest>.Unless(Func<AddBookToCartRequest, ValidationContext<AddBookToCartRequest>, bool>, Action) AbstractValidator<AddBookToCartRequest>.WhenAsync(Func<AddBookToCartRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AddBookToCartRequest>.WhenAsync(Func<AddBookToCartRequest, ValidationContext<AddBookToCartRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AddBookToCartRequest>.UnlessAsync(Func<AddBookToCartRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AddBookToCartRequest>.UnlessAsync(Func<AddBookToCartRequest, ValidationContext<AddBookToCartRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AddBookToCartRequest>.Include(IValidator<AddBookToCartRequest>) AbstractValidator<AddBookToCartRequest>.Include<TValidator>(Func<AddBookToCartRequest, TValidator>) AbstractValidator<AddBookToCartRequest>.GetEnumerator() AbstractValidator<AddBookToCartRequest>.EnsureInstanceNotNull(object) AbstractValidator<AddBookToCartRequest>.PreValidate(ValidationContext<AddBookToCartRequest>, ValidationResult) AbstractValidator<AddBookToCartRequest>.RaiseValidationException(ValidationContext<AddBookToCartRequest>, ValidationResult) AbstractValidator<AddBookToCartRequest>.CascadeMode AbstractValidator<AddBookToCartRequest>.ClassLevelCascadeMode AbstractValidator<AddBookToCartRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddBookToCartRequestValidator(IConfiguration) public AddBookToCartRequestValidator(IConfiguration configuration) Parameters configuration IConfiguration"
  },
  "api/ShopApi.Features.CartFeature.Validators.DeleteBookFromCartRequestValidator.html": {
    "href": "api/ShopApi.Features.CartFeature.Validators.DeleteBookFromCartRequestValidator.html",
    "title": "Class DeleteBookFromCartRequestValidator | ELibrary",
    "keywords": "Class DeleteBookFromCartRequestValidator Namespace ShopApi.Features.CartFeature.Validators Assembly ShopApi.dll public class DeleteBookFromCartRequestValidator : AbstractValidator<DeleteCartBookFromCartRequest>, IValidator<DeleteCartBookFromCartRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DeleteCartBookFromCartRequest> DeleteBookFromCartRequestValidator Implements IValidator<DeleteCartBookFromCartRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DeleteCartBookFromCartRequest>.Validate(DeleteCartBookFromCartRequest) AbstractValidator<DeleteCartBookFromCartRequest>.ValidateAsync(DeleteCartBookFromCartRequest, CancellationToken) AbstractValidator<DeleteCartBookFromCartRequest>.Validate(ValidationContext<DeleteCartBookFromCartRequest>) AbstractValidator<DeleteCartBookFromCartRequest>.ValidateAsync(ValidationContext<DeleteCartBookFromCartRequest>, CancellationToken) AbstractValidator<DeleteCartBookFromCartRequest>.CreateDescriptor() AbstractValidator<DeleteCartBookFromCartRequest>.RuleFor<TProperty>(Expression<Func<DeleteCartBookFromCartRequest, TProperty>>) AbstractValidator<DeleteCartBookFromCartRequest>.Transform<TProperty, TTransformed>(Expression<Func<DeleteCartBookFromCartRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DeleteCartBookFromCartRequest>.Transform<TProperty, TTransformed>(Expression<Func<DeleteCartBookFromCartRequest, TProperty>>, Func<DeleteCartBookFromCartRequest, TProperty, TTransformed>) AbstractValidator<DeleteCartBookFromCartRequest>.RuleForEach<TElement>(Expression<Func<DeleteCartBookFromCartRequest, IEnumerable<TElement>>>) AbstractValidator<DeleteCartBookFromCartRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<DeleteCartBookFromCartRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DeleteCartBookFromCartRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<DeleteCartBookFromCartRequest, IEnumerable<TElement>>>, Func<DeleteCartBookFromCartRequest, TElement, TTransformed>) AbstractValidator<DeleteCartBookFromCartRequest>.RuleSet(string, Action) AbstractValidator<DeleteCartBookFromCartRequest>.When(Func<DeleteCartBookFromCartRequest, bool>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.When(Func<DeleteCartBookFromCartRequest, ValidationContext<DeleteCartBookFromCartRequest>, bool>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.Unless(Func<DeleteCartBookFromCartRequest, bool>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.Unless(Func<DeleteCartBookFromCartRequest, ValidationContext<DeleteCartBookFromCartRequest>, bool>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.WhenAsync(Func<DeleteCartBookFromCartRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.WhenAsync(Func<DeleteCartBookFromCartRequest, ValidationContext<DeleteCartBookFromCartRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.UnlessAsync(Func<DeleteCartBookFromCartRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.UnlessAsync(Func<DeleteCartBookFromCartRequest, ValidationContext<DeleteCartBookFromCartRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<DeleteCartBookFromCartRequest>.Include(IValidator<DeleteCartBookFromCartRequest>) AbstractValidator<DeleteCartBookFromCartRequest>.Include<TValidator>(Func<DeleteCartBookFromCartRequest, TValidator>) AbstractValidator<DeleteCartBookFromCartRequest>.GetEnumerator() AbstractValidator<DeleteCartBookFromCartRequest>.EnsureInstanceNotNull(object) AbstractValidator<DeleteCartBookFromCartRequest>.PreValidate(ValidationContext<DeleteCartBookFromCartRequest>, ValidationResult) AbstractValidator<DeleteCartBookFromCartRequest>.RaiseValidationException(ValidationContext<DeleteCartBookFromCartRequest>, ValidationResult) AbstractValidator<DeleteCartBookFromCartRequest>.CascadeMode AbstractValidator<DeleteCartBookFromCartRequest>.ClassLevelCascadeMode AbstractValidator<DeleteCartBookFromCartRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteBookFromCartRequestValidator() public DeleteBookFromCartRequestValidator()"
  },
  "api/ShopApi.Features.CartFeature.Validators.UpdateCartBookRequestValidator.html": {
    "href": "api/ShopApi.Features.CartFeature.Validators.UpdateCartBookRequestValidator.html",
    "title": "Class UpdateCartBookRequestValidator | ELibrary",
    "keywords": "Class UpdateCartBookRequestValidator Namespace ShopApi.Features.CartFeature.Validators Assembly ShopApi.dll public class UpdateCartBookRequestValidator : AbstractValidator<UpdateCartBookRequest>, IValidator<UpdateCartBookRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateCartBookRequest> UpdateCartBookRequestValidator Implements IValidator<UpdateCartBookRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateCartBookRequest>.Validate(UpdateCartBookRequest) AbstractValidator<UpdateCartBookRequest>.ValidateAsync(UpdateCartBookRequest, CancellationToken) AbstractValidator<UpdateCartBookRequest>.Validate(ValidationContext<UpdateCartBookRequest>) AbstractValidator<UpdateCartBookRequest>.ValidateAsync(ValidationContext<UpdateCartBookRequest>, CancellationToken) AbstractValidator<UpdateCartBookRequest>.CreateDescriptor() AbstractValidator<UpdateCartBookRequest>.RuleFor<TProperty>(Expression<Func<UpdateCartBookRequest, TProperty>>) AbstractValidator<UpdateCartBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCartBookRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateCartBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateCartBookRequest, TProperty>>, Func<UpdateCartBookRequest, TProperty, TTransformed>) AbstractValidator<UpdateCartBookRequest>.RuleForEach<TElement>(Expression<Func<UpdateCartBookRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateCartBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCartBookRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateCartBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateCartBookRequest, IEnumerable<TElement>>>, Func<UpdateCartBookRequest, TElement, TTransformed>) AbstractValidator<UpdateCartBookRequest>.RuleSet(string, Action) AbstractValidator<UpdateCartBookRequest>.When(Func<UpdateCartBookRequest, bool>, Action) AbstractValidator<UpdateCartBookRequest>.When(Func<UpdateCartBookRequest, ValidationContext<UpdateCartBookRequest>, bool>, Action) AbstractValidator<UpdateCartBookRequest>.Unless(Func<UpdateCartBookRequest, bool>, Action) AbstractValidator<UpdateCartBookRequest>.Unless(Func<UpdateCartBookRequest, ValidationContext<UpdateCartBookRequest>, bool>, Action) AbstractValidator<UpdateCartBookRequest>.WhenAsync(Func<UpdateCartBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartBookRequest>.WhenAsync(Func<UpdateCartBookRequest, ValidationContext<UpdateCartBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartBookRequest>.UnlessAsync(Func<UpdateCartBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartBookRequest>.UnlessAsync(Func<UpdateCartBookRequest, ValidationContext<UpdateCartBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateCartBookRequest>.Include(IValidator<UpdateCartBookRequest>) AbstractValidator<UpdateCartBookRequest>.Include<TValidator>(Func<UpdateCartBookRequest, TValidator>) AbstractValidator<UpdateCartBookRequest>.GetEnumerator() AbstractValidator<UpdateCartBookRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateCartBookRequest>.PreValidate(ValidationContext<UpdateCartBookRequest>, ValidationResult) AbstractValidator<UpdateCartBookRequest>.RaiseValidationException(ValidationContext<UpdateCartBookRequest>, ValidationResult) AbstractValidator<UpdateCartBookRequest>.CascadeMode AbstractValidator<UpdateCartBookRequest>.ClassLevelCascadeMode AbstractValidator<UpdateCartBookRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCartBookRequestValidator(IConfiguration) public UpdateCartBookRequestValidator(IConfiguration configuration) Parameters configuration IConfiguration"
  },
  "api/ShopApi.Features.CartFeature.Validators.html": {
    "href": "api/ShopApi.Features.CartFeature.Validators.html",
    "title": "Namespace ShopApi.Features.CartFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.CartFeature.Validators Classes AddBookToCartRequestValidator DeleteBookFromCartRequestValidator UpdateCartBookRequestValidator"
  },
  "api/ShopApi.Features.ClientFeature.Command.CreateClient.CreateClientForUserCommand.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.CreateClient.CreateClientForUserCommand.html",
    "title": "Class CreateClientForUserCommand | ELibrary",
    "keywords": "Class CreateClientForUserCommand Namespace ShopApi.Features.ClientFeature.Command.CreateClient Assembly ShopApi.dll public record CreateClientForUserCommand : IRequest<ClientResponse>, IBaseRequest, IEquatable<CreateClientForUserCommand> Inheritance object CreateClientForUserCommand Implements IRequest<ClientResponse> IBaseRequest IEquatable<CreateClientForUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateClientForUserCommand(string, CreateClientRequest) public CreateClientForUserCommand(string UserId, CreateClientRequest Request) Parameters UserId string Request CreateClientRequest Properties Request public CreateClientRequest Request { get; init; } Property Value CreateClientRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.ClientFeature.Command.CreateClient.CreateClientForUserCommandHandler.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.CreateClient.CreateClientForUserCommandHandler.html",
    "title": "Class CreateClientForUserCommandHandler | ELibrary",
    "keywords": "Class CreateClientForUserCommandHandler Namespace ShopApi.Features.ClientFeature.Command.CreateClient Assembly ShopApi.dll public class CreateClientForUserCommandHandler : IRequestHandler<CreateClientForUserCommand, ClientResponse> Inheritance object CreateClientForUserCommandHandler Implements IRequestHandler<CreateClientForUserCommand, ClientResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateClientForUserCommandHandler(IClientService, IMapper) public CreateClientForUserCommandHandler(IClientService clientService, IMapper mapper) Parameters clientService IClientService mapper IMapper Methods Handle(CreateClientForUserCommand, CancellationToken) Handles a request public Task<ClientResponse> Handle(CreateClientForUserCommand command, CancellationToken cancellationToken) Parameters command CreateClientForUserCommand cancellationToken CancellationToken Cancellation token Returns Task<ClientResponse> Response from the request"
  },
  "api/ShopApi.Features.ClientFeature.Command.CreateClient.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.CreateClient.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Command.CreateClient | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Command.CreateClient Classes CreateClientForUserCommand CreateClientForUserCommandHandler"
  },
  "api/ShopApi.Features.ClientFeature.Command.GetClient.GetClientForUserQuery.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.GetClient.GetClientForUserQuery.html",
    "title": "Class GetClientForUserQuery | ELibrary",
    "keywords": "Class GetClientForUserQuery Namespace ShopApi.Features.ClientFeature.Command.GetClient Assembly ShopApi.dll public record GetClientForUserQuery : IRequest<GetClientResponse>, IBaseRequest, IEquatable<GetClientForUserQuery> Inheritance object GetClientForUserQuery Implements IRequest<GetClientResponse> IBaseRequest IEquatable<GetClientForUserQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetClientForUserQuery(string) public GetClientForUserQuery(string UserId) Parameters UserId string Properties UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.ClientFeature.Command.GetClient.GetClientForUserQueryHandler.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.GetClient.GetClientForUserQueryHandler.html",
    "title": "Class GetClientForUserQueryHandler | ELibrary",
    "keywords": "Class GetClientForUserQueryHandler Namespace ShopApi.Features.ClientFeature.Command.GetClient Assembly ShopApi.dll public class GetClientForUserQueryHandler : IRequestHandler<GetClientForUserQuery, GetClientResponse> Inheritance object GetClientForUserQueryHandler Implements IRequestHandler<GetClientForUserQuery, GetClientResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetClientForUserQueryHandler(IClientService, IMapper) public GetClientForUserQueryHandler(IClientService clientService, IMapper mapper) Parameters clientService IClientService mapper IMapper Methods Handle(GetClientForUserQuery, CancellationToken) Handles a request public Task<GetClientResponse> Handle(GetClientForUserQuery command, CancellationToken cancellationToken) Parameters command GetClientForUserQuery cancellationToken CancellationToken Cancellation token Returns Task<GetClientResponse> Response from the request"
  },
  "api/ShopApi.Features.ClientFeature.Command.GetClient.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.GetClient.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Command.GetClient | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Command.GetClient Classes GetClientForUserQuery GetClientForUserQueryHandler"
  },
  "api/ShopApi.Features.ClientFeature.Command.UpdateClient.UpdateClientForUserCommand.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.UpdateClient.UpdateClientForUserCommand.html",
    "title": "Class UpdateClientForUserCommand | ELibrary",
    "keywords": "Class UpdateClientForUserCommand Namespace ShopApi.Features.ClientFeature.Command.UpdateClient Assembly ShopApi.dll public record UpdateClientForUserCommand : IRequest<ClientResponse>, IBaseRequest, IEquatable<UpdateClientForUserCommand> Inheritance object UpdateClientForUserCommand Implements IRequest<ClientResponse> IBaseRequest IEquatable<UpdateClientForUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateClientForUserCommand(string, UpdateClientRequest) public UpdateClientForUserCommand(string UserId, UpdateClientRequest Request) Parameters UserId string Request UpdateClientRequest Properties Request public UpdateClientRequest Request { get; init; } Property Value UpdateClientRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.ClientFeature.Command.UpdateClient.UpdateClientForUserCommandHandler.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.UpdateClient.UpdateClientForUserCommandHandler.html",
    "title": "Class UpdateClientForUserCommandHandler | ELibrary",
    "keywords": "Class UpdateClientForUserCommandHandler Namespace ShopApi.Features.ClientFeature.Command.UpdateClient Assembly ShopApi.dll public class UpdateClientForUserCommandHandler : IRequestHandler<UpdateClientForUserCommand, ClientResponse> Inheritance object UpdateClientForUserCommandHandler Implements IRequestHandler<UpdateClientForUserCommand, ClientResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateClientForUserCommandHandler(IClientService, IMapper) public UpdateClientForUserCommandHandler(IClientService clientService, IMapper mapper) Parameters clientService IClientService mapper IMapper Methods Handle(UpdateClientForUserCommand, CancellationToken) Handles a request public Task<ClientResponse> Handle(UpdateClientForUserCommand command, CancellationToken cancellationToken) Parameters command UpdateClientForUserCommand cancellationToken CancellationToken Cancellation token Returns Task<ClientResponse> Response from the request"
  },
  "api/ShopApi.Features.ClientFeature.Command.UpdateClient.html": {
    "href": "api/ShopApi.Features.ClientFeature.Command.UpdateClient.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Command.UpdateClient | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Command.UpdateClient Classes UpdateClientForUserCommand UpdateClientForUserCommandHandler"
  },
  "api/ShopApi.Features.ClientFeature.Dtos.CreateClientRequest.html": {
    "href": "api/ShopApi.Features.ClientFeature.Dtos.CreateClientRequest.html",
    "title": "Class CreateClientRequest | ELibrary",
    "keywords": "Class CreateClientRequest Namespace ShopApi.Features.ClientFeature.Dtos Assembly ShopApi.dll public class CreateClientRequest Inheritance object CreateClientRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string? Address { get; set; } Property Value string DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime Email public string? Email { get; set; } Property Value string LastName public string? LastName { get; set; } Property Value string MiddleName public string? MiddleName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Phone public string? Phone { get; set; } Property Value string"
  },
  "api/ShopApi.Features.ClientFeature.Dtos.GetClientResponse.html": {
    "href": "api/ShopApi.Features.ClientFeature.Dtos.GetClientResponse.html",
    "title": "Class GetClientResponse | ELibrary",
    "keywords": "Class GetClientResponse Namespace ShopApi.Features.ClientFeature.Dtos Assembly ShopApi.dll public class GetClientResponse Inheritance object GetClientResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Client public ClientResponse? Client { get; set; } Property Value ClientResponse"
  },
  "api/ShopApi.Features.ClientFeature.Dtos.UpdateClientRequest.html": {
    "href": "api/ShopApi.Features.ClientFeature.Dtos.UpdateClientRequest.html",
    "title": "Class UpdateClientRequest | ELibrary",
    "keywords": "Class UpdateClientRequest Namespace ShopApi.Features.ClientFeature.Dtos Assembly ShopApi.dll public class UpdateClientRequest Inheritance object UpdateClientRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address public string? Address { get; set; } Property Value string DateOfBirth public DateTime DateOfBirth { get; set; } Property Value DateTime Email public string? Email { get; set; } Property Value string LastName public string? LastName { get; set; } Property Value string MiddleName public string? MiddleName { get; set; } Property Value string Name public string? Name { get; set; } Property Value string Phone public string? Phone { get; set; } Property Value string"
  },
  "api/ShopApi.Features.ClientFeature.Dtos.html": {
    "href": "api/ShopApi.Features.ClientFeature.Dtos.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Dtos Classes CreateClientRequest GetClientResponse UpdateClientRequest"
  },
  "api/ShopApi.Features.ClientFeature.Services.ClientService.html": {
    "href": "api/ShopApi.Features.ClientFeature.Services.ClientService.html",
    "title": "Class ClientService | ELibrary",
    "keywords": "Class ClientService Namespace ShopApi.Features.ClientFeature.Services Assembly ShopApi.dll public class ClientService : IClientService Inheritance object ClientService Implements IClientService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientService(IClientRepository) public ClientService(IClientRepository repository) Parameters repository IClientRepository Methods CreateClientAsync(Client, CancellationToken) public Task<Client> CreateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client> DeleteClientAsync(string, CancellationToken) public Task DeleteClientAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task GetClientByUserIdAsync(string, CancellationToken) public Task<Client?> GetClientByUserIdAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Client> UpdateClientAsync(Client, CancellationToken) public Task<Client> UpdateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client>"
  },
  "api/ShopApi.Features.ClientFeature.Services.IClientService.html": {
    "href": "api/ShopApi.Features.ClientFeature.Services.IClientService.html",
    "title": "Interface IClientService | ELibrary",
    "keywords": "Interface IClientService Namespace ShopApi.Features.ClientFeature.Services Assembly ShopApi.dll public interface IClientService Methods CreateClientAsync(Client, CancellationToken) Task<Client> CreateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client> DeleteClientAsync(string, CancellationToken) Task DeleteClientAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task GetClientByUserIdAsync(string, CancellationToken) Task<Client?> GetClientByUserIdAsync(string userId, CancellationToken cancellationToken) Parameters userId string cancellationToken CancellationToken Returns Task<Client> UpdateClientAsync(Client, CancellationToken) Task<Client> UpdateClientAsync(Client client, CancellationToken cancellationToken) Parameters client Client cancellationToken CancellationToken Returns Task<Client>"
  },
  "api/ShopApi.Features.ClientFeature.Services.html": {
    "href": "api/ShopApi.Features.ClientFeature.Services.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Services Classes ClientService Interfaces IClientService"
  },
  "api/ShopApi.Features.ClientFeature.Validators.CreateClientRequestValidator.html": {
    "href": "api/ShopApi.Features.ClientFeature.Validators.CreateClientRequestValidator.html",
    "title": "Class CreateClientRequestValidator | ELibrary",
    "keywords": "Class CreateClientRequestValidator Namespace ShopApi.Features.ClientFeature.Validators Assembly ShopApi.dll public class CreateClientRequestValidator : AbstractValidator<CreateClientRequest>, IValidator<CreateClientRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateClientRequest> CreateClientRequestValidator Implements IValidator<CreateClientRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateClientRequest>.Validate(CreateClientRequest) AbstractValidator<CreateClientRequest>.ValidateAsync(CreateClientRequest, CancellationToken) AbstractValidator<CreateClientRequest>.Validate(ValidationContext<CreateClientRequest>) AbstractValidator<CreateClientRequest>.ValidateAsync(ValidationContext<CreateClientRequest>, CancellationToken) AbstractValidator<CreateClientRequest>.CreateDescriptor() AbstractValidator<CreateClientRequest>.RuleFor<TProperty>(Expression<Func<CreateClientRequest, TProperty>>) AbstractValidator<CreateClientRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateClientRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateClientRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateClientRequest, TProperty>>, Func<CreateClientRequest, TProperty, TTransformed>) AbstractValidator<CreateClientRequest>.RuleForEach<TElement>(Expression<Func<CreateClientRequest, IEnumerable<TElement>>>) AbstractValidator<CreateClientRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateClientRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateClientRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateClientRequest, IEnumerable<TElement>>>, Func<CreateClientRequest, TElement, TTransformed>) AbstractValidator<CreateClientRequest>.RuleSet(string, Action) AbstractValidator<CreateClientRequest>.When(Func<CreateClientRequest, bool>, Action) AbstractValidator<CreateClientRequest>.When(Func<CreateClientRequest, ValidationContext<CreateClientRequest>, bool>, Action) AbstractValidator<CreateClientRequest>.Unless(Func<CreateClientRequest, bool>, Action) AbstractValidator<CreateClientRequest>.Unless(Func<CreateClientRequest, ValidationContext<CreateClientRequest>, bool>, Action) AbstractValidator<CreateClientRequest>.WhenAsync(Func<CreateClientRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateClientRequest>.WhenAsync(Func<CreateClientRequest, ValidationContext<CreateClientRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateClientRequest>.UnlessAsync(Func<CreateClientRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateClientRequest>.UnlessAsync(Func<CreateClientRequest, ValidationContext<CreateClientRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateClientRequest>.Include(IValidator<CreateClientRequest>) AbstractValidator<CreateClientRequest>.Include<TValidator>(Func<CreateClientRequest, TValidator>) AbstractValidator<CreateClientRequest>.GetEnumerator() AbstractValidator<CreateClientRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateClientRequest>.PreValidate(ValidationContext<CreateClientRequest>, ValidationResult) AbstractValidator<CreateClientRequest>.RaiseValidationException(ValidationContext<CreateClientRequest>, ValidationResult) AbstractValidator<CreateClientRequest>.CascadeMode AbstractValidator<CreateClientRequest>.ClassLevelCascadeMode AbstractValidator<CreateClientRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateClientRequestValidator() public CreateClientRequestValidator()"
  },
  "api/ShopApi.Features.ClientFeature.Validators.UpdateClientRequestValidator.html": {
    "href": "api/ShopApi.Features.ClientFeature.Validators.UpdateClientRequestValidator.html",
    "title": "Class UpdateClientRequestValidator | ELibrary",
    "keywords": "Class UpdateClientRequestValidator Namespace ShopApi.Features.ClientFeature.Validators Assembly ShopApi.dll public class UpdateClientRequestValidator : AbstractValidator<UpdateClientRequest>, IValidator<UpdateClientRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UpdateClientRequest> UpdateClientRequestValidator Implements IValidator<UpdateClientRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UpdateClientRequest>.Validate(UpdateClientRequest) AbstractValidator<UpdateClientRequest>.ValidateAsync(UpdateClientRequest, CancellationToken) AbstractValidator<UpdateClientRequest>.Validate(ValidationContext<UpdateClientRequest>) AbstractValidator<UpdateClientRequest>.ValidateAsync(ValidationContext<UpdateClientRequest>, CancellationToken) AbstractValidator<UpdateClientRequest>.CreateDescriptor() AbstractValidator<UpdateClientRequest>.RuleFor<TProperty>(Expression<Func<UpdateClientRequest, TProperty>>) AbstractValidator<UpdateClientRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateClientRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UpdateClientRequest>.Transform<TProperty, TTransformed>(Expression<Func<UpdateClientRequest, TProperty>>, Func<UpdateClientRequest, TProperty, TTransformed>) AbstractValidator<UpdateClientRequest>.RuleForEach<TElement>(Expression<Func<UpdateClientRequest, IEnumerable<TElement>>>) AbstractValidator<UpdateClientRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateClientRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UpdateClientRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UpdateClientRequest, IEnumerable<TElement>>>, Func<UpdateClientRequest, TElement, TTransformed>) AbstractValidator<UpdateClientRequest>.RuleSet(string, Action) AbstractValidator<UpdateClientRequest>.When(Func<UpdateClientRequest, bool>, Action) AbstractValidator<UpdateClientRequest>.When(Func<UpdateClientRequest, ValidationContext<UpdateClientRequest>, bool>, Action) AbstractValidator<UpdateClientRequest>.Unless(Func<UpdateClientRequest, bool>, Action) AbstractValidator<UpdateClientRequest>.Unless(Func<UpdateClientRequest, ValidationContext<UpdateClientRequest>, bool>, Action) AbstractValidator<UpdateClientRequest>.WhenAsync(Func<UpdateClientRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateClientRequest>.WhenAsync(Func<UpdateClientRequest, ValidationContext<UpdateClientRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateClientRequest>.UnlessAsync(Func<UpdateClientRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateClientRequest>.UnlessAsync(Func<UpdateClientRequest, ValidationContext<UpdateClientRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UpdateClientRequest>.Include(IValidator<UpdateClientRequest>) AbstractValidator<UpdateClientRequest>.Include<TValidator>(Func<UpdateClientRequest, TValidator>) AbstractValidator<UpdateClientRequest>.GetEnumerator() AbstractValidator<UpdateClientRequest>.EnsureInstanceNotNull(object) AbstractValidator<UpdateClientRequest>.PreValidate(ValidationContext<UpdateClientRequest>, ValidationResult) AbstractValidator<UpdateClientRequest>.RaiseValidationException(ValidationContext<UpdateClientRequest>, ValidationResult) AbstractValidator<UpdateClientRequest>.CascadeMode AbstractValidator<UpdateClientRequest>.ClassLevelCascadeMode AbstractValidator<UpdateClientRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateClientRequestValidator() public UpdateClientRequestValidator()"
  },
  "api/ShopApi.Features.ClientFeature.Validators.html": {
    "href": "api/ShopApi.Features.ClientFeature.Validators.html",
    "title": "Namespace ShopApi.Features.ClientFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.ClientFeature.Validators Classes CreateClientRequestValidator UpdateClientRequestValidator"
  },
  "api/ShopApi.Features.OrderFeature.Command.CancelOrder.CancelOrderCommand.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CancelOrder.CancelOrderCommand.html",
    "title": "Class CancelOrderCommand | ELibrary",
    "keywords": "Class CancelOrderCommand Namespace ShopApi.Features.OrderFeature.Command.CancelOrder Assembly ShopApi.dll public record CancelOrderCommand : IRequest<Unit>, IBaseRequest, IEquatable<CancelOrderCommand> Inheritance object CancelOrderCommand Implements IRequest<Unit> IBaseRequest IEquatable<CancelOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CancelOrderCommand(string, int) public CancelOrderCommand(string UserId, int OrderId) Parameters UserId string OrderId int Properties OrderId public int OrderId { get; init; } Property Value int UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.OrderFeature.Command.CancelOrder.CancelOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CancelOrder.CancelOrderCommandHandler.html",
    "title": "Class CancelOrderCommandHandler | ELibrary",
    "keywords": "Class CancelOrderCommandHandler Namespace ShopApi.Features.OrderFeature.Command.CancelOrder Assembly ShopApi.dll public class CancelOrderCommandHandler : IRequestHandler<CancelOrderCommand, Unit> Inheritance object CancelOrderCommandHandler Implements IRequestHandler<CancelOrderCommand, Unit> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CancelOrderCommandHandler(IOrderService, IClientService, IStockBookOrderService) public CancelOrderCommandHandler(IOrderService orderService, IClientService clientService, IStockBookOrderService stockBookOrderService) Parameters orderService IOrderService clientService IClientService stockBookOrderService IStockBookOrderService Methods Handle(CancelOrderCommand, CancellationToken) Handles a request public Task<Unit> Handle(CancelOrderCommand command, CancellationToken cancellationToken) Parameters command CancelOrderCommand cancellationToken CancellationToken Cancellation token Returns Task<Unit> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.CancelOrder.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CancelOrder.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.CancelOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.CancelOrder Classes CancelOrderCommand CancelOrderCommandHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.CreateOrder.CreateOrderCommand.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CreateOrder.CreateOrderCommand.html",
    "title": "Class CreateOrderCommand | ELibrary",
    "keywords": "Class CreateOrderCommand Namespace ShopApi.Features.OrderFeature.Command.CreateOrder Assembly ShopApi.dll public record CreateOrderCommand : IRequest<OrderResponse>, IBaseRequest, IEquatable<CreateOrderCommand> Inheritance object CreateOrderCommand Implements IRequest<OrderResponse> IBaseRequest IEquatable<CreateOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderCommand(string, CreateOrderRequest) public CreateOrderCommand(string UserId, CreateOrderRequest Request) Parameters UserId string Request CreateOrderRequest Properties Request public CreateOrderRequest Request { get; init; } Property Value CreateOrderRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.OrderFeature.Command.CreateOrder.CreateOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CreateOrder.CreateOrderCommandHandler.html",
    "title": "Class CreateOrderCommandHandler | ELibrary",
    "keywords": "Class CreateOrderCommandHandler Namespace ShopApi.Features.OrderFeature.Command.CreateOrder Assembly ShopApi.dll public class CreateOrderCommandHandler : IRequestHandler<CreateOrderCommand, OrderResponse> Inheritance object CreateOrderCommandHandler Implements IRequestHandler<CreateOrderCommand, OrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderCommandHandler(IOrderService, IClientService, IStockBookOrderService, ILibraryService, IMapper) public CreateOrderCommandHandler(IOrderService orderService, IClientService clientService, IStockBookOrderService stockBookOrderService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService clientService IClientService stockBookOrderService IStockBookOrderService libraryService ILibraryService mapper IMapper Methods Handle(CreateOrderCommand, CancellationToken) Handles a request public Task<OrderResponse> Handle(CreateOrderCommand command, CancellationToken cancellationToken) Parameters command CreateOrderCommand cancellationToken CancellationToken Cancellation token Returns Task<OrderResponse> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.CreateOrder.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.CreateOrder.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.CreateOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.CreateOrder Classes CreateOrderCommand CreateOrderCommandHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.GetOrderAmountQuery.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.GetOrderAmountQuery.html",
    "title": "Class GetOrderAmountQuery | ELibrary",
    "keywords": "Class GetOrderAmountQuery Namespace ShopApi.Features.OrderFeature.Command.GetOrderAmount Assembly ShopApi.dll public record GetOrderAmountQuery : IRequest<int>, IBaseRequest, IEquatable<GetOrderAmountQuery> Inheritance object GetOrderAmountQuery Implements IRequest<int> IBaseRequest IEquatable<GetOrderAmountQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAmountQuery(string, GetOrdersFilter) public GetOrderAmountQuery(string UserId, GetOrdersFilter Request) Parameters UserId string Request GetOrdersFilter Properties Request public GetOrdersFilter Request { get; init; } Property Value GetOrdersFilter UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.GetOrderAmountQueryHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.GetOrderAmountQueryHandler.html",
    "title": "Class GetOrderAmountQueryHandler | ELibrary",
    "keywords": "Class GetOrderAmountQueryHandler Namespace ShopApi.Features.OrderFeature.Command.GetOrderAmount Assembly ShopApi.dll public class GetOrderAmountQueryHandler : IRequestHandler<GetOrderAmountQuery, int> Inheritance object GetOrderAmountQueryHandler Implements IRequestHandler<GetOrderAmountQuery, int> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrderAmountQueryHandler(IOrderService, IClientService) public GetOrderAmountQueryHandler(IOrderService orderService, IClientService clientService) Parameters orderService IOrderService clientService IClientService Methods Handle(GetOrderAmountQuery, CancellationToken) Handles a request public Task<int> Handle(GetOrderAmountQuery command, CancellationToken cancellationToken) Parameters command GetOrderAmountQuery cancellationToken CancellationToken Cancellation token Returns Task<int> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrderAmount.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.GetOrderAmount | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.GetOrderAmount Classes GetOrderAmountQuery GetOrderAmountQueryHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrders.GetOrdersQuery.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrders.GetOrdersQuery.html",
    "title": "Class GetOrdersQuery | ELibrary",
    "keywords": "Class GetOrdersQuery Namespace ShopApi.Features.OrderFeature.Command.GetOrders Assembly ShopApi.dll public record GetOrdersQuery : IRequest<IEnumerable<OrderResponse>>, IBaseRequest, IEquatable<GetOrdersQuery> Inheritance object GetOrdersQuery Implements IRequest<IEnumerable<OrderResponse>> IBaseRequest IEquatable<GetOrdersQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrdersQuery(string, GetOrdersFilter) public GetOrdersQuery(string UserId, GetOrdersFilter Request) Parameters UserId string Request GetOrdersFilter Properties Request public GetOrdersFilter Request { get; init; } Property Value GetOrdersFilter UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrders.GetOrdersQueryHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrders.GetOrdersQueryHandler.html",
    "title": "Class GetOrdersQueryHandler | ELibrary",
    "keywords": "Class GetOrdersQueryHandler Namespace ShopApi.Features.OrderFeature.Command.GetOrders Assembly ShopApi.dll public class GetOrdersQueryHandler : IRequestHandler<GetOrdersQuery, IEnumerable<OrderResponse>> Inheritance object GetOrdersQueryHandler Implements IRequestHandler<GetOrdersQuery, IEnumerable<OrderResponse>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrdersQueryHandler(IOrderService, IClientService, ILibraryService, IMapper) public GetOrdersQueryHandler(IOrderService orderService, IClientService clientService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService clientService IClientService libraryService ILibraryService mapper IMapper Methods Handle(GetOrdersQuery, CancellationToken) Handles a request public Task<IEnumerable<OrderResponse>> Handle(GetOrdersQuery command, CancellationToken cancellationToken) Parameters command GetOrdersQuery cancellationToken CancellationToken Cancellation token Returns Task<IEnumerable<OrderResponse>> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.GetOrders.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.GetOrders.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.GetOrders | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.GetOrders Classes GetOrdersQuery GetOrdersQueryHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.ManagerCancelOrderCommand.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.ManagerCancelOrderCommand.html",
    "title": "Class ManagerCancelOrderCommand | ELibrary",
    "keywords": "Class ManagerCancelOrderCommand Namespace ShopApi.Features.OrderFeature.Command.ManagerCancelOrder Assembly ShopApi.dll public record ManagerCancelOrderCommand : IRequest<Unit>, IBaseRequest, IEquatable<ManagerCancelOrderCommand> Inheritance object ManagerCancelOrderCommand Implements IRequest<Unit> IBaseRequest IEquatable<ManagerCancelOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerCancelOrderCommand(int) public ManagerCancelOrderCommand(int OrderId) Parameters OrderId int Properties OrderId public int OrderId { get; init; } Property Value int"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.ManagerCancelOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.ManagerCancelOrderCommandHandler.html",
    "title": "Class ManagerCancelOrderCommandHandler | ELibrary",
    "keywords": "Class ManagerCancelOrderCommandHandler Namespace ShopApi.Features.OrderFeature.Command.ManagerCancelOrder Assembly ShopApi.dll public class ManagerCancelOrderCommandHandler : IRequestHandler<ManagerCancelOrderCommand, Unit> Inheritance object ManagerCancelOrderCommandHandler Implements IRequestHandler<ManagerCancelOrderCommand, Unit> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerCancelOrderCommandHandler(IOrderService, IStockBookOrderService) public ManagerCancelOrderCommandHandler(IOrderService orderService, IStockBookOrderService stockBookOrderService) Parameters orderService IOrderService stockBookOrderService IStockBookOrderService Methods Handle(ManagerCancelOrderCommand, CancellationToken) Handles a request public Task<Unit> Handle(ManagerCancelOrderCommand request, CancellationToken cancellationToken) Parameters request ManagerCancelOrderCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Unit> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerCancelOrder.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.ManagerCancelOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.ManagerCancelOrder Classes ManagerCancelOrderCommand ManagerCancelOrderCommandHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.ManagerGetOrderAmountQuery.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.ManagerGetOrderAmountQuery.html",
    "title": "Class ManagerGetOrderAmountQuery | ELibrary",
    "keywords": "Class ManagerGetOrderAmountQuery Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount Assembly ShopApi.dll public record ManagerGetOrderAmountQuery : IRequest<int>, IBaseRequest, IEquatable<ManagerGetOrderAmountQuery> Inheritance object ManagerGetOrderAmountQuery Implements IRequest<int> IBaseRequest IEquatable<ManagerGetOrderAmountQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetOrderAmountQuery(GetOrdersFilter) public ManagerGetOrderAmountQuery(GetOrdersFilter Filter) Parameters Filter GetOrdersFilter Properties Filter public GetOrdersFilter Filter { get; init; } Property Value GetOrdersFilter"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.ManagerGetOrderAmountQueryHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.ManagerGetOrderAmountQueryHandler.html",
    "title": "Class ManagerGetOrderAmountQueryHandler | ELibrary",
    "keywords": "Class ManagerGetOrderAmountQueryHandler Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount Assembly ShopApi.dll public class ManagerGetOrderAmountQueryHandler : IRequestHandler<ManagerGetOrderAmountQuery, int> Inheritance object ManagerGetOrderAmountQueryHandler Implements IRequestHandler<ManagerGetOrderAmountQuery, int> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetOrderAmountQueryHandler(IOrderService) public ManagerGetOrderAmountQueryHandler(IOrderService orderService) Parameters orderService IOrderService Methods Handle(ManagerGetOrderAmountQuery, CancellationToken) Handles a request public Task<int> Handle(ManagerGetOrderAmountQuery request, CancellationToken cancellationToken) Parameters request ManagerGetOrderAmountQuery The request cancellationToken CancellationToken Cancellation token Returns Task<int> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderAmount Classes ManagerGetOrderAmountQuery ManagerGetOrderAmountQueryHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.ManagerGetOrderByIdQuery.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.ManagerGetOrderByIdQuery.html",
    "title": "Class ManagerGetOrderByIdQuery | ELibrary",
    "keywords": "Class ManagerGetOrderByIdQuery Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderById Assembly ShopApi.dll public record ManagerGetOrderByIdQuery : IRequest<OrderResponse?>, IBaseRequest, IEquatable<ManagerGetOrderByIdQuery> Inheritance object ManagerGetOrderByIdQuery Implements IRequest<OrderResponse> IBaseRequest IEquatable<ManagerGetOrderByIdQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetOrderByIdQuery(int) public ManagerGetOrderByIdQuery(int OrderId) Parameters OrderId int Properties OrderId public int OrderId { get; init; } Property Value int"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.ManagerGetOrderByIdQueryHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.ManagerGetOrderByIdQueryHandler.html",
    "title": "Class ManagerGetOrderByIdQueryHandler | ELibrary",
    "keywords": "Class ManagerGetOrderByIdQueryHandler Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderById Assembly ShopApi.dll public class ManagerGetOrderByIdQueryHandler : IRequestHandler<ManagerGetOrderByIdQuery, OrderResponse?> Inheritance object ManagerGetOrderByIdQueryHandler Implements IRequestHandler<ManagerGetOrderByIdQuery, OrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetOrderByIdQueryHandler(IOrderService, ILibraryService, IMapper) public ManagerGetOrderByIdQueryHandler(IOrderService orderService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService libraryService ILibraryService mapper IMapper Methods Handle(ManagerGetOrderByIdQuery, CancellationToken) Handles a request public Task<OrderResponse?> Handle(ManagerGetOrderByIdQuery command, CancellationToken cancellationToken) Parameters command ManagerGetOrderByIdQuery cancellationToken CancellationToken Cancellation token Returns Task<OrderResponse> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetOrderById.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderById | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetOrderById Classes ManagerGetOrderByIdQuery ManagerGetOrderByIdQueryHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.ManagerGetPaginatedOrdersQuery.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.ManagerGetPaginatedOrdersQuery.html",
    "title": "Class ManagerGetPaginatedOrdersQuery | ELibrary",
    "keywords": "Class ManagerGetPaginatedOrdersQuery Namespace ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders Assembly ShopApi.dll public record ManagerGetPaginatedOrdersQuery : IRequest<IEnumerable<OrderResponse>>, IBaseRequest, IEquatable<ManagerGetPaginatedOrdersQuery> Inheritance object ManagerGetPaginatedOrdersQuery Implements IRequest<IEnumerable<OrderResponse>> IBaseRequest IEquatable<ManagerGetPaginatedOrdersQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetPaginatedOrdersQuery(GetOrdersFilter) public ManagerGetPaginatedOrdersQuery(GetOrdersFilter Filter) Parameters Filter GetOrdersFilter Properties Filter public GetOrdersFilter Filter { get; init; } Property Value GetOrdersFilter"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.ManagerGetPaginatedOrdersQueryHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.ManagerGetPaginatedOrdersQueryHandler.html",
    "title": "Class ManagerGetPaginatedOrdersQueryHandler | ELibrary",
    "keywords": "Class ManagerGetPaginatedOrdersQueryHandler Namespace ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders Assembly ShopApi.dll public class ManagerGetPaginatedOrdersQueryHandler : IRequestHandler<ManagerGetPaginatedOrdersQuery, IEnumerable<OrderResponse>> Inheritance object ManagerGetPaginatedOrdersQueryHandler Implements IRequestHandler<ManagerGetPaginatedOrdersQuery, IEnumerable<OrderResponse>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerGetPaginatedOrdersQueryHandler(IOrderService, ILibraryService, IMapper) public ManagerGetPaginatedOrdersQueryHandler(IOrderService orderService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService libraryService ILibraryService mapper IMapper Methods Handle(ManagerGetPaginatedOrdersQuery, CancellationToken) Handles a request public Task<IEnumerable<OrderResponse>> Handle(ManagerGetPaginatedOrdersQuery command, CancellationToken cancellationToken) Parameters command ManagerGetPaginatedOrdersQuery cancellationToken CancellationToken Cancellation token Returns Task<IEnumerable<OrderResponse>> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.ManagerGetPaginatedOrders Classes ManagerGetPaginatedOrdersQuery ManagerGetPaginatedOrdersQueryHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.ManagerUpdateOrderCommand.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.ManagerUpdateOrderCommand.html",
    "title": "Class ManagerUpdateOrderCommand | ELibrary",
    "keywords": "Class ManagerUpdateOrderCommand Namespace ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder Assembly ShopApi.dll public record ManagerUpdateOrderCommand : IRequest<OrderResponse>, IBaseRequest, IEquatable<ManagerUpdateOrderCommand> Inheritance object ManagerUpdateOrderCommand Implements IRequest<OrderResponse> IBaseRequest IEquatable<ManagerUpdateOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerUpdateOrderCommand(ManagerUpdateOrderRequest) public ManagerUpdateOrderCommand(ManagerUpdateOrderRequest Request) Parameters Request ManagerUpdateOrderRequest Properties Request public ManagerUpdateOrderRequest Request { get; init; } Property Value ManagerUpdateOrderRequest"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.ManagerUpdateOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.ManagerUpdateOrderCommandHandler.html",
    "title": "Class ManagerUpdateOrderCommandHandler | ELibrary",
    "keywords": "Class ManagerUpdateOrderCommandHandler Namespace ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder Assembly ShopApi.dll public class ManagerUpdateOrderCommandHandler : IRequestHandler<ManagerUpdateOrderCommand, OrderResponse> Inheritance object ManagerUpdateOrderCommandHandler Implements IRequestHandler<ManagerUpdateOrderCommand, OrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerUpdateOrderCommandHandler(IOrderService, ILibraryService, IMapper) public ManagerUpdateOrderCommandHandler(IOrderService orderService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService libraryService ILibraryService mapper IMapper Methods Handle(ManagerUpdateOrderCommand, CancellationToken) Handles a request public Task<OrderResponse> Handle(ManagerUpdateOrderCommand command, CancellationToken cancellationToken) Parameters command ManagerUpdateOrderCommand cancellationToken CancellationToken Cancellation token Returns Task<OrderResponse> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.ManagerUpdateOrder Classes ManagerUpdateOrderCommand ManagerUpdateOrderCommandHandler"
  },
  "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.UpdateOrderCommand.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.UpdateOrderCommand.html",
    "title": "Class UpdateOrderCommand | ELibrary",
    "keywords": "Class UpdateOrderCommand Namespace ShopApi.Features.OrderFeature.Command.UpdateOrder Assembly ShopApi.dll public record UpdateOrderCommand : IRequest<OrderResponse>, IBaseRequest, IEquatable<UpdateOrderCommand> Inheritance object UpdateOrderCommand Implements IRequest<OrderResponse> IBaseRequest IEquatable<UpdateOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderCommand(string, ClientUpdateOrderRequest) public UpdateOrderCommand(string UserId, ClientUpdateOrderRequest Request) Parameters UserId string Request ClientUpdateOrderRequest Properties Request public ClientUpdateOrderRequest Request { get; init; } Property Value ClientUpdateOrderRequest UserId public string UserId { get; init; } Property Value string"
  },
  "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.UpdateOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.UpdateOrderCommandHandler.html",
    "title": "Class UpdateOrderCommandHandler | ELibrary",
    "keywords": "Class UpdateOrderCommandHandler Namespace ShopApi.Features.OrderFeature.Command.UpdateOrder Assembly ShopApi.dll public class UpdateOrderCommandHandler : IRequestHandler<UpdateOrderCommand, OrderResponse> Inheritance object UpdateOrderCommandHandler Implements IRequestHandler<UpdateOrderCommand, OrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateOrderCommandHandler(IOrderService, IClientService, ILibraryService, IMapper) public UpdateOrderCommandHandler(IOrderService orderService, IClientService clientService, ILibraryService libraryService, IMapper mapper) Parameters orderService IOrderService clientService IClientService libraryService ILibraryService mapper IMapper Methods Handle(UpdateOrderCommand, CancellationToken) Handles a request public Task<OrderResponse> Handle(UpdateOrderCommand command, CancellationToken cancellationToken) Parameters command UpdateOrderCommand cancellationToken CancellationToken Cancellation token Returns Task<OrderResponse> Response from the request"
  },
  "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.html": {
    "href": "api/ShopApi.Features.OrderFeature.Command.UpdateOrder.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Command.UpdateOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Command.UpdateOrder Classes UpdateOrderCommand UpdateOrderCommandHandler"
  },
  "api/ShopApi.Features.OrderFeature.Dtos.ClientUpdateOrderRequest.html": {
    "href": "api/ShopApi.Features.OrderFeature.Dtos.ClientUpdateOrderRequest.html",
    "title": "Class ClientUpdateOrderRequest | ELibrary",
    "keywords": "Class ClientUpdateOrderRequest Namespace ShopApi.Features.OrderFeature.Dtos Assembly ShopApi.dll public class ClientUpdateOrderRequest Inheritance object ClientUpdateOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContactClientName public string? ContactClientName { get; set; } Property Value string ContactPhone public string? ContactPhone { get; set; } Property Value string DeliveryAddress public string? DeliveryAddress { get; set; } Property Value string DeliveryMethod public DeliveryMethod DeliveryMethod { get; set; } Property Value DeliveryMethod DeliveryTime public DateTime DeliveryTime { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int PaymentMethod public PaymentMethod PaymentMethod { get; set; } Property Value PaymentMethod"
  },
  "api/ShopApi.Features.OrderFeature.Dtos.CreateOrderRequest.html": {
    "href": "api/ShopApi.Features.OrderFeature.Dtos.CreateOrderRequest.html",
    "title": "Class CreateOrderRequest | ELibrary",
    "keywords": "Class CreateOrderRequest Namespace ShopApi.Features.OrderFeature.Dtos Assembly ShopApi.dll public class CreateOrderRequest Inheritance object CreateOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContactClientName public string? ContactClientName { get; set; } Property Value string ContactPhone public string? ContactPhone { get; set; } Property Value string DeliveryAddress public string? DeliveryAddress { get; set; } Property Value string DeliveryMethod public DeliveryMethod DeliveryMethod { get; set; } Property Value DeliveryMethod DeliveryTime public DateTime DeliveryTime { get; set; } Property Value DateTime OrderBooks public List<OrderBookRequest> OrderBooks { get; set; } Property Value List<OrderBookRequest> PaymentMethod public PaymentMethod PaymentMethod { get; set; } Property Value PaymentMethod"
  },
  "api/ShopApi.Features.OrderFeature.Dtos.ManagerUpdateOrderRequest.html": {
    "href": "api/ShopApi.Features.OrderFeature.Dtos.ManagerUpdateOrderRequest.html",
    "title": "Class ManagerUpdateOrderRequest | ELibrary",
    "keywords": "Class ManagerUpdateOrderRequest Namespace ShopApi.Features.OrderFeature.Dtos Assembly ShopApi.dll public class ManagerUpdateOrderRequest Inheritance object ManagerUpdateOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DeliveryAddress public string? DeliveryAddress { get; set; } Property Value string DeliveryTime public DateTime DeliveryTime { get; set; } Property Value DateTime Id public int Id { get; set; } Property Value int OrderStatus public OrderStatus OrderStatus { get; set; } Property Value OrderStatus"
  },
  "api/ShopApi.Features.OrderFeature.Dtos.OrderBookRequest.html": {
    "href": "api/ShopApi.Features.OrderFeature.Dtos.OrderBookRequest.html",
    "title": "Class OrderBookRequest | ELibrary",
    "keywords": "Class OrderBookRequest Namespace ShopApi.Features.OrderFeature.Dtos Assembly ShopApi.dll public class OrderBookRequest Inheritance object OrderBookRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookAmount public int BookAmount { get; set; } Property Value int BookId public int BookId { get; set; } Property Value int"
  },
  "api/ShopApi.Features.OrderFeature.Dtos.html": {
    "href": "api/ShopApi.Features.OrderFeature.Dtos.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Dtos Classes ClientUpdateOrderRequest CreateOrderRequest ManagerUpdateOrderRequest OrderBookRequest"
  },
  "api/ShopApi.Features.OrderFeature.Services.IOrderService.html": {
    "href": "api/ShopApi.Features.OrderFeature.Services.IOrderService.html",
    "title": "Interface IOrderService | ELibrary",
    "keywords": "Interface IOrderService Namespace ShopApi.Features.OrderFeature.Services Assembly ShopApi.dll public interface IOrderService Methods CreateOrderAsync(Order, CancellationToken) Task<Order> CreateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order> DeleteOrderAsync(int, CancellationToken) Task DeleteOrderAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task GetOrderAmountAsync(GetOrdersFilter, CancellationToken) Task<int> GetOrderAmountAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<int> GetOrderByIdAsync(int, CancellationToken) Task<Order?> GetOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<Order> GetPaginatedOrdersAsync(GetOrdersFilter, CancellationToken) Task<IEnumerable<Order>> GetPaginatedOrdersAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<IEnumerable<Order>> UpdateOrderAsync(Order, CancellationToken) Task<Order> UpdateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order>"
  },
  "api/ShopApi.Features.OrderFeature.Services.OrderService.html": {
    "href": "api/ShopApi.Features.OrderFeature.Services.OrderService.html",
    "title": "Class OrderService | ELibrary",
    "keywords": "Class OrderService Namespace ShopApi.Features.OrderFeature.Services Assembly ShopApi.dll public class OrderService : IOrderService Inheritance object OrderService Implements IOrderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderService(IOrderRepository) public OrderService(IOrderRepository repository) Parameters repository IOrderRepository Methods CreateOrderAsync(Order, CancellationToken) public Task<Order> CreateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order> DeleteOrderAsync(int, CancellationToken) public Task DeleteOrderAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task GetOrderAmountAsync(GetOrdersFilter, CancellationToken) public Task<int> GetOrderAmountAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<int> GetOrderByIdAsync(int, CancellationToken) public Task<Order?> GetOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<Order> GetPaginatedOrdersAsync(GetOrdersFilter, CancellationToken) public Task<IEnumerable<Order>> GetPaginatedOrdersAsync(GetOrdersFilter filter, CancellationToken cancellationToken) Parameters filter GetOrdersFilter cancellationToken CancellationToken Returns Task<IEnumerable<Order>> UpdateOrderAsync(Order, CancellationToken) public Task<Order> UpdateOrderAsync(Order order, CancellationToken cancellationToken) Parameters order Order cancellationToken CancellationToken Returns Task<Order>"
  },
  "api/ShopApi.Features.OrderFeature.Services.html": {
    "href": "api/ShopApi.Features.OrderFeature.Services.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Services Classes OrderService Interfaces IOrderService"
  },
  "api/ShopApi.Features.OrderFeature.Validators.ClientUpdateOrderRequestValidator.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.ClientUpdateOrderRequestValidator.html",
    "title": "Class ClientUpdateOrderRequestValidator | ELibrary",
    "keywords": "Class ClientUpdateOrderRequestValidator Namespace ShopApi.Features.OrderFeature.Validators Assembly ShopApi.dll public class ClientUpdateOrderRequestValidator : AbstractValidator<ClientUpdateOrderRequest>, IValidator<ClientUpdateOrderRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ClientUpdateOrderRequest> ClientUpdateOrderRequestValidator Implements IValidator<ClientUpdateOrderRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ClientUpdateOrderRequest>.Validate(ClientUpdateOrderRequest) AbstractValidator<ClientUpdateOrderRequest>.ValidateAsync(ClientUpdateOrderRequest, CancellationToken) AbstractValidator<ClientUpdateOrderRequest>.Validate(ValidationContext<ClientUpdateOrderRequest>) AbstractValidator<ClientUpdateOrderRequest>.ValidateAsync(ValidationContext<ClientUpdateOrderRequest>, CancellationToken) AbstractValidator<ClientUpdateOrderRequest>.CreateDescriptor() AbstractValidator<ClientUpdateOrderRequest>.RuleFor<TProperty>(Expression<Func<ClientUpdateOrderRequest, TProperty>>) AbstractValidator<ClientUpdateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<ClientUpdateOrderRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ClientUpdateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<ClientUpdateOrderRequest, TProperty>>, Func<ClientUpdateOrderRequest, TProperty, TTransformed>) AbstractValidator<ClientUpdateOrderRequest>.RuleForEach<TElement>(Expression<Func<ClientUpdateOrderRequest, IEnumerable<TElement>>>) AbstractValidator<ClientUpdateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ClientUpdateOrderRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ClientUpdateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ClientUpdateOrderRequest, IEnumerable<TElement>>>, Func<ClientUpdateOrderRequest, TElement, TTransformed>) AbstractValidator<ClientUpdateOrderRequest>.RuleSet(string, Action) AbstractValidator<ClientUpdateOrderRequest>.When(Func<ClientUpdateOrderRequest, bool>, Action) AbstractValidator<ClientUpdateOrderRequest>.When(Func<ClientUpdateOrderRequest, ValidationContext<ClientUpdateOrderRequest>, bool>, Action) AbstractValidator<ClientUpdateOrderRequest>.Unless(Func<ClientUpdateOrderRequest, bool>, Action) AbstractValidator<ClientUpdateOrderRequest>.Unless(Func<ClientUpdateOrderRequest, ValidationContext<ClientUpdateOrderRequest>, bool>, Action) AbstractValidator<ClientUpdateOrderRequest>.WhenAsync(Func<ClientUpdateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ClientUpdateOrderRequest>.WhenAsync(Func<ClientUpdateOrderRequest, ValidationContext<ClientUpdateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ClientUpdateOrderRequest>.UnlessAsync(Func<ClientUpdateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ClientUpdateOrderRequest>.UnlessAsync(Func<ClientUpdateOrderRequest, ValidationContext<ClientUpdateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ClientUpdateOrderRequest>.Include(IValidator<ClientUpdateOrderRequest>) AbstractValidator<ClientUpdateOrderRequest>.Include<TValidator>(Func<ClientUpdateOrderRequest, TValidator>) AbstractValidator<ClientUpdateOrderRequest>.GetEnumerator() AbstractValidator<ClientUpdateOrderRequest>.EnsureInstanceNotNull(object) AbstractValidator<ClientUpdateOrderRequest>.PreValidate(ValidationContext<ClientUpdateOrderRequest>, ValidationResult) AbstractValidator<ClientUpdateOrderRequest>.RaiseValidationException(ValidationContext<ClientUpdateOrderRequest>, ValidationResult) AbstractValidator<ClientUpdateOrderRequest>.CascadeMode AbstractValidator<ClientUpdateOrderRequest>.ClassLevelCascadeMode AbstractValidator<ClientUpdateOrderRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ClientUpdateOrderRequestValidator() public ClientUpdateOrderRequestValidator()"
  },
  "api/ShopApi.Features.OrderFeature.Validators.CreateOrderRequestValidator.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.CreateOrderRequestValidator.html",
    "title": "Class CreateOrderRequestValidator | ELibrary",
    "keywords": "Class CreateOrderRequestValidator Namespace ShopApi.Features.OrderFeature.Validators Assembly ShopApi.dll public class CreateOrderRequestValidator : AbstractValidator<CreateOrderRequest>, IValidator<CreateOrderRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateOrderRequest> CreateOrderRequestValidator Implements IValidator<CreateOrderRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateOrderRequest>.Validate(CreateOrderRequest) AbstractValidator<CreateOrderRequest>.ValidateAsync(CreateOrderRequest, CancellationToken) AbstractValidator<CreateOrderRequest>.Validate(ValidationContext<CreateOrderRequest>) AbstractValidator<CreateOrderRequest>.ValidateAsync(ValidationContext<CreateOrderRequest>, CancellationToken) AbstractValidator<CreateOrderRequest>.CreateDescriptor() AbstractValidator<CreateOrderRequest>.RuleFor<TProperty>(Expression<Func<CreateOrderRequest, TProperty>>) AbstractValidator<CreateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateOrderRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateOrderRequest, TProperty>>, Func<CreateOrderRequest, TProperty, TTransformed>) AbstractValidator<CreateOrderRequest>.RuleForEach<TElement>(Expression<Func<CreateOrderRequest, IEnumerable<TElement>>>) AbstractValidator<CreateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateOrderRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateOrderRequest, IEnumerable<TElement>>>, Func<CreateOrderRequest, TElement, TTransformed>) AbstractValidator<CreateOrderRequest>.RuleSet(string, Action) AbstractValidator<CreateOrderRequest>.When(Func<CreateOrderRequest, bool>, Action) AbstractValidator<CreateOrderRequest>.When(Func<CreateOrderRequest, ValidationContext<CreateOrderRequest>, bool>, Action) AbstractValidator<CreateOrderRequest>.Unless(Func<CreateOrderRequest, bool>, Action) AbstractValidator<CreateOrderRequest>.Unless(Func<CreateOrderRequest, ValidationContext<CreateOrderRequest>, bool>, Action) AbstractValidator<CreateOrderRequest>.WhenAsync(Func<CreateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderRequest>.WhenAsync(Func<CreateOrderRequest, ValidationContext<CreateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderRequest>.UnlessAsync(Func<CreateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderRequest>.UnlessAsync(Func<CreateOrderRequest, ValidationContext<CreateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateOrderRequest>.Include(IValidator<CreateOrderRequest>) AbstractValidator<CreateOrderRequest>.Include<TValidator>(Func<CreateOrderRequest, TValidator>) AbstractValidator<CreateOrderRequest>.GetEnumerator() AbstractValidator<CreateOrderRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateOrderRequest>.PreValidate(ValidationContext<CreateOrderRequest>, ValidationResult) AbstractValidator<CreateOrderRequest>.RaiseValidationException(ValidationContext<CreateOrderRequest>, ValidationResult) AbstractValidator<CreateOrderRequest>.CascadeMode AbstractValidator<CreateOrderRequest>.ClassLevelCascadeMode AbstractValidator<CreateOrderRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateOrderRequestValidator(IConfiguration) public CreateOrderRequestValidator(IConfiguration configuration) Parameters configuration IConfiguration"
  },
  "api/ShopApi.Features.OrderFeature.Validators.GetOrdersFilterValidator.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.GetOrdersFilterValidator.html",
    "title": "Class GetOrdersFilterValidator | ELibrary",
    "keywords": "Class GetOrdersFilterValidator Namespace ShopApi.Features.OrderFeature.Validators Assembly ShopApi.dll public class GetOrdersFilterValidator : AbstractValidator<GetOrdersFilter>, IValidator<GetOrdersFilter>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<GetOrdersFilter> GetOrdersFilterValidator Implements IValidator<GetOrdersFilter> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<GetOrdersFilter>.Validate(GetOrdersFilter) AbstractValidator<GetOrdersFilter>.ValidateAsync(GetOrdersFilter, CancellationToken) AbstractValidator<GetOrdersFilter>.Validate(ValidationContext<GetOrdersFilter>) AbstractValidator<GetOrdersFilter>.ValidateAsync(ValidationContext<GetOrdersFilter>, CancellationToken) AbstractValidator<GetOrdersFilter>.CreateDescriptor() AbstractValidator<GetOrdersFilter>.RuleFor<TProperty>(Expression<Func<GetOrdersFilter, TProperty>>) AbstractValidator<GetOrdersFilter>.Transform<TProperty, TTransformed>(Expression<Func<GetOrdersFilter, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<GetOrdersFilter>.Transform<TProperty, TTransformed>(Expression<Func<GetOrdersFilter, TProperty>>, Func<GetOrdersFilter, TProperty, TTransformed>) AbstractValidator<GetOrdersFilter>.RuleForEach<TElement>(Expression<Func<GetOrdersFilter, IEnumerable<TElement>>>) AbstractValidator<GetOrdersFilter>.TransformForEach<TElement, TTransformed>(Expression<Func<GetOrdersFilter, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<GetOrdersFilter>.TransformForEach<TElement, TTransformed>(Expression<Func<GetOrdersFilter, IEnumerable<TElement>>>, Func<GetOrdersFilter, TElement, TTransformed>) AbstractValidator<GetOrdersFilter>.RuleSet(string, Action) AbstractValidator<GetOrdersFilter>.When(Func<GetOrdersFilter, bool>, Action) AbstractValidator<GetOrdersFilter>.When(Func<GetOrdersFilter, ValidationContext<GetOrdersFilter>, bool>, Action) AbstractValidator<GetOrdersFilter>.Unless(Func<GetOrdersFilter, bool>, Action) AbstractValidator<GetOrdersFilter>.Unless(Func<GetOrdersFilter, ValidationContext<GetOrdersFilter>, bool>, Action) AbstractValidator<GetOrdersFilter>.WhenAsync(Func<GetOrdersFilter, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOrdersFilter>.WhenAsync(Func<GetOrdersFilter, ValidationContext<GetOrdersFilter>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOrdersFilter>.UnlessAsync(Func<GetOrdersFilter, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOrdersFilter>.UnlessAsync(Func<GetOrdersFilter, ValidationContext<GetOrdersFilter>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOrdersFilter>.Include(IValidator<GetOrdersFilter>) AbstractValidator<GetOrdersFilter>.Include<TValidator>(Func<GetOrdersFilter, TValidator>) AbstractValidator<GetOrdersFilter>.GetEnumerator() AbstractValidator<GetOrdersFilter>.EnsureInstanceNotNull(object) AbstractValidator<GetOrdersFilter>.PreValidate(ValidationContext<GetOrdersFilter>, ValidationResult) AbstractValidator<GetOrdersFilter>.RaiseValidationException(ValidationContext<GetOrdersFilter>, ValidationResult) AbstractValidator<GetOrdersFilter>.CascadeMode AbstractValidator<GetOrdersFilter>.ClassLevelCascadeMode AbstractValidator<GetOrdersFilter>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOrdersFilterValidator(PaginationOptions) public GetOrdersFilterValidator(PaginationOptions paginationConfiguration) Parameters paginationConfiguration PaginationOptions"
  },
  "api/ShopApi.Features.OrderFeature.Validators.ManagerUpdateOrderRequestValidator.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.ManagerUpdateOrderRequestValidator.html",
    "title": "Class ManagerUpdateOrderRequestValidator | ELibrary",
    "keywords": "Class ManagerUpdateOrderRequestValidator Namespace ShopApi.Features.OrderFeature.Validators Assembly ShopApi.dll public class ManagerUpdateOrderRequestValidator : AbstractValidator<ManagerUpdateOrderRequest>, IValidator<ManagerUpdateOrderRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ManagerUpdateOrderRequest> ManagerUpdateOrderRequestValidator Implements IValidator<ManagerUpdateOrderRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ManagerUpdateOrderRequest>.Validate(ManagerUpdateOrderRequest) AbstractValidator<ManagerUpdateOrderRequest>.ValidateAsync(ManagerUpdateOrderRequest, CancellationToken) AbstractValidator<ManagerUpdateOrderRequest>.Validate(ValidationContext<ManagerUpdateOrderRequest>) AbstractValidator<ManagerUpdateOrderRequest>.ValidateAsync(ValidationContext<ManagerUpdateOrderRequest>, CancellationToken) AbstractValidator<ManagerUpdateOrderRequest>.CreateDescriptor() AbstractValidator<ManagerUpdateOrderRequest>.RuleFor<TProperty>(Expression<Func<ManagerUpdateOrderRequest, TProperty>>) AbstractValidator<ManagerUpdateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<ManagerUpdateOrderRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ManagerUpdateOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<ManagerUpdateOrderRequest, TProperty>>, Func<ManagerUpdateOrderRequest, TProperty, TTransformed>) AbstractValidator<ManagerUpdateOrderRequest>.RuleForEach<TElement>(Expression<Func<ManagerUpdateOrderRequest, IEnumerable<TElement>>>) AbstractValidator<ManagerUpdateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ManagerUpdateOrderRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ManagerUpdateOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ManagerUpdateOrderRequest, IEnumerable<TElement>>>, Func<ManagerUpdateOrderRequest, TElement, TTransformed>) AbstractValidator<ManagerUpdateOrderRequest>.RuleSet(string, Action) AbstractValidator<ManagerUpdateOrderRequest>.When(Func<ManagerUpdateOrderRequest, bool>, Action) AbstractValidator<ManagerUpdateOrderRequest>.When(Func<ManagerUpdateOrderRequest, ValidationContext<ManagerUpdateOrderRequest>, bool>, Action) AbstractValidator<ManagerUpdateOrderRequest>.Unless(Func<ManagerUpdateOrderRequest, bool>, Action) AbstractValidator<ManagerUpdateOrderRequest>.Unless(Func<ManagerUpdateOrderRequest, ValidationContext<ManagerUpdateOrderRequest>, bool>, Action) AbstractValidator<ManagerUpdateOrderRequest>.WhenAsync(Func<ManagerUpdateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ManagerUpdateOrderRequest>.WhenAsync(Func<ManagerUpdateOrderRequest, ValidationContext<ManagerUpdateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ManagerUpdateOrderRequest>.UnlessAsync(Func<ManagerUpdateOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ManagerUpdateOrderRequest>.UnlessAsync(Func<ManagerUpdateOrderRequest, ValidationContext<ManagerUpdateOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ManagerUpdateOrderRequest>.Include(IValidator<ManagerUpdateOrderRequest>) AbstractValidator<ManagerUpdateOrderRequest>.Include<TValidator>(Func<ManagerUpdateOrderRequest, TValidator>) AbstractValidator<ManagerUpdateOrderRequest>.GetEnumerator() AbstractValidator<ManagerUpdateOrderRequest>.EnsureInstanceNotNull(object) AbstractValidator<ManagerUpdateOrderRequest>.PreValidate(ValidationContext<ManagerUpdateOrderRequest>, ValidationResult) AbstractValidator<ManagerUpdateOrderRequest>.RaiseValidationException(ValidationContext<ManagerUpdateOrderRequest>, ValidationResult) AbstractValidator<ManagerUpdateOrderRequest>.CascadeMode AbstractValidator<ManagerUpdateOrderRequest>.ClassLevelCascadeMode AbstractValidator<ManagerUpdateOrderRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManagerUpdateOrderRequestValidator() public ManagerUpdateOrderRequestValidator()"
  },
  "api/ShopApi.Features.OrderFeature.Validators.OrderBookRequestValidator.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.OrderBookRequestValidator.html",
    "title": "Class OrderBookRequestValidator | ELibrary",
    "keywords": "Class OrderBookRequestValidator Namespace ShopApi.Features.OrderFeature.Validators Assembly ShopApi.dll public class OrderBookRequestValidator : AbstractValidator<OrderBookRequest>, IValidator<OrderBookRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<OrderBookRequest> OrderBookRequestValidator Implements IValidator<OrderBookRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<OrderBookRequest>.Validate(OrderBookRequest) AbstractValidator<OrderBookRequest>.ValidateAsync(OrderBookRequest, CancellationToken) AbstractValidator<OrderBookRequest>.Validate(ValidationContext<OrderBookRequest>) AbstractValidator<OrderBookRequest>.ValidateAsync(ValidationContext<OrderBookRequest>, CancellationToken) AbstractValidator<OrderBookRequest>.CreateDescriptor() AbstractValidator<OrderBookRequest>.RuleFor<TProperty>(Expression<Func<OrderBookRequest, TProperty>>) AbstractValidator<OrderBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<OrderBookRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<OrderBookRequest>.Transform<TProperty, TTransformed>(Expression<Func<OrderBookRequest, TProperty>>, Func<OrderBookRequest, TProperty, TTransformed>) AbstractValidator<OrderBookRequest>.RuleForEach<TElement>(Expression<Func<OrderBookRequest, IEnumerable<TElement>>>) AbstractValidator<OrderBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<OrderBookRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<OrderBookRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<OrderBookRequest, IEnumerable<TElement>>>, Func<OrderBookRequest, TElement, TTransformed>) AbstractValidator<OrderBookRequest>.RuleSet(string, Action) AbstractValidator<OrderBookRequest>.When(Func<OrderBookRequest, bool>, Action) AbstractValidator<OrderBookRequest>.When(Func<OrderBookRequest, ValidationContext<OrderBookRequest>, bool>, Action) AbstractValidator<OrderBookRequest>.Unless(Func<OrderBookRequest, bool>, Action) AbstractValidator<OrderBookRequest>.Unless(Func<OrderBookRequest, ValidationContext<OrderBookRequest>, bool>, Action) AbstractValidator<OrderBookRequest>.WhenAsync(Func<OrderBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderBookRequest>.WhenAsync(Func<OrderBookRequest, ValidationContext<OrderBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderBookRequest>.UnlessAsync(Func<OrderBookRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderBookRequest>.UnlessAsync(Func<OrderBookRequest, ValidationContext<OrderBookRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<OrderBookRequest>.Include(IValidator<OrderBookRequest>) AbstractValidator<OrderBookRequest>.Include<TValidator>(Func<OrderBookRequest, TValidator>) AbstractValidator<OrderBookRequest>.GetEnumerator() AbstractValidator<OrderBookRequest>.EnsureInstanceNotNull(object) AbstractValidator<OrderBookRequest>.PreValidate(ValidationContext<OrderBookRequest>, ValidationResult) AbstractValidator<OrderBookRequest>.RaiseValidationException(ValidationContext<OrderBookRequest>, ValidationResult) AbstractValidator<OrderBookRequest>.CascadeMode AbstractValidator<OrderBookRequest>.ClassLevelCascadeMode AbstractValidator<OrderBookRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderBookRequestValidator(IConfiguration) public OrderBookRequestValidator(IConfiguration configuration) Parameters configuration IConfiguration"
  },
  "api/ShopApi.Features.OrderFeature.Validators.html": {
    "href": "api/ShopApi.Features.OrderFeature.Validators.html",
    "title": "Namespace ShopApi.Features.OrderFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.OrderFeature.Validators Classes ClientUpdateOrderRequestValidator CreateOrderRequestValidator GetOrdersFilterValidator ManagerUpdateOrderRequestValidator OrderBookRequestValidator"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.GetShopStatisticsRequest.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.GetShopStatisticsRequest.html",
    "title": "Class GetShopStatisticsRequest | ELibrary",
    "keywords": "Class GetShopStatisticsRequest Namespace ShopApi.Features.StatisticsFeature.Domain.Dtos Assembly ShopApi.dll public class GetShopStatisticsRequest Inheritance object GetShopStatisticsRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FromUTC public DateTime? FromUTC { get; set; } Property Value DateTime? IncludeBooks public StatisticsBookRequest[] IncludeBooks { get; set; } Property Value StatisticsBookRequest[] ToUTC public DateTime? ToUTC { get; set; } Property Value DateTime?"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.ShopStatisticsResponse.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.ShopStatisticsResponse.html",
    "title": "Class ShopStatisticsResponse | ELibrary",
    "keywords": "Class ShopStatisticsResponse Namespace ShopApi.Features.StatisticsFeature.Domain.Dtos Assembly ShopApi.dll public class ShopStatisticsResponse Inheritance object ShopStatisticsResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AveragePrice public decimal AveragePrice { get; set; } Property Value decimal CanceledCopies public long CanceledCopies { get; set; } Property Value long CanceledOrderAmount public long CanceledOrderAmount { get; set; } Property Value long EarnedMoney public decimal EarnedMoney { get; set; } Property Value decimal InCartCopies public long InCartCopies { get; set; } Property Value long InOrderCopies public long InOrderCopies { get; set; } Property Value long OrderAmount public long OrderAmount { get; set; } Property Value long OrderAmountInDays public Dictionary<DateTime, long> OrderAmountInDays { get; set; } Property Value Dictionary<DateTime, long> SoldCopies public long SoldCopies { get; set; } Property Value long"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.StatisticsBookRequest.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.StatisticsBookRequest.html",
    "title": "Class StatisticsBookRequest | ELibrary",
    "keywords": "Class StatisticsBookRequest Namespace ShopApi.Features.StatisticsFeature.Domain.Dtos Assembly ShopApi.dll public class StatisticsBookRequest Inheritance object StatisticsBookRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public int Id { get; set; } Property Value int"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Dtos.html",
    "title": "Namespace ShopApi.Features.StatisticsFeature.Domain.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.StatisticsFeature.Domain.Dtos Classes GetShopStatisticsRequest ShopStatisticsResponse StatisticsBookRequest"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Models.GetShopStatisticsFilter.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Models.GetShopStatisticsFilter.html",
    "title": "Class GetShopStatisticsFilter | ELibrary",
    "keywords": "Class GetShopStatisticsFilter Namespace ShopApi.Features.StatisticsFeature.Domain.Models Assembly ShopApi.dll public class GetShopStatisticsFilter Inheritance object GetShopStatisticsFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FromUTC public DateTime? FromUTC { get; set; } Property Value DateTime? IncludeBooks public StatisticsBook[] IncludeBooks { get; set; } Property Value StatisticsBook[] ToUTC public DateTime? ToUTC { get; set; } Property Value DateTime?"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Models.ShopStatistics.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Models.ShopStatistics.html",
    "title": "Class ShopStatistics | ELibrary",
    "keywords": "Class ShopStatistics Namespace ShopApi.Features.StatisticsFeature.Domain.Models Assembly ShopApi.dll public class ShopStatistics Inheritance object ShopStatistics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AveragePrice public required decimal AveragePrice { get; set; } Property Value decimal CanceledCopies public required long CanceledCopies { get; set; } Property Value long CanceledOrderAmount public required long CanceledOrderAmount { get; set; } Property Value long EarnedMoney public required decimal EarnedMoney { get; set; } Property Value decimal InCartCopies public required long InCartCopies { get; set; } Property Value long InOrderCopies public required long InOrderCopies { get; set; } Property Value long OrderAmount public required long OrderAmount { get; set; } Property Value long OrderAmountInDays public Dictionary<DateTime, long> OrderAmountInDays { get; set; } Property Value Dictionary<DateTime, long> SoldCopies public required long SoldCopies { get; set; } Property Value long"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Models.StatisticsBook.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Models.StatisticsBook.html",
    "title": "Class StatisticsBook | ELibrary",
    "keywords": "Class StatisticsBook Namespace ShopApi.Features.StatisticsFeature.Domain.Models Assembly ShopApi.dll public class StatisticsBook Inheritance object StatisticsBook Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public required int Id { get; set; } Property Value int"
  },
  "api/ShopApi.Features.StatisticsFeature.Domain.Models.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Domain.Models.html",
    "title": "Namespace ShopApi.Features.StatisticsFeature.Domain.Models | ELibrary",
    "keywords": "Namespace ShopApi.Features.StatisticsFeature.Domain.Models Classes GetShopStatisticsFilter ShopStatistics StatisticsBook"
  },
  "api/ShopApi.Features.StatisticsFeature.Repository.IStatisticsRepository.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Repository.IStatisticsRepository.html",
    "title": "Interface IStatisticsRepository | ELibrary",
    "keywords": "Interface IStatisticsRepository Namespace ShopApi.Features.StatisticsFeature.Repository Assembly ShopApi.dll public interface IStatisticsRepository Methods GetAveragePriceAsync(GetShopStatisticsFilter, CancellationToken) Task<decimal> GetAveragePriceAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<decimal> GetCanceledCopiesAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetCanceledCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetCanceledOrdersAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetCanceledOrdersAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetEarnedMoneyAsync(GetShopStatisticsFilter, CancellationToken) Task<decimal> GetEarnedMoneyAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<decimal> GetInCartCopiesAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetInCartCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetInOrderCopiesAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetInOrderCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetOrderAmountAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetOrderAmountAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetOrderAmountInDaysAsync(GetShopStatisticsFilter, CancellationToken) Task<Dictionary<DateTime, long>> GetOrderAmountInDaysAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<Dictionary<DateTime, long>> GetSoldCopiesAsync(GetShopStatisticsFilter, CancellationToken) Task<long> GetSoldCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long>"
  },
  "api/ShopApi.Features.StatisticsFeature.Repository.StatisticsRepository.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Repository.StatisticsRepository.html",
    "title": "Class StatisticsRepository | ELibrary",
    "keywords": "Class StatisticsRepository Namespace ShopApi.Features.StatisticsFeature.Repository Assembly ShopApi.dll public class StatisticsRepository : IStatisticsRepository Inheritance object StatisticsRepository Implements IStatisticsRepository Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatisticsRepository(IDatabaseRepository<ShopDbContext>) public StatisticsRepository(IDatabaseRepository<ShopDbContext> repository) Parameters repository IDatabaseRepository<ShopDbContext> Methods GetAveragePriceAsync(GetShopStatisticsFilter, CancellationToken) public Task<decimal> GetAveragePriceAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<decimal> GetCanceledCopiesAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetCanceledCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetCanceledOrdersAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetCanceledOrdersAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetEarnedMoneyAsync(GetShopStatisticsFilter, CancellationToken) public Task<decimal> GetEarnedMoneyAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<decimal> GetInCartCopiesAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetInCartCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetInOrderCopiesAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetInOrderCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetOrderAmountAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetOrderAmountAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long> GetOrderAmountInDaysAsync(GetShopStatisticsFilter, CancellationToken) public Task<Dictionary<DateTime, long>> GetOrderAmountInDaysAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<Dictionary<DateTime, long>> GetSoldCopiesAsync(GetShopStatisticsFilter, CancellationToken) public Task<long> GetSoldCopiesAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<long>"
  },
  "api/ShopApi.Features.StatisticsFeature.Repository.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Repository.html",
    "title": "Namespace ShopApi.Features.StatisticsFeature.Repository | ELibrary",
    "keywords": "Namespace ShopApi.Features.StatisticsFeature.Repository Classes StatisticsRepository Interfaces IStatisticsRepository"
  },
  "api/ShopApi.Features.StatisticsFeature.Services.IStatisticsService.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Services.IStatisticsService.html",
    "title": "Interface IStatisticsService | ELibrary",
    "keywords": "Interface IStatisticsService Namespace ShopApi.Features.StatisticsFeature.Services Assembly ShopApi.dll public interface IStatisticsService Methods GetStatisticsAsync(GetShopStatisticsFilter, CancellationToken) Task<ShopStatistics> GetStatisticsAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<ShopStatistics>"
  },
  "api/ShopApi.Features.StatisticsFeature.Services.StatisticsService.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Services.StatisticsService.html",
    "title": "Class StatisticsService | ELibrary",
    "keywords": "Class StatisticsService Namespace ShopApi.Features.StatisticsFeature.Services Assembly ShopApi.dll public class StatisticsService : IStatisticsService Inheritance object StatisticsService Implements IStatisticsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatisticsService(IStatisticsRepository) public StatisticsService(IStatisticsRepository statisticsRepository) Parameters statisticsRepository IStatisticsRepository Methods GetStatisticsAsync(GetShopStatisticsFilter, CancellationToken) public Task<ShopStatistics> GetStatisticsAsync(GetShopStatisticsFilter getBookStatistics, CancellationToken cancellationToken) Parameters getBookStatistics GetShopStatisticsFilter cancellationToken CancellationToken Returns Task<ShopStatistics>"
  },
  "api/ShopApi.Features.StatisticsFeature.Services.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Services.html",
    "title": "Namespace ShopApi.Features.StatisticsFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.StatisticsFeature.Services Classes StatisticsService Interfaces IStatisticsService"
  },
  "api/ShopApi.Features.StatisticsFeature.Validators.GetBookStatisticsRequestValidator.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Validators.GetBookStatisticsRequestValidator.html",
    "title": "Class GetBookStatisticsRequestValidator | ELibrary",
    "keywords": "Class GetBookStatisticsRequestValidator Namespace ShopApi.Features.StatisticsFeature.Validators Assembly ShopApi.dll public class GetBookStatisticsRequestValidator : AbstractValidator<GetShopStatisticsRequest>, IValidator<GetShopStatisticsRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<GetShopStatisticsRequest> GetBookStatisticsRequestValidator Implements IValidator<GetShopStatisticsRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<GetShopStatisticsRequest>.Validate(GetShopStatisticsRequest) AbstractValidator<GetShopStatisticsRequest>.ValidateAsync(GetShopStatisticsRequest, CancellationToken) AbstractValidator<GetShopStatisticsRequest>.Validate(ValidationContext<GetShopStatisticsRequest>) AbstractValidator<GetShopStatisticsRequest>.ValidateAsync(ValidationContext<GetShopStatisticsRequest>, CancellationToken) AbstractValidator<GetShopStatisticsRequest>.CreateDescriptor() AbstractValidator<GetShopStatisticsRequest>.RuleFor<TProperty>(Expression<Func<GetShopStatisticsRequest, TProperty>>) AbstractValidator<GetShopStatisticsRequest>.Transform<TProperty, TTransformed>(Expression<Func<GetShopStatisticsRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<GetShopStatisticsRequest>.Transform<TProperty, TTransformed>(Expression<Func<GetShopStatisticsRequest, TProperty>>, Func<GetShopStatisticsRequest, TProperty, TTransformed>) AbstractValidator<GetShopStatisticsRequest>.RuleForEach<TElement>(Expression<Func<GetShopStatisticsRequest, IEnumerable<TElement>>>) AbstractValidator<GetShopStatisticsRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<GetShopStatisticsRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<GetShopStatisticsRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<GetShopStatisticsRequest, IEnumerable<TElement>>>, Func<GetShopStatisticsRequest, TElement, TTransformed>) AbstractValidator<GetShopStatisticsRequest>.RuleSet(string, Action) AbstractValidator<GetShopStatisticsRequest>.When(Func<GetShopStatisticsRequest, bool>, Action) AbstractValidator<GetShopStatisticsRequest>.When(Func<GetShopStatisticsRequest, ValidationContext<GetShopStatisticsRequest>, bool>, Action) AbstractValidator<GetShopStatisticsRequest>.Unless(Func<GetShopStatisticsRequest, bool>, Action) AbstractValidator<GetShopStatisticsRequest>.Unless(Func<GetShopStatisticsRequest, ValidationContext<GetShopStatisticsRequest>, bool>, Action) AbstractValidator<GetShopStatisticsRequest>.WhenAsync(Func<GetShopStatisticsRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<GetShopStatisticsRequest>.WhenAsync(Func<GetShopStatisticsRequest, ValidationContext<GetShopStatisticsRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetShopStatisticsRequest>.UnlessAsync(Func<GetShopStatisticsRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<GetShopStatisticsRequest>.UnlessAsync(Func<GetShopStatisticsRequest, ValidationContext<GetShopStatisticsRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetShopStatisticsRequest>.Include(IValidator<GetShopStatisticsRequest>) AbstractValidator<GetShopStatisticsRequest>.Include<TValidator>(Func<GetShopStatisticsRequest, TValidator>) AbstractValidator<GetShopStatisticsRequest>.GetEnumerator() AbstractValidator<GetShopStatisticsRequest>.EnsureInstanceNotNull(object) AbstractValidator<GetShopStatisticsRequest>.PreValidate(ValidationContext<GetShopStatisticsRequest>, ValidationResult) AbstractValidator<GetShopStatisticsRequest>.RaiseValidationException(ValidationContext<GetShopStatisticsRequest>, ValidationResult) AbstractValidator<GetShopStatisticsRequest>.CascadeMode AbstractValidator<GetShopStatisticsRequest>.ClassLevelCascadeMode AbstractValidator<GetShopStatisticsRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetBookStatisticsRequestValidator() public GetBookStatisticsRequestValidator()"
  },
  "api/ShopApi.Features.StatisticsFeature.Validators.StatisticsBookValidator.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Validators.StatisticsBookValidator.html",
    "title": "Class StatisticsBookValidator | ELibrary",
    "keywords": "Class StatisticsBookValidator Namespace ShopApi.Features.StatisticsFeature.Validators Assembly ShopApi.dll public class StatisticsBookValidator : AbstractValidator<StatisticsBook>, IValidator<StatisticsBook>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<StatisticsBook> StatisticsBookValidator Implements IValidator<StatisticsBook> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<StatisticsBook>.Validate(StatisticsBook) AbstractValidator<StatisticsBook>.ValidateAsync(StatisticsBook, CancellationToken) AbstractValidator<StatisticsBook>.Validate(ValidationContext<StatisticsBook>) AbstractValidator<StatisticsBook>.ValidateAsync(ValidationContext<StatisticsBook>, CancellationToken) AbstractValidator<StatisticsBook>.CreateDescriptor() AbstractValidator<StatisticsBook>.RuleFor<TProperty>(Expression<Func<StatisticsBook, TProperty>>) AbstractValidator<StatisticsBook>.Transform<TProperty, TTransformed>(Expression<Func<StatisticsBook, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<StatisticsBook>.Transform<TProperty, TTransformed>(Expression<Func<StatisticsBook, TProperty>>, Func<StatisticsBook, TProperty, TTransformed>) AbstractValidator<StatisticsBook>.RuleForEach<TElement>(Expression<Func<StatisticsBook, IEnumerable<TElement>>>) AbstractValidator<StatisticsBook>.TransformForEach<TElement, TTransformed>(Expression<Func<StatisticsBook, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<StatisticsBook>.TransformForEach<TElement, TTransformed>(Expression<Func<StatisticsBook, IEnumerable<TElement>>>, Func<StatisticsBook, TElement, TTransformed>) AbstractValidator<StatisticsBook>.RuleSet(string, Action) AbstractValidator<StatisticsBook>.When(Func<StatisticsBook, bool>, Action) AbstractValidator<StatisticsBook>.When(Func<StatisticsBook, ValidationContext<StatisticsBook>, bool>, Action) AbstractValidator<StatisticsBook>.Unless(Func<StatisticsBook, bool>, Action) AbstractValidator<StatisticsBook>.Unless(Func<StatisticsBook, ValidationContext<StatisticsBook>, bool>, Action) AbstractValidator<StatisticsBook>.WhenAsync(Func<StatisticsBook, CancellationToken, Task<bool>>, Action) AbstractValidator<StatisticsBook>.WhenAsync(Func<StatisticsBook, ValidationContext<StatisticsBook>, CancellationToken, Task<bool>>, Action) AbstractValidator<StatisticsBook>.UnlessAsync(Func<StatisticsBook, CancellationToken, Task<bool>>, Action) AbstractValidator<StatisticsBook>.UnlessAsync(Func<StatisticsBook, ValidationContext<StatisticsBook>, CancellationToken, Task<bool>>, Action) AbstractValidator<StatisticsBook>.Include(IValidator<StatisticsBook>) AbstractValidator<StatisticsBook>.Include<TValidator>(Func<StatisticsBook, TValidator>) AbstractValidator<StatisticsBook>.GetEnumerator() AbstractValidator<StatisticsBook>.EnsureInstanceNotNull(object) AbstractValidator<StatisticsBook>.PreValidate(ValidationContext<StatisticsBook>, ValidationResult) AbstractValidator<StatisticsBook>.RaiseValidationException(ValidationContext<StatisticsBook>, ValidationResult) AbstractValidator<StatisticsBook>.CascadeMode AbstractValidator<StatisticsBook>.ClassLevelCascadeMode AbstractValidator<StatisticsBook>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatisticsBookValidator() public StatisticsBookValidator()"
  },
  "api/ShopApi.Features.StatisticsFeature.Validators.html": {
    "href": "api/ShopApi.Features.StatisticsFeature.Validators.html",
    "title": "Namespace ShopApi.Features.StatisticsFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.StatisticsFeature.Validators Classes GetBookStatisticsRequestValidator StatisticsBookValidator"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.CreateStockBookOrderCommand.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.CreateStockBookOrderCommand.html",
    "title": "Class CreateStockBookOrderCommand | ELibrary",
    "keywords": "Class CreateStockBookOrderCommand Namespace ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder Assembly ShopApi.dll public record CreateStockBookOrderCommand : IRequest<StockBookOrderResponse>, IBaseRequest, IEquatable<CreateStockBookOrderCommand> Inheritance object CreateStockBookOrderCommand Implements IRequest<StockBookOrderResponse> IBaseRequest IEquatable<CreateStockBookOrderCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateStockBookOrderCommand(CreateStockBookOrderRequest) public CreateStockBookOrderCommand(CreateStockBookOrderRequest Request) Parameters Request CreateStockBookOrderRequest Properties Request public CreateStockBookOrderRequest Request { get; init; } Property Value CreateStockBookOrderRequest"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.CreateStockBookOrderCommandHandler.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.CreateStockBookOrderCommandHandler.html",
    "title": "Class CreateStockBookOrderCommandHandler | ELibrary",
    "keywords": "Class CreateStockBookOrderCommandHandler Namespace ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder Assembly ShopApi.dll public class CreateStockBookOrderCommandHandler : IRequestHandler<CreateStockBookOrderCommand, StockBookOrderResponse> Inheritance object CreateStockBookOrderCommandHandler Implements IRequestHandler<CreateStockBookOrderCommand, StockBookOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateStockBookOrderCommandHandler(IStockBookOrderService, ILibraryService, IMapper) public CreateStockBookOrderCommandHandler(IStockBookOrderService stockBookOrderService, ILibraryService libraryService, IMapper mapper) Parameters stockBookOrderService IStockBookOrderService libraryService ILibraryService mapper IMapper Methods Handle(CreateStockBookOrderCommand, CancellationToken) Handles a request public Task<StockBookOrderResponse> Handle(CreateStockBookOrderCommand command, CancellationToken cancellationToken) Parameters command CreateStockBookOrderCommand cancellationToken CancellationToken Cancellation token Returns Task<StockBookOrderResponse> Response from the request"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Command.CreateStockBookOrder Classes CreateStockBookOrderCommand CreateStockBookOrderCommandHandler"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.GetStockOrderAmountQuery.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.GetStockOrderAmountQuery.html",
    "title": "Class GetStockOrderAmountQuery | ELibrary",
    "keywords": "Class GetStockOrderAmountQuery Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount Assembly ShopApi.dll public record GetStockOrderAmountQuery : IRequest<int>, IBaseRequest, IEquatable<GetStockOrderAmountQuery> Inheritance object GetStockOrderAmountQuery Implements IRequest<int> IBaseRequest IEquatable<GetStockOrderAmountQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderAmountQuery() public GetStockOrderAmountQuery()"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.GetStockOrderAmountQueryHandler.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.GetStockOrderAmountQueryHandler.html",
    "title": "Class GetStockOrderAmountQueryHandler | ELibrary",
    "keywords": "Class GetStockOrderAmountQueryHandler Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount Assembly ShopApi.dll public class GetStockOrderAmountQueryHandler : IRequestHandler<GetStockOrderAmountQuery, int> Inheritance object GetStockOrderAmountQueryHandler Implements IRequestHandler<GetStockOrderAmountQuery, int> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderAmountQueryHandler(IStockBookOrderService) public GetStockOrderAmountQueryHandler(IStockBookOrderService stockBookOrderService) Parameters stockBookOrderService IStockBookOrderService Methods Handle(GetStockOrderAmountQuery, CancellationToken) Handles a request public Task<int> Handle(GetStockOrderAmountQuery command, CancellationToken cancellationToken) Parameters command GetStockOrderAmountQuery cancellationToken CancellationToken Cancellation token Returns Task<int> Response from the request"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderAmount Classes GetStockOrderAmountQuery GetStockOrderAmountQueryHandler"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.GetStockOrderByIdQuery.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.GetStockOrderByIdQuery.html",
    "title": "Class GetStockOrderByIdQuery | ELibrary",
    "keywords": "Class GetStockOrderByIdQuery Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById Assembly ShopApi.dll public record GetStockOrderByIdQuery : IRequest<StockBookOrderResponse?>, IBaseRequest, IEquatable<GetStockOrderByIdQuery> Inheritance object GetStockOrderByIdQuery Implements IRequest<StockBookOrderResponse> IBaseRequest IEquatable<GetStockOrderByIdQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderByIdQuery(int) public GetStockOrderByIdQuery(int StockOrderId) Parameters StockOrderId int Properties StockOrderId public int StockOrderId { get; init; } Property Value int"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.GetStockOrderByIdQueryHandler.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.GetStockOrderByIdQueryHandler.html",
    "title": "Class GetStockOrderByIdQueryHandler | ELibrary",
    "keywords": "Class GetStockOrderByIdQueryHandler Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById Assembly ShopApi.dll public class GetStockOrderByIdQueryHandler : IRequestHandler<GetStockOrderByIdQuery, StockBookOrderResponse?> Inheritance object GetStockOrderByIdQueryHandler Implements IRequestHandler<GetStockOrderByIdQuery, StockBookOrderResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderByIdQueryHandler(IStockBookOrderService, ILibraryService, IMapper) public GetStockOrderByIdQueryHandler(IStockBookOrderService stockBookOrderService, ILibraryService libraryService, IMapper mapper) Parameters stockBookOrderService IStockBookOrderService libraryService ILibraryService mapper IMapper Methods Handle(GetStockOrderByIdQuery, CancellationToken) Handles a request public Task<StockBookOrderResponse?> Handle(GetStockOrderByIdQuery command, CancellationToken cancellationToken) Parameters command GetStockOrderByIdQuery cancellationToken CancellationToken Cancellation token Returns Task<StockBookOrderResponse> Response from the request"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderById Classes GetStockOrderByIdQuery GetStockOrderByIdQueryHandler"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.GetStockOrderPaginatedQuery.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.GetStockOrderPaginatedQuery.html",
    "title": "Class GetStockOrderPaginatedQuery | ELibrary",
    "keywords": "Class GetStockOrderPaginatedQuery Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated Assembly ShopApi.dll public record GetStockOrderPaginatedQuery : IRequest<IEnumerable<StockBookOrderResponse>>, IBaseRequest, IEquatable<GetStockOrderPaginatedQuery> Inheritance object GetStockOrderPaginatedQuery Implements IRequest<IEnumerable<StockBookOrderResponse>> IBaseRequest IEquatable<GetStockOrderPaginatedQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderPaginatedQuery(PaginationRequest) public GetStockOrderPaginatedQuery(PaginationRequest PaginationRequest) Parameters PaginationRequest PaginationRequest Properties PaginationRequest public PaginationRequest PaginationRequest { get; init; } Property Value PaginationRequest"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.GetStockOrderPaginatedQueryHandler.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.GetStockOrderPaginatedQueryHandler.html",
    "title": "Class GetStockOrderPaginatedQueryHandler | ELibrary",
    "keywords": "Class GetStockOrderPaginatedQueryHandler Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated Assembly ShopApi.dll public class GetStockOrderPaginatedQueryHandler : IRequestHandler<GetStockOrderPaginatedQuery, IEnumerable<StockBookOrderResponse>> Inheritance object GetStockOrderPaginatedQueryHandler Implements IRequestHandler<GetStockOrderPaginatedQuery, IEnumerable<StockBookOrderResponse>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetStockOrderPaginatedQueryHandler(IStockBookOrderService, ILibraryService, IMapper) public GetStockOrderPaginatedQueryHandler(IStockBookOrderService stockBookOrderService, ILibraryService libraryService, IMapper mapper) Parameters stockBookOrderService IStockBookOrderService libraryService ILibraryService mapper IMapper Methods Handle(GetStockOrderPaginatedQuery, CancellationToken) Handles a request public Task<IEnumerable<StockBookOrderResponse>> Handle(GetStockOrderPaginatedQuery command, CancellationToken cancellationToken) Parameters command GetStockOrderPaginatedQuery cancellationToken CancellationToken Cancellation token Returns Task<IEnumerable<StockBookOrderResponse>> Response from the request"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Command.GetStockOrderPaginated Classes GetStockOrderPaginatedQuery GetStockOrderPaginatedQueryHandler"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Dtos.CreateStockBookOrderRequest.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Dtos.CreateStockBookOrderRequest.html",
    "title": "Class CreateStockBookOrderRequest | ELibrary",
    "keywords": "Class CreateStockBookOrderRequest Namespace ShopApi.Features.StockBookOrderFeature.Dtos Assembly ShopApi.dll public class CreateStockBookOrderRequest Inheritance object CreateStockBookOrderRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ClientId public string? ClientId { get; set; } Property Value string StockBookChanges public List<StockBookChangeRequest> StockBookChanges { get; set; } Property Value List<StockBookChangeRequest> Type public StockBookOrderType Type { get; set; } Property Value StockBookOrderType"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Dtos.StockBookChangeRequest.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Dtos.StockBookChangeRequest.html",
    "title": "Class StockBookChangeRequest | ELibrary",
    "keywords": "Class StockBookChangeRequest Namespace ShopApi.Features.StockBookOrderFeature.Dtos Assembly ShopApi.dll public class StockBookChangeRequest Inheritance object StockBookChangeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BookId public int BookId { get; set; } Property Value int ChangeAmount public int ChangeAmount { get; set; } Property Value int"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Dtos.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Dtos.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Dtos | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Dtos Classes CreateStockBookOrderRequest StockBookChangeRequest"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Models.BookStockAmountUpdatedEvent.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Models.BookStockAmountUpdatedEvent.html",
    "title": "Class BookStockAmountUpdatedEvent | ELibrary",
    "keywords": "Class BookStockAmountUpdatedEvent Namespace ShopApi.Features.StockBookOrderFeature.Models Assembly ShopApi.dll public class BookStockAmountUpdatedEvent Inheritance object BookStockAmountUpdatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties StockBookOrder public required StockBookOrder StockBookOrder { get; set; } Property Value StockBookOrder"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Models.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Models.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Models | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Models Classes BookStockAmountUpdatedEvent"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Services.BookStockAmountUpdatedEventHandler.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Services.BookStockAmountUpdatedEventHandler.html",
    "title": "Class BookStockAmountUpdatedEventHandler | ELibrary",
    "keywords": "Class BookStockAmountUpdatedEventHandler Namespace ShopApi.Features.StockBookOrderFeature.Services Assembly ShopApi.dll public class BookStockAmountUpdatedEventHandler : IEventHandler<BookStockAmountUpdatedEvent> Inheritance object BookStockAmountUpdatedEventHandler Implements IEventHandler<BookStockAmountUpdatedEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BookStockAmountUpdatedEventHandler(ILibraryService) public BookStockAmountUpdatedEventHandler(ILibraryService libraryService) Parameters libraryService ILibraryService Fields libraryService protected readonly ILibraryService libraryService Field Value ILibraryService Methods HandleAsync(BookStockAmountUpdatedEvent, CancellationToken) public Task HandleAsync(BookStockAmountUpdatedEvent @event, CancellationToken cancellationToken) Parameters event BookStockAmountUpdatedEvent cancellationToken CancellationToken Returns Task"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Services.IStockBookOrderService.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Services.IStockBookOrderService.html",
    "title": "Interface IStockBookOrderService | ELibrary",
    "keywords": "Interface IStockBookOrderService Namespace ShopApi.Features.StockBookOrderFeature.Services Assembly ShopApi.dll public interface IStockBookOrderService Methods AddStockBookOrderAsync(StockBookOrder, CancellationToken) Task<StockBookOrder> AddStockBookOrderAsync(StockBookOrder stockBookOrder, CancellationToken cancellationToken) Parameters stockBookOrder StockBookOrder cancellationToken CancellationToken Returns Task<StockBookOrder> AddStockBookOrderAsyncFromCanceledOrderAsync(Order, StockBookOrderType, CancellationToken) Task<StockBookOrder> AddStockBookOrderAsyncFromCanceledOrderAsync(Order order, StockBookOrderType type, CancellationToken cancellationToken) Parameters order Order type StockBookOrderType cancellationToken CancellationToken Returns Task<StockBookOrder> AddStockBookOrderAsyncFromOrderAsync(Order, StockBookOrderType, CancellationToken) Task<StockBookOrder> AddStockBookOrderAsyncFromOrderAsync(Order order, StockBookOrderType type, CancellationToken cancellationToken) Parameters order Order type StockBookOrderType cancellationToken CancellationToken Returns Task<StockBookOrder> GetPaginatedStockBookOrdersAsync(PaginationRequest, CancellationToken) Task<IEnumerable<StockBookOrder>> GetPaginatedStockBookOrdersAsync(PaginationRequest pagination, CancellationToken cancellationToken) Parameters pagination PaginationRequest cancellationToken CancellationToken Returns Task<IEnumerable<StockBookOrder>> GetStockBookAmountAsync(CancellationToken) Task<int> GetStockBookAmountAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<int> GetStockBookOrderByIdAsync(int, CancellationToken) Task<StockBookOrder?> GetStockBookOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<StockBookOrder>"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Services.StockBookOrderService.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Services.StockBookOrderService.html",
    "title": "Class StockBookOrderService | ELibrary",
    "keywords": "Class StockBookOrderService Namespace ShopApi.Features.StockBookOrderFeature.Services Assembly ShopApi.dll public class StockBookOrderService : IStockBookOrderService Inheritance object StockBookOrderService Implements IStockBookOrderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StockBookOrderService(IStockBookOrderRepository, IEventDispatcher) public StockBookOrderService(IStockBookOrderRepository stockBookOrderRepository, IEventDispatcher eventDispatcher) Parameters stockBookOrderRepository IStockBookOrderRepository eventDispatcher IEventDispatcher Methods AddStockBookOrderAsync(StockBookOrder, CancellationToken) public Task<StockBookOrder> AddStockBookOrderAsync(StockBookOrder stockBookOrder, CancellationToken cancellationToken) Parameters stockBookOrder StockBookOrder cancellationToken CancellationToken Returns Task<StockBookOrder> AddStockBookOrderAsyncFromCanceledOrderAsync(Order, StockBookOrderType, CancellationToken) public Task<StockBookOrder> AddStockBookOrderAsyncFromCanceledOrderAsync(Order order, StockBookOrderType type, CancellationToken cancellationToken) Parameters order Order type StockBookOrderType cancellationToken CancellationToken Returns Task<StockBookOrder> AddStockBookOrderAsyncFromOrderAsync(Order, StockBookOrderType, CancellationToken) public Task<StockBookOrder> AddStockBookOrderAsyncFromOrderAsync(Order order, StockBookOrderType type, CancellationToken cancellationToken) Parameters order Order type StockBookOrderType cancellationToken CancellationToken Returns Task<StockBookOrder> GetPaginatedStockBookOrdersAsync(PaginationRequest, CancellationToken) public Task<IEnumerable<StockBookOrder>> GetPaginatedStockBookOrdersAsync(PaginationRequest pagination, CancellationToken cancellationToken) Parameters pagination PaginationRequest cancellationToken CancellationToken Returns Task<IEnumerable<StockBookOrder>> GetStockBookAmountAsync(CancellationToken) public Task<int> GetStockBookAmountAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<int> GetStockBookOrderByIdAsync(int, CancellationToken) public Task<StockBookOrder?> GetStockBookOrderByIdAsync(int id, CancellationToken cancellationToken) Parameters id int cancellationToken CancellationToken Returns Task<StockBookOrder>"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Services.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Services.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Services | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Services Classes BookStockAmountUpdatedEventHandler StockBookOrderService Interfaces IStockBookOrderService"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Validators.CreateStockBookOrderRequestValidator.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Validators.CreateStockBookOrderRequestValidator.html",
    "title": "Class CreateStockBookOrderRequestValidator | ELibrary",
    "keywords": "Class CreateStockBookOrderRequestValidator Namespace ShopApi.Features.StockBookOrderFeature.Validators Assembly ShopApi.dll public class CreateStockBookOrderRequestValidator : AbstractValidator<CreateStockBookOrderRequest>, IValidator<CreateStockBookOrderRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateStockBookOrderRequest> CreateStockBookOrderRequestValidator Implements IValidator<CreateStockBookOrderRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateStockBookOrderRequest>.Validate(CreateStockBookOrderRequest) AbstractValidator<CreateStockBookOrderRequest>.ValidateAsync(CreateStockBookOrderRequest, CancellationToken) AbstractValidator<CreateStockBookOrderRequest>.Validate(ValidationContext<CreateStockBookOrderRequest>) AbstractValidator<CreateStockBookOrderRequest>.ValidateAsync(ValidationContext<CreateStockBookOrderRequest>, CancellationToken) AbstractValidator<CreateStockBookOrderRequest>.CreateDescriptor() AbstractValidator<CreateStockBookOrderRequest>.RuleFor<TProperty>(Expression<Func<CreateStockBookOrderRequest, TProperty>>) AbstractValidator<CreateStockBookOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateStockBookOrderRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateStockBookOrderRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateStockBookOrderRequest, TProperty>>, Func<CreateStockBookOrderRequest, TProperty, TTransformed>) AbstractValidator<CreateStockBookOrderRequest>.RuleForEach<TElement>(Expression<Func<CreateStockBookOrderRequest, IEnumerable<TElement>>>) AbstractValidator<CreateStockBookOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateStockBookOrderRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateStockBookOrderRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateStockBookOrderRequest, IEnumerable<TElement>>>, Func<CreateStockBookOrderRequest, TElement, TTransformed>) AbstractValidator<CreateStockBookOrderRequest>.RuleSet(string, Action) AbstractValidator<CreateStockBookOrderRequest>.When(Func<CreateStockBookOrderRequest, bool>, Action) AbstractValidator<CreateStockBookOrderRequest>.When(Func<CreateStockBookOrderRequest, ValidationContext<CreateStockBookOrderRequest>, bool>, Action) AbstractValidator<CreateStockBookOrderRequest>.Unless(Func<CreateStockBookOrderRequest, bool>, Action) AbstractValidator<CreateStockBookOrderRequest>.Unless(Func<CreateStockBookOrderRequest, ValidationContext<CreateStockBookOrderRequest>, bool>, Action) AbstractValidator<CreateStockBookOrderRequest>.WhenAsync(Func<CreateStockBookOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateStockBookOrderRequest>.WhenAsync(Func<CreateStockBookOrderRequest, ValidationContext<CreateStockBookOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateStockBookOrderRequest>.UnlessAsync(Func<CreateStockBookOrderRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateStockBookOrderRequest>.UnlessAsync(Func<CreateStockBookOrderRequest, ValidationContext<CreateStockBookOrderRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateStockBookOrderRequest>.Include(IValidator<CreateStockBookOrderRequest>) AbstractValidator<CreateStockBookOrderRequest>.Include<TValidator>(Func<CreateStockBookOrderRequest, TValidator>) AbstractValidator<CreateStockBookOrderRequest>.GetEnumerator() AbstractValidator<CreateStockBookOrderRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateStockBookOrderRequest>.PreValidate(ValidationContext<CreateStockBookOrderRequest>, ValidationResult) AbstractValidator<CreateStockBookOrderRequest>.RaiseValidationException(ValidationContext<CreateStockBookOrderRequest>, ValidationResult) AbstractValidator<CreateStockBookOrderRequest>.CascadeMode AbstractValidator<CreateStockBookOrderRequest>.ClassLevelCascadeMode AbstractValidator<CreateStockBookOrderRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateStockBookOrderRequestValidator() public CreateStockBookOrderRequestValidator()"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Validators.StockBookChangeRequestValidator.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Validators.StockBookChangeRequestValidator.html",
    "title": "Class StockBookChangeRequestValidator | ELibrary",
    "keywords": "Class StockBookChangeRequestValidator Namespace ShopApi.Features.StockBookOrderFeature.Validators Assembly ShopApi.dll public class StockBookChangeRequestValidator : AbstractValidator<StockBookChangeRequest>, IValidator<StockBookChangeRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<StockBookChangeRequest> StockBookChangeRequestValidator Implements IValidator<StockBookChangeRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<StockBookChangeRequest>.Validate(StockBookChangeRequest) AbstractValidator<StockBookChangeRequest>.ValidateAsync(StockBookChangeRequest, CancellationToken) AbstractValidator<StockBookChangeRequest>.Validate(ValidationContext<StockBookChangeRequest>) AbstractValidator<StockBookChangeRequest>.ValidateAsync(ValidationContext<StockBookChangeRequest>, CancellationToken) AbstractValidator<StockBookChangeRequest>.CreateDescriptor() AbstractValidator<StockBookChangeRequest>.RuleFor<TProperty>(Expression<Func<StockBookChangeRequest, TProperty>>) AbstractValidator<StockBookChangeRequest>.Transform<TProperty, TTransformed>(Expression<Func<StockBookChangeRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<StockBookChangeRequest>.Transform<TProperty, TTransformed>(Expression<Func<StockBookChangeRequest, TProperty>>, Func<StockBookChangeRequest, TProperty, TTransformed>) AbstractValidator<StockBookChangeRequest>.RuleForEach<TElement>(Expression<Func<StockBookChangeRequest, IEnumerable<TElement>>>) AbstractValidator<StockBookChangeRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<StockBookChangeRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<StockBookChangeRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<StockBookChangeRequest, IEnumerable<TElement>>>, Func<StockBookChangeRequest, TElement, TTransformed>) AbstractValidator<StockBookChangeRequest>.RuleSet(string, Action) AbstractValidator<StockBookChangeRequest>.When(Func<StockBookChangeRequest, bool>, Action) AbstractValidator<StockBookChangeRequest>.When(Func<StockBookChangeRequest, ValidationContext<StockBookChangeRequest>, bool>, Action) AbstractValidator<StockBookChangeRequest>.Unless(Func<StockBookChangeRequest, bool>, Action) AbstractValidator<StockBookChangeRequest>.Unless(Func<StockBookChangeRequest, ValidationContext<StockBookChangeRequest>, bool>, Action) AbstractValidator<StockBookChangeRequest>.WhenAsync(Func<StockBookChangeRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<StockBookChangeRequest>.WhenAsync(Func<StockBookChangeRequest, ValidationContext<StockBookChangeRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<StockBookChangeRequest>.UnlessAsync(Func<StockBookChangeRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<StockBookChangeRequest>.UnlessAsync(Func<StockBookChangeRequest, ValidationContext<StockBookChangeRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<StockBookChangeRequest>.Include(IValidator<StockBookChangeRequest>) AbstractValidator<StockBookChangeRequest>.Include<TValidator>(Func<StockBookChangeRequest, TValidator>) AbstractValidator<StockBookChangeRequest>.GetEnumerator() AbstractValidator<StockBookChangeRequest>.EnsureInstanceNotNull(object) AbstractValidator<StockBookChangeRequest>.PreValidate(ValidationContext<StockBookChangeRequest>, ValidationResult) AbstractValidator<StockBookChangeRequest>.RaiseValidationException(ValidationContext<StockBookChangeRequest>, ValidationResult) AbstractValidator<StockBookChangeRequest>.CascadeMode AbstractValidator<StockBookChangeRequest>.ClassLevelCascadeMode AbstractValidator<StockBookChangeRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StockBookChangeRequestValidator() public StockBookChangeRequestValidator()"
  },
  "api/ShopApi.Features.StockBookOrderFeature.Validators.html": {
    "href": "api/ShopApi.Features.StockBookOrderFeature.Validators.html",
    "title": "Namespace ShopApi.Features.StockBookOrderFeature.Validators | ELibrary",
    "keywords": "Namespace ShopApi.Features.StockBookOrderFeature.Validators Classes CreateStockBookOrderRequestValidator StockBookChangeRequestValidator"
  },
  "api/ShopApi.GetLibraryEntityHelper.html": {
    "href": "api/ShopApi.GetLibraryEntityHelper.html",
    "title": "Class GetLibraryEntityHelper | ELibrary",
    "keywords": "Class GetLibraryEntityHelper Namespace ShopApi Assembly ShopApi.dll public static class GetLibraryEntityHelper Inheritance object GetLibraryEntityHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBookResponsesForIdsAsync(IEnumerable<int>, ILibraryService, CancellationToken) public static Task<IEnumerable<BookResponse>> GetBookResponsesForIdsAsync(IEnumerable<int> ids, ILibraryService libraryService, CancellationToken cancellationToken) Parameters ids IEnumerable<int> libraryService ILibraryService cancellationToken CancellationToken Returns Task<IEnumerable<BookResponse>> GetCartResponseWithBooksAsync(Cart, ILibraryService, IMapper, CancellationToken) public static Task<CartResponse> GetCartResponseWithBooksAsync(Cart cart, ILibraryService libraryService, IMapper mapper, CancellationToken cancellationToken) Parameters cart Cart libraryService ILibraryService mapper IMapper cancellationToken CancellationToken Returns Task<CartResponse> GetOrderResponsesWithBooksAsync(IEnumerable<Order>, ILibraryService, IMapper, CancellationToken) public static Task<IEnumerable<OrderResponse>> GetOrderResponsesWithBooksAsync(IEnumerable<Order> orders, ILibraryService libraryService, IMapper mapper, CancellationToken cancellationToken) Parameters orders IEnumerable<Order> libraryService ILibraryService mapper IMapper cancellationToken CancellationToken Returns Task<IEnumerable<OrderResponse>> GetStockBookOrderResponseWithBooksAsync(IEnumerable<StockBookOrder>, ILibraryService, IMapper, CancellationToken) public static Task<IEnumerable<StockBookOrderResponse>> GetStockBookOrderResponseWithBooksAsync(IEnumerable<StockBookOrder> orders, ILibraryService libraryService, IMapper mapper, CancellationToken cancellationToken) Parameters orders IEnumerable<StockBookOrder> libraryService ILibraryService mapper IMapper cancellationToken CancellationToken Returns Task<IEnumerable<StockBookOrderResponse>>"
  },
  "api/ShopApi.LibraryConfiguration.html": {
    "href": "api/ShopApi.LibraryConfiguration.html",
    "title": "Class LibraryConfiguration | ELibrary",
    "keywords": "Class LibraryConfiguration Namespace ShopApi Assembly ShopApi.dll public static class LibraryConfiguration Inheritance object LibraryConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties LIBRARY_API_GET_BOOKS_BY_IDS_ENDPOINT public static string LIBRARY_API_GET_BOOKS_BY_IDS_ENDPOINT { get; } Property Value string LIBRARY_API_RAISE_BOOK_POPULARITY_ENDPOINT public static string LIBRARY_API_RAISE_BOOK_POPULARITY_ENDPOINT { get; } Property Value string LIBRARY_API_UPDATE_STOCK_AMOUNT_ENDPOINT public static string LIBRARY_API_UPDATE_STOCK_AMOUNT_ENDPOINT { get; } Property Value string"
  },
  "api/ShopApi.Migrations.AddedContactClientInfoToOrder.html": {
    "href": "api/ShopApi.Migrations.AddedContactClientInfoToOrder.html",
    "title": "Class AddedContactClientInfoToOrder | ELibrary",
    "keywords": "Class AddedContactClientInfoToOrder Namespace ShopApi.Migrations Assembly ShopApi.dll A base class inherited by each EF Core migration. [DbContext(typeof(ShopDbContext))] [Migration(\"20241115132745_AddedContactClientInfoToOrder\")] public class AddedContactClientInfoToOrder : Migration Inheritance object Migration AddedContactClientInfoToOrder Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/ShopApi.Migrations.InitialMigration.html": {
    "href": "api/ShopApi.Migrations.InitialMigration.html",
    "title": "Class InitialMigration | ELibrary",
    "keywords": "Class InitialMigration Namespace ShopApi.Migrations Assembly ShopApi.dll A base class inherited by each EF Core migration. [DbContext(typeof(ShopDbContext))] [Migration(\"20241101190449_InitialMigration\")] public class InitialMigration : Migration Inheritance object Migration InitialMigration Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/ShopApi.Migrations.html": {
    "href": "api/ShopApi.Migrations.html",
    "title": "Namespace ShopApi.Migrations | ELibrary",
    "keywords": "Namespace ShopApi.Migrations Classes AddedContactClientInfoToOrder A base class inherited by each EF Core migration. InitialMigration A base class inherited by each EF Core migration."
  },
  "api/ShopApi.Services.ILibraryService.html": {
    "href": "api/ShopApi.Services.ILibraryService.html",
    "title": "Interface ILibraryService | ELibrary",
    "keywords": "Interface ILibraryService Namespace ShopApi.Services Assembly ShopApi.dll public interface ILibraryService Methods GetByIdsAsync<T>(IEnumerable<int>, string, CancellationToken) Task<IEnumerable<T>> GetByIdsAsync<T>(IEnumerable<int> ids, string endpoint, CancellationToken cancellationToken) Parameters ids IEnumerable<int> endpoint string cancellationToken CancellationToken Returns Task<IEnumerable<T>> Type Parameters T RaiseBookPopularityByIdsAsync(IEnumerable<int>, CancellationToken) Task RaiseBookPopularityByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task UpdateBookStockAmountAsync(IEnumerable<StockBookChange>, CancellationToken) Task UpdateBookStockAmountAsync(IEnumerable<StockBookChange> changes, CancellationToken cancellationToken) Parameters changes IEnumerable<StockBookChange> cancellationToken CancellationToken Returns Task"
  },
  "api/ShopApi.Services.LibraryService.html": {
    "href": "api/ShopApi.Services.LibraryService.html",
    "title": "Class LibraryService | ELibrary",
    "keywords": "Class LibraryService Namespace ShopApi.Services Assembly ShopApi.dll public class LibraryService : ILibraryService Inheritance object LibraryService Implements ILibraryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LibraryService(ResiliencePipelineProvider<string>, IHttpHelper, IMapper, IConfiguration) public LibraryService(ResiliencePipelineProvider<string> resiliencePipelineProvider, IHttpHelper httpHelper, IMapper mapper, IConfiguration configuration) Parameters resiliencePipelineProvider ResiliencePipelineProvider<string> httpHelper IHttpHelper mapper IMapper configuration IConfiguration Methods GetByIdsAsync<T>(IEnumerable<int>, string, CancellationToken) public Task<IEnumerable<T>> GetByIdsAsync<T>(IEnumerable<int> ids, string endpoint, CancellationToken cancellationToken) Parameters ids IEnumerable<int> endpoint string cancellationToken CancellationToken Returns Task<IEnumerable<T>> Type Parameters T RaiseBookPopularityByIdsAsync(IEnumerable<int>, CancellationToken) public Task RaiseBookPopularityByIdsAsync(IEnumerable<int> ids, CancellationToken cancellationToken) Parameters ids IEnumerable<int> cancellationToken CancellationToken Returns Task UpdateBookStockAmountAsync(IEnumerable<StockBookChange>, CancellationToken) public Task UpdateBookStockAmountAsync(IEnumerable<StockBookChange> changes, CancellationToken cancellationToken) Parameters changes IEnumerable<StockBookChange> cancellationToken CancellationToken Returns Task"
  },
  "api/ShopApi.Services.html": {
    "href": "api/ShopApi.Services.html",
    "title": "Namespace ShopApi.Services | ELibrary",
    "keywords": "Namespace ShopApi.Services Classes LibraryService Interfaces ILibraryService"
  },
  "api/ShopApi.Utilities.html": {
    "href": "api/ShopApi.Utilities.html",
    "title": "Class Utilities | ELibrary",
    "keywords": "Class Utilities Namespace ShopApi Assembly ShopApi.dll public static class Utilities Inheritance object Utilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetUserId(ClaimsPrincipal) public static string GetUserId(ClaimsPrincipal principal) Parameters principal ClaimsPrincipal Returns string"
  },
  "api/ShopApi.html": {
    "href": "api/ShopApi.html",
    "title": "Namespace ShopApi | ELibrary",
    "keywords": "Namespace ShopApi Classes AutoMapperProfile Configuration GetLibraryEntityHelper LibraryConfiguration Utilities"
  },
  "api/UserApi.AutoMapperProfile.html": {
    "href": "api/UserApi.AutoMapperProfile.html",
    "title": "Class AutoMapperProfile | ELibrary",
    "keywords": "Class AutoMapperProfile Namespace UserApi Assembly UserApi.dll public class AutoMapperProfile : Profile, IProfileExpression, IProfileConfiguration Inheritance object Profile AutoMapperProfile Implements IProfileExpression IProfileConfiguration Inherited Members Profile.DisableConstructorMapping() Profile.CreateProjection<TSource, TDestination>() Profile.CreateProjection<TSource, TDestination>(MemberList) Profile.CreateMap<TSource, TDestination>() Profile.CreateMap<TSource, TDestination>(MemberList) Profile.CreateMap(Type, Type) Profile.CreateMap(Type, Type, MemberList) Profile.ClearPrefixes() Profile.ReplaceMemberName(string, string) Profile.RecognizePrefixes(params string[]) Profile.RecognizePostfixes(params string[]) Profile.RecognizeDestinationPrefixes(params string[]) Profile.RecognizeDestinationPostfixes(params string[]) Profile.AddGlobalIgnore(string) Profile.IncludeSourceExtensionMethods(Type) Profile.ProfileName Profile.AllowNullDestinationValues Profile.AllowNullCollections Profile.ShouldMapProperty Profile.ShouldMapField Profile.ShouldMapMethod Profile.ShouldUseConstructor Profile.SourceMemberNamingConvention Profile.DestinationMemberNamingConvention Profile.ValueTransformers object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AutoMapperProfile() public AutoMapperProfile()"
  },
  "api/UserApi.Command.Admin.AdminDeleteUser.AdminDeleteUserCommand.html": {
    "href": "api/UserApi.Command.Admin.AdminDeleteUser.AdminDeleteUserCommand.html",
    "title": "Class AdminDeleteUserCommand | ELibrary",
    "keywords": "Class AdminDeleteUserCommand Namespace UserApi.Command.Admin.AdminDeleteUser Assembly UserApi.dll public record AdminDeleteUserCommand : IRequest<Unit>, IBaseRequest, IEquatable<AdminDeleteUserCommand> Inheritance object AdminDeleteUserCommand Implements IRequest<Unit> IBaseRequest IEquatable<AdminDeleteUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminDeleteUserCommand(string) public AdminDeleteUserCommand(string Info) Parameters Info string Properties Info public string Info { get; init; } Property Value string"
  },
  "api/UserApi.Command.Admin.AdminDeleteUser.AdminDeleteUserCommandHandler.html": {
    "href": "api/UserApi.Command.Admin.AdminDeleteUser.AdminDeleteUserCommandHandler.html",
    "title": "Class AdminDeleteUserCommandHandler | ELibrary",
    "keywords": "Class AdminDeleteUserCommandHandler Namespace UserApi.Command.Admin.AdminDeleteUser Assembly UserApi.dll public class AdminDeleteUserCommandHandler : IRequestHandler<AdminDeleteUserCommand, Unit> Inheritance object AdminDeleteUserCommandHandler Implements IRequestHandler<AdminDeleteUserCommand, Unit> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminDeleteUserCommandHandler(IUserService) public AdminDeleteUserCommandHandler(IUserService userServicee) Parameters userServicee IUserService Methods Handle(AdminDeleteUserCommand, CancellationToken) Handles a request public Task<Unit> Handle(AdminDeleteUserCommand command, CancellationToken cancellationToken) Parameters command AdminDeleteUserCommand cancellationToken CancellationToken Cancellation token Returns Task<Unit> Response from the request"
  },
  "api/UserApi.Command.Admin.AdminDeleteUser.html": {
    "href": "api/UserApi.Command.Admin.AdminDeleteUser.html",
    "title": "Namespace UserApi.Command.Admin.AdminDeleteUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.AdminDeleteUser Classes AdminDeleteUserCommand AdminDeleteUserCommandHandler"
  },
  "api/UserApi.Command.Admin.AdminRegisterUser.AdminRegisterUserCommand.html": {
    "href": "api/UserApi.Command.Admin.AdminRegisterUser.AdminRegisterUserCommand.html",
    "title": "Class AdminRegisterUserCommand | ELibrary",
    "keywords": "Class AdminRegisterUserCommand Namespace UserApi.Command.Admin.AdminRegisterUser Assembly UserApi.dll public record AdminRegisterUserCommand : IRequest<AdminUserResponse>, IBaseRequest, IEquatable<AdminRegisterUserCommand> Inheritance object AdminRegisterUserCommand Implements IRequest<AdminUserResponse> IBaseRequest IEquatable<AdminRegisterUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminRegisterUserCommand(AdminUserRegistrationRequest) public AdminRegisterUserCommand(AdminUserRegistrationRequest Request) Parameters Request AdminUserRegistrationRequest Properties Request public AdminUserRegistrationRequest Request { get; init; } Property Value AdminUserRegistrationRequest"
  },
  "api/UserApi.Command.Admin.AdminRegisterUser.AdminRegisterUserCommandHandler.html": {
    "href": "api/UserApi.Command.Admin.AdminRegisterUser.AdminRegisterUserCommandHandler.html",
    "title": "Class AdminRegisterUserCommandHandler | ELibrary",
    "keywords": "Class AdminRegisterUserCommandHandler Namespace UserApi.Command.Admin.AdminRegisterUser Assembly UserApi.dll public class AdminRegisterUserCommandHandler : IRequestHandler<AdminRegisterUserCommand, AdminUserResponse> Inheritance object AdminRegisterUserCommandHandler Implements IRequestHandler<AdminRegisterUserCommand, AdminUserResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminRegisterUserCommandHandler(IAuthService, IUserService, IMapper) public AdminRegisterUserCommandHandler(IAuthService authService, IUserService userService, IMapper mapper) Parameters authService IAuthService userService IUserService mapper IMapper Methods Handle(AdminRegisterUserCommand, CancellationToken) Handles a request public Task<AdminUserResponse> Handle(AdminRegisterUserCommand command, CancellationToken cancellationToken) Parameters command AdminRegisterUserCommand cancellationToken CancellationToken Cancellation token Returns Task<AdminUserResponse> Response from the request"
  },
  "api/UserApi.Command.Admin.AdminRegisterUser.html": {
    "href": "api/UserApi.Command.Admin.AdminRegisterUser.html",
    "title": "Namespace UserApi.Command.Admin.AdminRegisterUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.AdminRegisterUser Classes AdminRegisterUserCommand AdminRegisterUserCommandHandler"
  },
  "api/UserApi.Command.Admin.AdminUpdateUser.AdminUpdateUserCommand.html": {
    "href": "api/UserApi.Command.Admin.AdminUpdateUser.AdminUpdateUserCommand.html",
    "title": "Class AdminUpdateUserCommand | ELibrary",
    "keywords": "Class AdminUpdateUserCommand Namespace UserApi.Command.Admin.AdminUpdateUser Assembly UserApi.dll public record AdminUpdateUserCommand : IRequest<AdminUserResponse>, IBaseRequest, IEquatable<AdminUpdateUserCommand> Inheritance object AdminUpdateUserCommand Implements IRequest<AdminUserResponse> IBaseRequest IEquatable<AdminUpdateUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminUpdateUserCommand(AdminUserUpdateDataRequest) public AdminUpdateUserCommand(AdminUserUpdateDataRequest Request) Parameters Request AdminUserUpdateDataRequest Properties Request public AdminUserUpdateDataRequest Request { get; init; } Property Value AdminUserUpdateDataRequest"
  },
  "api/UserApi.Command.Admin.AdminUpdateUser.AdminUpdateUserCommandHandler.html": {
    "href": "api/UserApi.Command.Admin.AdminUpdateUser.AdminUpdateUserCommandHandler.html",
    "title": "Class AdminUpdateUserCommandHandler | ELibrary",
    "keywords": "Class AdminUpdateUserCommandHandler Namespace UserApi.Command.Admin.AdminUpdateUser Assembly UserApi.dll public class AdminUpdateUserCommandHandler : IRequestHandler<AdminUpdateUserCommand, AdminUserResponse> Inheritance object AdminUpdateUserCommandHandler Implements IRequestHandler<AdminUpdateUserCommand, AdminUserResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminUpdateUserCommandHandler(IUserService, IMapper) public AdminUpdateUserCommandHandler(IUserService userService, IMapper mapper) Parameters userService IUserService mapper IMapper Methods Handle(AdminUpdateUserCommand, CancellationToken) Handles a request public Task<AdminUserResponse> Handle(AdminUpdateUserCommand command, CancellationToken cancellationToken) Parameters command AdminUpdateUserCommand cancellationToken CancellationToken Cancellation token Returns Task<AdminUserResponse> Response from the request"
  },
  "api/UserApi.Command.Admin.AdminUpdateUser.html": {
    "href": "api/UserApi.Command.Admin.AdminUpdateUser.html",
    "title": "Namespace UserApi.Command.Admin.AdminUpdateUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.AdminUpdateUser Classes AdminUpdateUserCommand AdminUpdateUserCommandHandler"
  },
  "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.GetPaginatedUserTotalAmountQuery.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.GetPaginatedUserTotalAmountQuery.html",
    "title": "Class GetPaginatedUserTotalAmountQuery | ELibrary",
    "keywords": "Class GetPaginatedUserTotalAmountQuery Namespace UserApi.Command.Admin.GetPaginatedUserTotalAmount Assembly UserApi.dll public record GetPaginatedUserTotalAmountQuery : IRequest<int>, IBaseRequest, IEquatable<GetPaginatedUserTotalAmountQuery> Inheritance object GetPaginatedUserTotalAmountQuery Implements IRequest<int> IBaseRequest IEquatable<GetPaginatedUserTotalAmountQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetPaginatedUserTotalAmountQuery(AdminGetUserFilter) public GetPaginatedUserTotalAmountQuery(AdminGetUserFilter Filter) Parameters Filter AdminGetUserFilter Properties Filter public AdminGetUserFilter Filter { get; init; } Property Value AdminGetUserFilter"
  },
  "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.GetPaginatedUserTotalAmountQueryHandler.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.GetPaginatedUserTotalAmountQueryHandler.html",
    "title": "Class GetPaginatedUserTotalAmountQueryHandler | ELibrary",
    "keywords": "Class GetPaginatedUserTotalAmountQueryHandler Namespace UserApi.Command.Admin.GetPaginatedUserTotalAmount Assembly UserApi.dll public class GetPaginatedUserTotalAmountQueryHandler : IRequestHandler<GetPaginatedUserTotalAmountQuery, int> Inheritance object GetPaginatedUserTotalAmountQueryHandler Implements IRequestHandler<GetPaginatedUserTotalAmountQuery, int> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetPaginatedUserTotalAmountQueryHandler(IUserService) public GetPaginatedUserTotalAmountQueryHandler(IUserService userService) Parameters userService IUserService Methods Handle(GetPaginatedUserTotalAmountQuery, CancellationToken) Handles a request public Task<int> Handle(GetPaginatedUserTotalAmountQuery request, CancellationToken cancellationToken) Parameters request GetPaginatedUserTotalAmountQuery The request cancellationToken CancellationToken Cancellation token Returns Task<int> Response from the request"
  },
  "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUserTotalAmount.html",
    "title": "Namespace UserApi.Command.Admin.GetPaginatedUserTotalAmount | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.GetPaginatedUserTotalAmount Classes GetPaginatedUserTotalAmountQuery GetPaginatedUserTotalAmountQueryHandler"
  },
  "api/UserApi.Command.Admin.GetPaginatedUsers.GetPaginatedUsersQuery.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUsers.GetPaginatedUsersQuery.html",
    "title": "Class GetPaginatedUsersQuery | ELibrary",
    "keywords": "Class GetPaginatedUsersQuery Namespace UserApi.Command.Admin.GetPaginatedUsers Assembly UserApi.dll public record GetPaginatedUsersQuery : IRequest<IEnumerable<AdminUserResponse>>, IBaseRequest, IEquatable<GetPaginatedUsersQuery> Inheritance object GetPaginatedUsersQuery Implements IRequest<IEnumerable<AdminUserResponse>> IBaseRequest IEquatable<GetPaginatedUsersQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetPaginatedUsersQuery(AdminGetUserFilter) public GetPaginatedUsersQuery(AdminGetUserFilter Filter) Parameters Filter AdminGetUserFilter Properties Filter public AdminGetUserFilter Filter { get; init; } Property Value AdminGetUserFilter"
  },
  "api/UserApi.Command.Admin.GetPaginatedUsers.GetPaginatedUsersQueryHandler.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUsers.GetPaginatedUsersQueryHandler.html",
    "title": "Class GetPaginatedUsersQueryHandler | ELibrary",
    "keywords": "Class GetPaginatedUsersQueryHandler Namespace UserApi.Command.Admin.GetPaginatedUsers Assembly UserApi.dll public class GetPaginatedUsersQueryHandler : IRequestHandler<GetPaginatedUsersQuery, IEnumerable<AdminUserResponse>> Inheritance object GetPaginatedUsersQueryHandler Implements IRequestHandler<GetPaginatedUsersQuery, IEnumerable<AdminUserResponse>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetPaginatedUsersQueryHandler(IUserService, IMapper) public GetPaginatedUsersQueryHandler(IUserService userService, IMapper mapper) Parameters userService IUserService mapper IMapper Methods Handle(GetPaginatedUsersQuery, CancellationToken) Handles a request public Task<IEnumerable<AdminUserResponse>> Handle(GetPaginatedUsersQuery request, CancellationToken cancellationToken) Parameters request GetPaginatedUsersQuery The request cancellationToken CancellationToken Cancellation token Returns Task<IEnumerable<AdminUserResponse>> Response from the request"
  },
  "api/UserApi.Command.Admin.GetPaginatedUsers.html": {
    "href": "api/UserApi.Command.Admin.GetPaginatedUsers.html",
    "title": "Namespace UserApi.Command.Admin.GetPaginatedUsers | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.GetPaginatedUsers Classes GetPaginatedUsersQuery GetPaginatedUsersQueryHandler"
  },
  "api/UserApi.Command.Admin.GetUserByInfo.GetUserByInfoQuery.html": {
    "href": "api/UserApi.Command.Admin.GetUserByInfo.GetUserByInfoQuery.html",
    "title": "Class GetUserByInfoQuery | ELibrary",
    "keywords": "Class GetUserByInfoQuery Namespace UserApi.Command.Admin.GetUserByInfo Assembly UserApi.dll public record GetUserByInfoQuery : IRequest<AdminUserResponse>, IBaseRequest, IEquatable<GetUserByInfoQuery> Inheritance object GetUserByInfoQuery Implements IRequest<AdminUserResponse> IBaseRequest IEquatable<GetUserByInfoQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserByInfoQuery(string) public GetUserByInfoQuery(string Info) Parameters Info string Properties Info public string Info { get; init; } Property Value string"
  },
  "api/UserApi.Command.Admin.GetUserByInfo.GetUserByInfoQueryHandler.html": {
    "href": "api/UserApi.Command.Admin.GetUserByInfo.GetUserByInfoQueryHandler.html",
    "title": "Class GetUserByInfoQueryHandler | ELibrary",
    "keywords": "Class GetUserByInfoQueryHandler Namespace UserApi.Command.Admin.GetUserByInfo Assembly UserApi.dll public class GetUserByInfoQueryHandler : IRequestHandler<GetUserByInfoQuery, AdminUserResponse?> Inheritance object GetUserByInfoQueryHandler Implements IRequestHandler<GetUserByInfoQuery, AdminUserResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserByInfoQueryHandler(IUserService, IUserAuthenticationMethodService, IMapper) public GetUserByInfoQueryHandler(IUserService userService, IUserAuthenticationMethodService authMethodService, IMapper mapper) Parameters userService IUserService authMethodService IUserAuthenticationMethodService mapper IMapper Methods Handle(GetUserByInfoQuery, CancellationToken) Handles a request public Task<AdminUserResponse?> Handle(GetUserByInfoQuery command, CancellationToken cancellationToken) Parameters command GetUserByInfoQuery cancellationToken CancellationToken Cancellation token Returns Task<AdminUserResponse> Response from the request"
  },
  "api/UserApi.Command.Admin.GetUserByInfo.html": {
    "href": "api/UserApi.Command.Admin.GetUserByInfo.html",
    "title": "Namespace UserApi.Command.Admin.GetUserByInfo | ELibrary",
    "keywords": "Namespace UserApi.Command.Admin.GetUserByInfo Classes GetUserByInfoQuery GetUserByInfoQueryHandler"
  },
  "api/UserApi.Command.Client.DeleteUser.DeleteUserCommand.html": {
    "href": "api/UserApi.Command.Client.DeleteUser.DeleteUserCommand.html",
    "title": "Class DeleteUserCommand | ELibrary",
    "keywords": "Class DeleteUserCommand Namespace UserApi.Command.Client.DeleteUser Assembly UserApi.dll public record DeleteUserCommand : IRequest<Unit>, IBaseRequest, IEquatable<DeleteUserCommand> Inheritance object DeleteUserCommand Implements IRequest<Unit> IBaseRequest IEquatable<DeleteUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCommand(ClaimsPrincipal) public DeleteUserCommand(ClaimsPrincipal ClaimsPrincipal) Parameters ClaimsPrincipal ClaimsPrincipal Properties ClaimsPrincipal public ClaimsPrincipal ClaimsPrincipal { get; init; } Property Value ClaimsPrincipal"
  },
  "api/UserApi.Command.Client.DeleteUser.DeleteUserCommandHandler.html": {
    "href": "api/UserApi.Command.Client.DeleteUser.DeleteUserCommandHandler.html",
    "title": "Class DeleteUserCommandHandler | ELibrary",
    "keywords": "Class DeleteUserCommandHandler Namespace UserApi.Command.Client.DeleteUser Assembly UserApi.dll public class DeleteUserCommandHandler : IRequestHandler<DeleteUserCommand, Unit> Inheritance object DeleteUserCommandHandler Implements IRequestHandler<DeleteUserCommand, Unit> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteUserCommandHandler(IUserService) public DeleteUserCommandHandler(IUserService userService) Parameters userService IUserService Methods Handle(DeleteUserCommand, CancellationToken) Handles a request public Task<Unit> Handle(DeleteUserCommand request, CancellationToken cancellationToken) Parameters request DeleteUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Unit> Response from the request"
  },
  "api/UserApi.Command.Client.DeleteUser.html": {
    "href": "api/UserApi.Command.Client.DeleteUser.html",
    "title": "Namespace UserApi.Command.Client.DeleteUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.DeleteUser Classes DeleteUserCommand DeleteUserCommandHandler"
  },
  "api/UserApi.Command.Client.GetOAuthUrl.GetOAuthUrlQuery.html": {
    "href": "api/UserApi.Command.Client.GetOAuthUrl.GetOAuthUrlQuery.html",
    "title": "Class GetOAuthUrlQuery | ELibrary",
    "keywords": "Class GetOAuthUrlQuery Namespace UserApi.Command.Client.GetOAuthUrl Assembly UserApi.dll public record GetOAuthUrlQuery : IRequest<GetOAuthUrlResponse>, IBaseRequest, IEquatable<GetOAuthUrlQuery> Inheritance object GetOAuthUrlQuery Implements IRequest<GetOAuthUrlResponse> IBaseRequest IEquatable<GetOAuthUrlQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOAuthUrlQuery(GetOAuthUrlQueryParams) public GetOAuthUrlQuery(GetOAuthUrlQueryParams QueryParams) Parameters QueryParams GetOAuthUrlQueryParams Properties QueryParams public GetOAuthUrlQueryParams QueryParams { get; init; } Property Value GetOAuthUrlQueryParams"
  },
  "api/UserApi.Command.Client.GetOAuthUrl.GetOAuthUrlQueryHandler.html": {
    "href": "api/UserApi.Command.Client.GetOAuthUrl.GetOAuthUrlQueryHandler.html",
    "title": "Class GetOAuthUrlQueryHandler | ELibrary",
    "keywords": "Class GetOAuthUrlQueryHandler Namespace UserApi.Command.Client.GetOAuthUrl Assembly UserApi.dll public class GetOAuthUrlQueryHandler : IRequestHandler<GetOAuthUrlQuery, GetOAuthUrlResponse> Inheritance object GetOAuthUrlQueryHandler Implements IRequestHandler<GetOAuthUrlQuery, GetOAuthUrlResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetOAuthUrlQueryHandler(Dictionary<OAuthLoginProvider, IOAuthService>) public GetOAuthUrlQueryHandler(Dictionary<OAuthLoginProvider, IOAuthService> oAuthServices) Parameters oAuthServices Dictionary<OAuthLoginProvider, IOAuthService> Methods Handle(GetOAuthUrlQuery, CancellationToken) Handles a request public Task<GetOAuthUrlResponse> Handle(GetOAuthUrlQuery request, CancellationToken cancellationToken) Parameters request GetOAuthUrlQuery The request cancellationToken CancellationToken Cancellation token Returns Task<GetOAuthUrlResponse> Response from the request"
  },
  "api/UserApi.Command.Client.GetOAuthUrl.html": {
    "href": "api/UserApi.Command.Client.GetOAuthUrl.html",
    "title": "Namespace UserApi.Command.Client.GetOAuthUrl | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.GetOAuthUrl Classes GetOAuthUrlQuery GetOAuthUrlQueryHandler"
  },
  "api/UserApi.Command.Client.LoginOAuth.LoginOAuthCommand.html": {
    "href": "api/UserApi.Command.Client.LoginOAuth.LoginOAuthCommand.html",
    "title": "Class LoginOAuthCommand | ELibrary",
    "keywords": "Class LoginOAuthCommand Namespace UserApi.Command.Client.LoginOAuth Assembly UserApi.dll public record LoginOAuthCommand : IRequest<UserAuthenticationResponse>, IBaseRequest, IEquatable<LoginOAuthCommand> Inheritance object LoginOAuthCommand Implements IRequest<UserAuthenticationResponse> IBaseRequest IEquatable<LoginOAuthCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginOAuthCommand(LoginOAuthRequest) public LoginOAuthCommand(LoginOAuthRequest Request) Parameters Request LoginOAuthRequest Properties Request public LoginOAuthRequest Request { get; init; } Property Value LoginOAuthRequest"
  },
  "api/UserApi.Command.Client.LoginOAuth.LoginOAuthCommandHandler.html": {
    "href": "api/UserApi.Command.Client.LoginOAuth.LoginOAuthCommandHandler.html",
    "title": "Class LoginOAuthCommandHandler | ELibrary",
    "keywords": "Class LoginOAuthCommandHandler Namespace UserApi.Command.Client.LoginOAuth Assembly UserApi.dll public class LoginOAuthCommandHandler : IRequestHandler<LoginOAuthCommand, UserAuthenticationResponse> Inheritance object LoginOAuthCommandHandler Implements IRequestHandler<LoginOAuthCommand, UserAuthenticationResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginOAuthCommandHandler(Dictionary<OAuthLoginProvider, IOAuthService>, IAuthService, IUserService, ITokenService, IMapper) public LoginOAuthCommandHandler(Dictionary<OAuthLoginProvider, IOAuthService> oAuthServices, IAuthService authService, IUserService userService, ITokenService tokenService, IMapper mapper) Parameters oAuthServices Dictionary<OAuthLoginProvider, IOAuthService> authService IAuthService userService IUserService tokenService ITokenService mapper IMapper Methods Handle(LoginOAuthCommand, CancellationToken) Handles a request public Task<UserAuthenticationResponse> Handle(LoginOAuthCommand command, CancellationToken cancellationToken) Parameters command LoginOAuthCommand cancellationToken CancellationToken Cancellation token Returns Task<UserAuthenticationResponse> Response from the request"
  },
  "api/UserApi.Command.Client.LoginOAuth.html": {
    "href": "api/UserApi.Command.Client.LoginOAuth.html",
    "title": "Namespace UserApi.Command.Client.LoginOAuth | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.LoginOAuth Classes LoginOAuthCommand LoginOAuthCommandHandler"
  },
  "api/UserApi.Command.Client.LoginUser.LoginUserCommand.html": {
    "href": "api/UserApi.Command.Client.LoginUser.LoginUserCommand.html",
    "title": "Class LoginUserCommand | ELibrary",
    "keywords": "Class LoginUserCommand Namespace UserApi.Command.Client.LoginUser Assembly UserApi.dll public record LoginUserCommand : IRequest<UserAuthenticationResponse>, IBaseRequest, IEquatable<LoginUserCommand> Inheritance object LoginUserCommand Implements IRequest<UserAuthenticationResponse> IBaseRequest IEquatable<LoginUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginUserCommand(UserAuthenticationRequest) public LoginUserCommand(UserAuthenticationRequest Request) Parameters Request UserAuthenticationRequest Properties Request public UserAuthenticationRequest Request { get; init; } Property Value UserAuthenticationRequest"
  },
  "api/UserApi.Command.Client.LoginUser.LoginUserCommandHandler.html": {
    "href": "api/UserApi.Command.Client.LoginUser.LoginUserCommandHandler.html",
    "title": "Class LoginUserCommandHandler | ELibrary",
    "keywords": "Class LoginUserCommandHandler Namespace UserApi.Command.Client.LoginUser Assembly UserApi.dll public class LoginUserCommandHandler : IRequestHandler<LoginUserCommand, UserAuthenticationResponse> Inheritance object LoginUserCommandHandler Implements IRequestHandler<LoginUserCommand, UserAuthenticationResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginUserCommandHandler(IAuthService, IUserService, IUserAuthenticationMethodService, IMapper) public LoginUserCommandHandler(IAuthService authService, IUserService userService, IUserAuthenticationMethodService authMethodService, IMapper mapper) Parameters authService IAuthService userService IUserService authMethodService IUserAuthenticationMethodService mapper IMapper Methods Handle(LoginUserCommand, CancellationToken) Handles a request public Task<UserAuthenticationResponse> Handle(LoginUserCommand command, CancellationToken cancellationToken) Parameters command LoginUserCommand cancellationToken CancellationToken Cancellation token Returns Task<UserAuthenticationResponse> Response from the request"
  },
  "api/UserApi.Command.Client.LoginUser.html": {
    "href": "api/UserApi.Command.Client.LoginUser.html",
    "title": "Namespace UserApi.Command.Client.LoginUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.LoginUser Classes LoginUserCommand LoginUserCommandHandler"
  },
  "api/UserApi.Command.Client.RefreshToken.RefreshTokenCommand.html": {
    "href": "api/UserApi.Command.Client.RefreshToken.RefreshTokenCommand.html",
    "title": "Class RefreshTokenCommand | ELibrary",
    "keywords": "Class RefreshTokenCommand Namespace UserApi.Command.Client.RefreshToken Assembly UserApi.dll public record RefreshTokenCommand : IRequest<AuthToken>, IBaseRequest, IEquatable<RefreshTokenCommand> Inheritance object RefreshTokenCommand Implements IRequest<AuthToken> IBaseRequest IEquatable<RefreshTokenCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RefreshTokenCommand(AuthToken) public RefreshTokenCommand(AuthToken Request) Parameters Request AuthToken Properties Request public AuthToken Request { get; init; } Property Value AuthToken"
  },
  "api/UserApi.Command.Client.RefreshToken.RefreshTokenCommandHandler.html": {
    "href": "api/UserApi.Command.Client.RefreshToken.RefreshTokenCommandHandler.html",
    "title": "Class RefreshTokenCommandHandler | ELibrary",
    "keywords": "Class RefreshTokenCommandHandler Namespace UserApi.Command.Client.RefreshToken Assembly UserApi.dll public class RefreshTokenCommandHandler : IRequestHandler<RefreshTokenCommand, AuthToken> Inheritance object RefreshTokenCommandHandler Implements IRequestHandler<RefreshTokenCommand, AuthToken> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RefreshTokenCommandHandler(IAuthService, IUserService, ITokenService, IMapper) public RefreshTokenCommandHandler(IAuthService authService, IUserService userService, ITokenService tokenService, IMapper mapper) Parameters authService IAuthService userService IUserService tokenService ITokenService mapper IMapper Methods Handle(RefreshTokenCommand, CancellationToken) Handles a request public Task<AuthToken> Handle(RefreshTokenCommand command, CancellationToken cancellationToken) Parameters command RefreshTokenCommand cancellationToken CancellationToken Cancellation token Returns Task<AuthToken> Response from the request"
  },
  "api/UserApi.Command.Client.RefreshToken.html": {
    "href": "api/UserApi.Command.Client.RefreshToken.html",
    "title": "Namespace UserApi.Command.Client.RefreshToken | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.RefreshToken Classes RefreshTokenCommand RefreshTokenCommandHandler"
  },
  "api/UserApi.Command.Client.RegisterUser.RegisterUserCommand.html": {
    "href": "api/UserApi.Command.Client.RegisterUser.RegisterUserCommand.html",
    "title": "Class RegisterUserCommand | ELibrary",
    "keywords": "Class RegisterUserCommand Namespace UserApi.Command.Client.RegisterUser Assembly UserApi.dll public record RegisterUserCommand : IRequest<UserAuthenticationResponse>, IBaseRequest, IEquatable<RegisterUserCommand> Inheritance object RegisterUserCommand Implements IRequest<UserAuthenticationResponse> IBaseRequest IEquatable<RegisterUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterUserCommand(UserRegistrationRequest) public RegisterUserCommand(UserRegistrationRequest Request) Parameters Request UserRegistrationRequest Properties Request public UserRegistrationRequest Request { get; init; } Property Value UserRegistrationRequest"
  },
  "api/UserApi.Command.Client.RegisterUser.RegisterUserCommandHandler.html": {
    "href": "api/UserApi.Command.Client.RegisterUser.RegisterUserCommandHandler.html",
    "title": "Class RegisterUserCommandHandler | ELibrary",
    "keywords": "Class RegisterUserCommandHandler Namespace UserApi.Command.Client.RegisterUser Assembly UserApi.dll public class RegisterUserCommandHandler : IRequestHandler<RegisterUserCommand, UserAuthenticationResponse> Inheritance object RegisterUserCommandHandler Implements IRequestHandler<RegisterUserCommand, UserAuthenticationResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterUserCommandHandler(IAuthService, IUserService, IUserAuthenticationMethodService, IMapper) public RegisterUserCommandHandler(IAuthService authService, IUserService userService, IUserAuthenticationMethodService authMethodService, IMapper mapper) Parameters authService IAuthService userService IUserService authMethodService IUserAuthenticationMethodService mapper IMapper Methods Handle(RegisterUserCommand, CancellationToken) Handles a request public Task<UserAuthenticationResponse> Handle(RegisterUserCommand command, CancellationToken cancellationToken) Parameters command RegisterUserCommand cancellationToken CancellationToken Cancellation token Returns Task<UserAuthenticationResponse> Response from the request"
  },
  "api/UserApi.Command.Client.RegisterUser.html": {
    "href": "api/UserApi.Command.Client.RegisterUser.html",
    "title": "Namespace UserApi.Command.Client.RegisterUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.RegisterUser Classes RegisterUserCommand RegisterUserCommandHandler"
  },
  "api/UserApi.Command.Client.UpdateUser.UpdateUserCommand.html": {
    "href": "api/UserApi.Command.Client.UpdateUser.UpdateUserCommand.html",
    "title": "Class UpdateUserCommand | ELibrary",
    "keywords": "Class UpdateUserCommand Namespace UserApi.Command.Client.UpdateUser Assembly UserApi.dll public record UpdateUserCommand : IRequest<Unit>, IBaseRequest, IEquatable<UpdateUserCommand> Inheritance object UpdateUserCommand Implements IRequest<Unit> IBaseRequest IEquatable<UpdateUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateUserCommand(UserUpdateDataRequest, ClaimsPrincipal) public UpdateUserCommand(UserUpdateDataRequest Request, ClaimsPrincipal UserPricipal) Parameters Request UserUpdateDataRequest UserPricipal ClaimsPrincipal Properties Request public UserUpdateDataRequest Request { get; init; } Property Value UserUpdateDataRequest UserPricipal public ClaimsPrincipal UserPricipal { get; init; } Property Value ClaimsPrincipal"
  },
  "api/UserApi.Command.Client.UpdateUser.UpdateUserCommandHandler.html": {
    "href": "api/UserApi.Command.Client.UpdateUser.UpdateUserCommandHandler.html",
    "title": "Class UpdateUserCommandHandler | ELibrary",
    "keywords": "Class UpdateUserCommandHandler Namespace UserApi.Command.Client.UpdateUser Assembly UserApi.dll public class UpdateUserCommandHandler : IRequestHandler<UpdateUserCommand, Unit> Inheritance object UpdateUserCommandHandler Implements IRequestHandler<UpdateUserCommand, Unit> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateUserCommandHandler(IUserService, IMapper) public UpdateUserCommandHandler(IUserService userService, IMapper mapper) Parameters userService IUserService mapper IMapper Methods Handle(UpdateUserCommand, CancellationToken) Handles a request public Task<Unit> Handle(UpdateUserCommand command, CancellationToken cancellationToken) Parameters command UpdateUserCommand cancellationToken CancellationToken Cancellation token Returns Task<Unit> Response from the request"
  },
  "api/UserApi.Command.Client.UpdateUser.html": {
    "href": "api/UserApi.Command.Client.UpdateUser.html",
    "title": "Namespace UserApi.Command.Client.UpdateUser | ELibrary",
    "keywords": "Namespace UserApi.Command.Client.UpdateUser Classes UpdateUserCommand UpdateUserCommandHandler"
  },
  "api/UserApi.Configuration.html": {
    "href": "api/UserApi.Configuration.html",
    "title": "Class Configuration | ELibrary",
    "keywords": "Class Configuration Namespace UserApi Assembly UserApi.dll public static class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AUTH_DATABASE_CONNECTION_STRING public static string AUTH_DATABASE_CONNECTION_STRING { get; } Property Value string AUTH_REFRESH_TOKEN_EXPIRY_IN_DAYS public static string AUTH_REFRESH_TOKEN_EXPIRY_IN_DAYS { get; } Property Value string EF_CREATE_DATABASE public static string EF_CREATE_DATABASE { get; } Property Value string"
  },
  "api/UserApi.Controllers.AuthController.html": {
    "href": "api/UserApi.Controllers.AuthController.html",
    "title": "Class AuthController | ELibrary",
    "keywords": "Class AuthController Namespace UserApi.Controllers Assembly UserApi.dll [Route(\"auth\")] [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IMediator) public AuthController(IMediator mediator) Parameters mediator IMediator Methods AdminRegister(AdminUserRegistrationRequest, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPost(\"admin/register\")] public Task<ActionResult<AdminUserResponse>> AdminRegister(AdminUserRegistrationRequest request, CancellationToken cancellationToken) Parameters request AdminUserRegistrationRequest cancellationToken CancellationToken Returns Task<ActionResult<AdminUserResponse>> GetOAuthUrl(GetOAuthUrlQueryParams, CancellationToken) [HttpGet(\"oauth\")] public Task<ActionResult<GetOAuthUrlResponse>> GetOAuthUrl(GetOAuthUrlQueryParams queryParams, CancellationToken cancellationToken) Parameters queryParams GetOAuthUrlQueryParams cancellationToken CancellationToken Returns Task<ActionResult<GetOAuthUrlResponse>> Login(UserAuthenticationRequest, CancellationToken) [HttpPost(\"login\")] public Task<ActionResult<UserAuthenticationResponse>> Login(UserAuthenticationRequest request, CancellationToken cancellationToken) Parameters request UserAuthenticationRequest cancellationToken CancellationToken Returns Task<ActionResult<UserAuthenticationResponse>> LoginOAuth(LoginOAuthRequest, CancellationToken) [HttpPost(\"oauth\")] public Task<ActionResult<UserAuthenticationResponse>> LoginOAuth(LoginOAuthRequest request, CancellationToken cancellationToken) Parameters request LoginOAuthRequest cancellationToken CancellationToken Returns Task<ActionResult<UserAuthenticationResponse>> Refresh(AuthToken, CancellationToken) [HttpPost(\"refresh\")] public Task<ActionResult<AuthToken>> Refresh(AuthToken request, CancellationToken cancellationToken) Parameters request AuthToken cancellationToken CancellationToken Returns Task<ActionResult<AuthToken>> Register(UserRegistrationRequest, CancellationToken) [HttpPost(\"register\")] public Task<ActionResult<UserAuthenticationResponse>> Register(UserRegistrationRequest request, CancellationToken cancellationToken) Parameters request UserRegistrationRequest cancellationToken CancellationToken Returns Task<ActionResult<UserAuthenticationResponse>>"
  },
  "api/UserApi.Controllers.UserController.html": {
    "href": "api/UserApi.Controllers.UserController.html",
    "title": "Class UserController | ELibrary",
    "keywords": "Class UserController Namespace UserApi.Controllers Assembly UserApi.dll [Route(\"user\")] [ApiController] public class UserController : ControllerBase Inheritance object ControllerBase UserController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserController(IMediator) public UserController(IMediator mediator) Parameters mediator IMediator Methods AdminDeleteUser(string, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpDelete(\"admin/delete/{info}\")] public Task<IActionResult> AdminDeleteUser(string info, CancellationToken cancellationToken) Parameters info string cancellationToken CancellationToken Returns Task<IActionResult> AdminGetPaginatedUserAmount(AdminGetUserFilter, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPost(\"admin/users/amount\")] public Task<ActionResult<int>> AdminGetPaginatedUserAmount(AdminGetUserFilter request, CancellationToken cancellationToken) Parameters request AdminGetUserFilter cancellationToken CancellationToken Returns Task<ActionResult<int>> AdminGetPaginatedUsers(AdminGetUserFilter, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPost(\"admin/users\")] public Task<ActionResult<IEnumerable<AdminUserResponse>>> AdminGetPaginatedUsers(AdminGetUserFilter request, CancellationToken cancellationToken) Parameters request AdminGetUserFilter cancellationToken CancellationToken Returns Task<ActionResult<IEnumerable<AdminUserResponse>>> AdminGetUser(string, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpGet(\"admin/users/{info}\")] public Task<ActionResult<AdminUserResponse>> AdminGetUser(string info, CancellationToken cancellationToken) Parameters info string cancellationToken CancellationToken Returns Task<ActionResult<AdminUserResponse>> AdminUpdate(AdminUserUpdateDataRequest, CancellationToken) [Authorize(Policy = \"RequireAdminRole\")] [HttpPut(\"admin/update\")] public Task<ActionResult<AdminUserResponse>> AdminUpdate(AdminUserUpdateDataRequest request, CancellationToken cancellationToken) Parameters request AdminUserUpdateDataRequest cancellationToken CancellationToken Returns Task<ActionResult<AdminUserResponse>> DeleteUser(CancellationToken) [Authorize(Policy = \"RequireClientRole\")] [HttpDelete] public Task<IActionResult> DeleteUser(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Returns Task<IActionResult> Update(UserUpdateDataRequest, CancellationToken) [Authorize(Policy = \"RequireClientRole\")] [HttpPut(\"update\")] public Task<IActionResult> Update(UserUpdateDataRequest request, CancellationToken cancellationToken) Parameters request UserUpdateDataRequest cancellationToken CancellationToken Returns Task<IActionResult>"
  },
  "api/UserApi.Controllers.html": {
    "href": "api/UserApi.Controllers.html",
    "title": "Namespace UserApi.Controllers | ELibrary",
    "keywords": "Namespace UserApi.Controllers Classes AuthController UserController"
  },
  "api/UserApi.Domain.Dtos.AdminGetUserFilter.html": {
    "href": "api/UserApi.Domain.Dtos.AdminGetUserFilter.html",
    "title": "Class AdminGetUserFilter | ELibrary",
    "keywords": "Class AdminGetUserFilter Namespace UserApi.Domain.Dtos Assembly UserApi.dll ContainsInfo - login, username, email, id, etc... public class AdminGetUserFilter : PaginationRequest Inheritance object PaginationRequest AdminGetUserFilter Inherited Members PaginationRequest.PageNumber PaginationRequest.PageSize object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContainsInfo public string? ContainsInfo { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.AuthToken.html": {
    "href": "api/UserApi.Domain.Dtos.AuthToken.html",
    "title": "Class AuthToken | ELibrary",
    "keywords": "Class AuthToken Namespace UserApi.Domain.Dtos Assembly UserApi.dll public class AuthToken Inheritance object AuthToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessToken public string? AccessToken { get; set; } Property Value string RefreshToken public string? RefreshToken { get; set; } Property Value string RefreshTokenExpiryDate public DateTime RefreshTokenExpiryDate { get; set; } Property Value DateTime"
  },
  "api/UserApi.Domain.Dtos.Requests.AdminUserRegistrationRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.AdminUserRegistrationRequest.html",
    "title": "Class AdminUserRegistrationRequest | ELibrary",
    "keywords": "Class AdminUserRegistrationRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class AdminUserRegistrationRequest Inheritance object AdminUserRegistrationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfirmPassword public string? ConfirmPassword { get; set; } Property Value string Email public string? Email { get; set; } Property Value string Password public string? Password { get; set; } Property Value string Roles public List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/UserApi.Domain.Dtos.Requests.AdminUserUpdateDataRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.AdminUserUpdateDataRequest.html",
    "title": "Class AdminUserUpdateDataRequest | ELibrary",
    "keywords": "Class AdminUserUpdateDataRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class AdminUserUpdateDataRequest Inheritance object AdminUserUpdateDataRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfirmPassword public string? ConfirmPassword { get; set; } Property Value string CurrentLogin public string? CurrentLogin { get; set; } Property Value string Email public string? Email { get; set; } Property Value string Password public string? Password { get; set; } Property Value string Roles public List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/UserApi.Domain.Dtos.Requests.GetOAuthUrlQueryParams.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.GetOAuthUrlQueryParams.html",
    "title": "Class GetOAuthUrlQueryParams | ELibrary",
    "keywords": "Class GetOAuthUrlQueryParams Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class GetOAuthUrlQueryParams Inheritance object GetOAuthUrlQueryParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CodeVerifier public string? CodeVerifier { get; set; } Property Value string OAuthLoginProvider public OAuthLoginProvider OAuthLoginProvider { get; set; } Property Value OAuthLoginProvider RedirectUrl public string? RedirectUrl { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Requests.LoginOAuthRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.LoginOAuthRequest.html",
    "title": "Class LoginOAuthRequest | ELibrary",
    "keywords": "Class LoginOAuthRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class LoginOAuthRequest Inheritance object LoginOAuthRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Code public string? Code { get; set; } Property Value string CodeVerifier public string? CodeVerifier { get; set; } Property Value string OAuthLoginProvider public OAuthLoginProvider OAuthLoginProvider { get; set; } Property Value OAuthLoginProvider RedirectUrl public string? RedirectUrl { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Requests.UserAuthenticationRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.UserAuthenticationRequest.html",
    "title": "Class UserAuthenticationRequest | ELibrary",
    "keywords": "Class UserAuthenticationRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class UserAuthenticationRequest Inheritance object UserAuthenticationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Login public string? Login { get; set; } Property Value string Password public string? Password { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Requests.UserRegistrationRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.UserRegistrationRequest.html",
    "title": "Class UserRegistrationRequest | ELibrary",
    "keywords": "Class UserRegistrationRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class UserRegistrationRequest Inheritance object UserRegistrationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfirmPassword public string? ConfirmPassword { get; set; } Property Value string Email public string? Email { get; set; } Property Value string Password public string? Password { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Requests.UserUpdateDataRequest.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.UserUpdateDataRequest.html",
    "title": "Class UserUpdateDataRequest | ELibrary",
    "keywords": "Class UserUpdateDataRequest Namespace UserApi.Domain.Dtos.Requests Assembly UserApi.dll public class UserUpdateDataRequest Inheritance object UserUpdateDataRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string? Email { get; set; } Property Value string OldPassword public string? OldPassword { get; set; } Property Value string Password public string? Password { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Requests.html": {
    "href": "api/UserApi.Domain.Dtos.Requests.html",
    "title": "Namespace UserApi.Domain.Dtos.Requests | ELibrary",
    "keywords": "Namespace UserApi.Domain.Dtos.Requests Classes AdminUserRegistrationRequest AdminUserUpdateDataRequest GetOAuthUrlQueryParams LoginOAuthRequest UserAuthenticationRequest UserRegistrationRequest UserUpdateDataRequest"
  },
  "api/UserApi.Domain.Dtos.Responses.AdminUserResponse.html": {
    "href": "api/UserApi.Domain.Dtos.Responses.AdminUserResponse.html",
    "title": "Class AdminUserResponse | ELibrary",
    "keywords": "Class AdminUserResponse Namespace UserApi.Domain.Dtos.Responses Assembly UserApi.dll public class AdminUserResponse Inheritance object AdminUserResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationMethods public List<AuthenticationMethod> AuthenticationMethods { get; set; } Property Value List<AuthenticationMethod> Email public string? Email { get; set; } Property Value string Id public string? Id { get; set; } Property Value string RegistredAtUtc public DateTime RegistredAtUtc { get; set; } Property Value DateTime Roles public List<string> Roles { get; set; } Property Value List<string> UpdatedAtUtc public DateTime UpdatedAtUtc { get; set; } Property Value DateTime UserName public string? UserName { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Responses.GetOAuthUrlResponse.html": {
    "href": "api/UserApi.Domain.Dtos.Responses.GetOAuthUrlResponse.html",
    "title": "Class GetOAuthUrlResponse | ELibrary",
    "keywords": "Class GetOAuthUrlResponse Namespace UserApi.Domain.Dtos.Responses Assembly UserApi.dll public class GetOAuthUrlResponse Inheritance object GetOAuthUrlResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Url public string? Url { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Dtos.Responses.UserAuthenticationResponse.html": {
    "href": "api/UserApi.Domain.Dtos.Responses.UserAuthenticationResponse.html",
    "title": "Class UserAuthenticationResponse | ELibrary",
    "keywords": "Class UserAuthenticationResponse Namespace UserApi.Domain.Dtos.Responses Assembly UserApi.dll public class UserAuthenticationResponse Inheritance object UserAuthenticationResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthToken public AuthToken? AuthToken { get; set; } Property Value AuthToken Email public string? Email { get; set; } Property Value string Roles public List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/UserApi.Domain.Dtos.Responses.html": {
    "href": "api/UserApi.Domain.Dtos.Responses.html",
    "title": "Namespace UserApi.Domain.Dtos.Responses | ELibrary",
    "keywords": "Namespace UserApi.Domain.Dtos.Responses Classes AdminUserResponse GetOAuthUrlResponse UserAuthenticationResponse"
  },
  "api/UserApi.Domain.Dtos.html": {
    "href": "api/UserApi.Domain.Dtos.html",
    "title": "Namespace UserApi.Domain.Dtos | ELibrary",
    "keywords": "Namespace UserApi.Domain.Dtos Classes AdminGetUserFilter ContainsInfo - login, username, email, id, etc... AuthToken"
  },
  "api/UserApi.Domain.Models.CreateUserFromOAuth.html": {
    "href": "api/UserApi.Domain.Models.CreateUserFromOAuth.html",
    "title": "Class CreateUserFromOAuth | ELibrary",
    "keywords": "Class CreateUserFromOAuth Namespace UserApi.Domain.Models Assembly UserApi.dll public class CreateUserFromOAuth Inheritance object CreateUserFromOAuth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthMethod public required AuthenticationMethod AuthMethod { get; set; } Property Value AuthenticationMethod Email public required string Email { get; set; } Property Value string LoginProviderSubject public required string LoginProviderSubject { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Models.UserUpdateData.html": {
    "href": "api/UserApi.Domain.Models.UserUpdateData.html",
    "title": "Class UserUpdateData | ELibrary",
    "keywords": "Class UserUpdateData Namespace UserApi.Domain.Models Assembly UserApi.dll public class UserUpdateData Inheritance object UserUpdateData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public string? Email { get; set; } Property Value string OldPassword public string? OldPassword { get; set; } Property Value string Password public string? Password { get; set; } Property Value string UserName public string? UserName { get; set; } Property Value string"
  },
  "api/UserApi.Domain.Models.html": {
    "href": "api/UserApi.Domain.Models.html",
    "title": "Namespace UserApi.Domain.Models | ELibrary",
    "keywords": "Namespace UserApi.Domain.Models Classes CreateUserFromOAuth UserUpdateData"
  },
  "api/UserApi.Migrations.InitialMigration.html": {
    "href": "api/UserApi.Migrations.InitialMigration.html",
    "title": "Class InitialMigration | ELibrary",
    "keywords": "Class InitialMigration Namespace UserApi.Migrations Assembly UserApi.dll A base class inherited by each EF Core migration. [DbContext(typeof(UserIdentityDbContext))] [Migration(\"20241024130709_InitialMigration\")] public class InitialMigration : Migration Inheritance object Migration InitialMigration Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/UserApi.Migrations.html": {
    "href": "api/UserApi.Migrations.html",
    "title": "Namespace UserApi.Migrations | ELibrary",
    "keywords": "Namespace UserApi.Migrations Classes InitialMigration A base class inherited by each EF Core migration."
  },
  "api/UserApi.Services.Auth.AuthService.html": {
    "href": "api/UserApi.Services.Auth.AuthService.html",
    "title": "Class AuthService | ELibrary",
    "keywords": "Class AuthService Namespace UserApi.Services.Auth Assembly UserApi.dll public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(UserManager<User>, ITokenService, IConfiguration) public AuthService(UserManager<User> userManager, ITokenService tokenService, IConfiguration configuration) Parameters userManager UserManager<User> tokenService ITokenService configuration IConfiguration Methods LoginUserAsync(LoginUserParams, CancellationToken) public Task<AccessTokenData> LoginUserAsync(LoginUserParams loginParams, CancellationToken cancellationToken) Parameters loginParams LoginUserParams cancellationToken CancellationToken Returns Task<AccessTokenData> RefreshTokenAsync(RefreshTokenParams, CancellationToken) public Task<AccessTokenData> RefreshTokenAsync(RefreshTokenParams refreshTokenParams, CancellationToken cancellationToken) Parameters refreshTokenParams RefreshTokenParams cancellationToken CancellationToken Returns Task<AccessTokenData> RegisterUserAsync(RegisterUserParams, CancellationToken) public Task<IdentityResult> RegisterUserAsync(RegisterUserParams registerParams, CancellationToken cancellationToken) Parameters registerParams RegisterUserParams cancellationToken CancellationToken Returns Task<IdentityResult>"
  },
  "api/UserApi.Services.Auth.IAuthService.html": {
    "href": "api/UserApi.Services.Auth.IAuthService.html",
    "title": "Interface IAuthService | ELibrary",
    "keywords": "Interface IAuthService Namespace UserApi.Services.Auth Assembly UserApi.dll public interface IAuthService Methods LoginUserAsync(LoginUserParams, CancellationToken) Task<AccessTokenData> LoginUserAsync(LoginUserParams loginParams, CancellationToken cancellationToken) Parameters loginParams LoginUserParams cancellationToken CancellationToken Returns Task<AccessTokenData> RefreshTokenAsync(RefreshTokenParams, CancellationToken) Task<AccessTokenData> RefreshTokenAsync(RefreshTokenParams refreshTokenParams, CancellationToken cancellationToken) Parameters refreshTokenParams RefreshTokenParams cancellationToken CancellationToken Returns Task<AccessTokenData> RegisterUserAsync(RegisterUserParams, CancellationToken) Task<IdentityResult> RegisterUserAsync(RegisterUserParams registerParams, CancellationToken cancellationToken) Parameters registerParams RegisterUserParams cancellationToken CancellationToken Returns Task<IdentityResult>"
  },
  "api/UserApi.Services.Auth.LoginUserParams.html": {
    "href": "api/UserApi.Services.Auth.LoginUserParams.html",
    "title": "Class LoginUserParams | ELibrary",
    "keywords": "Class LoginUserParams Namespace UserApi.Services.Auth Assembly UserApi.dll public record LoginUserParams : IEquatable<LoginUserParams> Inheritance object LoginUserParams Implements IEquatable<LoginUserParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginUserParams(User, string) public LoginUserParams(User User, string Password) Parameters User User Password string Properties Password public string Password { get; init; } Property Value string User public User User { get; init; } Property Value User"
  },
  "api/UserApi.Services.Auth.RefreshTokenParams.html": {
    "href": "api/UserApi.Services.Auth.RefreshTokenParams.html",
    "title": "Class RefreshTokenParams | ELibrary",
    "keywords": "Class RefreshTokenParams Namespace UserApi.Services.Auth Assembly UserApi.dll public record RefreshTokenParams : IEquatable<RefreshTokenParams> Inheritance object RefreshTokenParams Implements IEquatable<RefreshTokenParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RefreshTokenParams(User, AccessTokenData) public RefreshTokenParams(User User, AccessTokenData AccessTokenData) Parameters User User AccessTokenData AccessTokenData Properties AccessTokenData public AccessTokenData AccessTokenData { get; init; } Property Value AccessTokenData User public User User { get; init; } Property Value User"
  },
  "api/UserApi.Services.Auth.RegisterUserParams.html": {
    "href": "api/UserApi.Services.Auth.RegisterUserParams.html",
    "title": "Class RegisterUserParams | ELibrary",
    "keywords": "Class RegisterUserParams Namespace UserApi.Services.Auth Assembly UserApi.dll public record RegisterUserParams : IEquatable<RegisterUserParams> Inheritance object RegisterUserParams Implements IEquatable<RegisterUserParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterUserParams(User, string) public RegisterUserParams(User User, string Password) Parameters User User Password string Properties Password public string Password { get; init; } Property Value string User public User User { get; init; } Property Value User"
  },
  "api/UserApi.Services.Auth.html": {
    "href": "api/UserApi.Services.Auth.html",
    "title": "Namespace UserApi.Services.Auth | ELibrary",
    "keywords": "Namespace UserApi.Services.Auth Classes AuthService LoginUserParams RefreshTokenParams RegisterUserParams Interfaces IAuthService"
  },
  "api/UserApi.Services.ITokenService.html": {
    "href": "api/UserApi.Services.ITokenService.html",
    "title": "Interface ITokenService | ELibrary",
    "keywords": "Interface ITokenService Namespace UserApi.Services Assembly UserApi.dll public interface ITokenService Methods CreateNewTokenDataAsync(User, DateTime, CancellationToken) Task<AccessTokenData> CreateNewTokenDataAsync(User user, DateTime refreshTokenExpiryDate, CancellationToken cancellationToken) Parameters user User refreshTokenExpiryDate DateTime cancellationToken CancellationToken Returns Task<AccessTokenData> GetPrincipalFromToken(string) ClaimsPrincipal GetPrincipalFromToken(string token) Parameters token string Returns ClaimsPrincipal SetRefreshTokenAsync(User, AccessTokenData, CancellationToken) Task SetRefreshTokenAsync(User user, AccessTokenData accessTokenData, CancellationToken cancellationToken) Parameters user User accessTokenData AccessTokenData cancellationToken CancellationToken Returns Task"
  },
  "api/UserApi.Services.IUserAuthenticationMethodService.html": {
    "href": "api/UserApi.Services.IUserAuthenticationMethodService.html",
    "title": "Interface IUserAuthenticationMethodService | ELibrary",
    "keywords": "Interface IUserAuthenticationMethodService Namespace UserApi.Services Assembly UserApi.dll public interface IUserAuthenticationMethodService Methods GetUserAuthenticationMethodsAsync(User, CancellationToken) Task<List<AuthenticationMethod>> GetUserAuthenticationMethodsAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<List<AuthenticationMethod>> SetUserAuthenticationMethodAsync(User, AuthenticationMethod, CancellationToken) Task SetUserAuthenticationMethodAsync(User user, AuthenticationMethod method, CancellationToken cancellationToken) Parameters user User method AuthenticationMethod cancellationToken CancellationToken Returns Task"
  },
  "api/UserApi.Services.IUserService.html": {
    "href": "api/UserApi.Services.IUserService.html",
    "title": "Interface IUserService | ELibrary",
    "keywords": "Interface IUserService Namespace UserApi.Services Assembly UserApi.dll public interface IUserService Methods DeleteUserAsync(User, CancellationToken) Task<IdentityResult> DeleteUserAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<IdentityResult> GetPaginatedUsersAsync(AdminGetUserFilter, CancellationToken) Task<IEnumerable<User>> GetPaginatedUsersAsync(AdminGetUserFilter filter, CancellationToken cancellationToken) Parameters filter AdminGetUserFilter cancellationToken CancellationToken Returns Task<IEnumerable<User>> GetUserAsync(ClaimsPrincipal, CancellationToken) Task<User?> GetUserAsync(ClaimsPrincipal principal, CancellationToken cancellationToken) Parameters principal ClaimsPrincipal cancellationToken CancellationToken Returns Task<User> GetUserByLoginAsync(string, CancellationToken) Task<User?> GetUserByLoginAsync(string login, CancellationToken cancellationToken) Parameters login string cancellationToken CancellationToken Returns Task<User> GetUserRolesAsync(User, CancellationToken) Task<List<string>> GetUserRolesAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<List<string>> GetUserTotalAmountAsync(AdminGetUserFilter, CancellationToken) Task<int> GetUserTotalAmountAsync(AdminGetUserFilter filter, CancellationToken cancellationToken) Parameters filter AdminGetUserFilter cancellationToken CancellationToken Returns Task<int> SetUserRolesAsync(User, List<string>, CancellationToken) Task<List<IdentityError>> SetUserRolesAsync(User user, List<string> roles, CancellationToken cancellationToken) Parameters user User roles List<string> cancellationToken CancellationToken Returns Task<List<IdentityError>> UpdateUserAsync(User, UserUpdateData, bool, CancellationToken) Task<List<IdentityError>> UpdateUserAsync(User user, UserUpdateData updateData, bool resetPassword, CancellationToken cancellationToken) Parameters user User updateData UserUpdateData resetPassword bool cancellationToken CancellationToken Returns Task<List<IdentityError>>"
  },
  "api/UserApi.Services.OAuth.GenerateOAuthRequestUrlParams.html": {
    "href": "api/UserApi.Services.OAuth.GenerateOAuthRequestUrlParams.html",
    "title": "Class GenerateOAuthRequestUrlParams | ELibrary",
    "keywords": "Class GenerateOAuthRequestUrlParams Namespace UserApi.Services.OAuth Assembly UserApi.dll public record GenerateOAuthRequestUrlParams : IEquatable<GenerateOAuthRequestUrlParams> Inheritance object GenerateOAuthRequestUrlParams Implements IEquatable<GenerateOAuthRequestUrlParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenerateOAuthRequestUrlParams(string, string) public GenerateOAuthRequestUrlParams(string RedirectUrl, string CodeVerifier) Parameters RedirectUrl string CodeVerifier string Properties CodeVerifier public string CodeVerifier { get; init; } Property Value string RedirectUrl public string RedirectUrl { get; init; } Property Value string"
  },
  "api/UserApi.Services.OAuth.GetAccessOnCodeParams.html": {
    "href": "api/UserApi.Services.OAuth.GetAccessOnCodeParams.html",
    "title": "Class GetAccessOnCodeParams | ELibrary",
    "keywords": "Class GetAccessOnCodeParams Namespace UserApi.Services.OAuth Assembly UserApi.dll public record GetAccessOnCodeParams : IEquatable<GetAccessOnCodeParams> Inheritance object GetAccessOnCodeParams Implements IEquatable<GetAccessOnCodeParams> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetAccessOnCodeParams(string, string, string) public GetAccessOnCodeParams(string Code, string CodeVerifier, string RedirectUrl) Parameters Code string CodeVerifier string RedirectUrl string Properties Code public string Code { get; init; } Property Value string CodeVerifier public string CodeVerifier { get; init; } Property Value string RedirectUrl public string RedirectUrl { get; init; } Property Value string"
  },
  "api/UserApi.Services.OAuth.Google.GoogleOAuthHttpClient.html": {
    "href": "api/UserApi.Services.OAuth.Google.GoogleOAuthHttpClient.html",
    "title": "Class GoogleOAuthHttpClient | ELibrary",
    "keywords": "Class GoogleOAuthHttpClient Namespace UserApi.Services.OAuth.Google Assembly UserApi.dll public class GoogleOAuthHttpClient : IGoogleOAuthHttpClient Inheritance object GoogleOAuthHttpClient Implements IGoogleOAuthHttpClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GoogleOAuthHttpClient(GoogleOAuthSettings, IHttpHelper) public GoogleOAuthHttpClient(GoogleOAuthSettings oAuthSettings, IHttpHelper httpHelperService) Parameters oAuthSettings GoogleOAuthSettings httpHelperService IHttpHelper Methods ExchangeAuthorizationCodeAsync(string, string, string, CancellationToken) public Task<GoogleOAuthTokenResult?> ExchangeAuthorizationCodeAsync(string code, string codeVerifier, string redirectUrl, CancellationToken cancellationToken) Parameters code string codeVerifier string redirectUrl string cancellationToken CancellationToken Returns Task<GoogleOAuthTokenResult> GenerateOAuthRequestUrl(string, string, string) public string GenerateOAuthRequestUrl(string scope, string redirectUrl, string codeVerifier) Parameters scope string redirectUrl string codeVerifier string Returns string RefreshAccessTokenAsync(string, CancellationToken) public Task<GoogleOAuthTokenResult?> RefreshAccessTokenAsync(string refreshToken, CancellationToken cancellationToken) Parameters refreshToken string cancellationToken CancellationToken Returns Task<GoogleOAuthTokenResult>"
  },
  "api/UserApi.Services.OAuth.Google.GoogleOAuthService.html": {
    "href": "api/UserApi.Services.OAuth.Google.GoogleOAuthService.html",
    "title": "Class GoogleOAuthService | ELibrary",
    "keywords": "Class GoogleOAuthService Namespace UserApi.Services.OAuth.Google Assembly UserApi.dll public class GoogleOAuthService : IOAuthService Inheritance object GoogleOAuthService Implements IOAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GoogleOAuthService(IGoogleOAuthHttpClient, IUserOAuthCreationService, ITokenService, IGoogleTokenValidator, GoogleOAuthSettings, IConfiguration) public GoogleOAuthService(IGoogleOAuthHttpClient httpClient, IUserOAuthCreationService userOAuthCreation, ITokenService tokenService, IGoogleTokenValidator googleTokenValidator, GoogleOAuthSettings oAuthSettings, IConfiguration configuration) Parameters httpClient IGoogleOAuthHttpClient userOAuthCreation IUserOAuthCreationService tokenService ITokenService googleTokenValidator IGoogleTokenValidator oAuthSettings GoogleOAuthSettings configuration IConfiguration Methods GenerateOAuthRequestUrl(GenerateOAuthRequestUrlParams) public string GenerateOAuthRequestUrl(GenerateOAuthRequestUrlParams generateUrlParams) Parameters generateUrlParams GenerateOAuthRequestUrlParams Returns string GetAccessOnCodeAsync(GetAccessOnCodeParams, CancellationToken) public Task<AccessTokenData> GetAccessOnCodeAsync(GetAccessOnCodeParams accessOnCodeParams, CancellationToken cancellationToken) Parameters accessOnCodeParams GetAccessOnCodeParams cancellationToken CancellationToken Returns Task<AccessTokenData>"
  },
  "api/UserApi.Services.OAuth.Google.IGoogleOAuthHttpClient.html": {
    "href": "api/UserApi.Services.OAuth.Google.IGoogleOAuthHttpClient.html",
    "title": "Interface IGoogleOAuthHttpClient | ELibrary",
    "keywords": "Interface IGoogleOAuthHttpClient Namespace UserApi.Services.OAuth.Google Assembly UserApi.dll public interface IGoogleOAuthHttpClient Methods ExchangeAuthorizationCodeAsync(string, string, string, CancellationToken) Task<GoogleOAuthTokenResult?> ExchangeAuthorizationCodeAsync(string code, string codeVerifier, string redirectUrl, CancellationToken cancellationToken) Parameters code string codeVerifier string redirectUrl string cancellationToken CancellationToken Returns Task<GoogleOAuthTokenResult> GenerateOAuthRequestUrl(string, string, string) string GenerateOAuthRequestUrl(string scope, string redirectUrl, string codeVerifier) Parameters scope string redirectUrl string codeVerifier string Returns string RefreshAccessTokenAsync(string, CancellationToken) Task<GoogleOAuthTokenResult?> RefreshAccessTokenAsync(string refreshToken, CancellationToken cancellationToken) Parameters refreshToken string cancellationToken CancellationToken Returns Task<GoogleOAuthTokenResult>"
  },
  "api/UserApi.Services.OAuth.Google.html": {
    "href": "api/UserApi.Services.OAuth.Google.html",
    "title": "Namespace UserApi.Services.OAuth.Google | ELibrary",
    "keywords": "Namespace UserApi.Services.OAuth.Google Classes GoogleOAuthHttpClient GoogleOAuthService Interfaces IGoogleOAuthHttpClient"
  },
  "api/UserApi.Services.OAuth.IOAuthService.html": {
    "href": "api/UserApi.Services.OAuth.IOAuthService.html",
    "title": "Interface IOAuthService | ELibrary",
    "keywords": "Interface IOAuthService Namespace UserApi.Services.OAuth Assembly UserApi.dll public interface IOAuthService Methods GenerateOAuthRequestUrl(GenerateOAuthRequestUrlParams) string GenerateOAuthRequestUrl(GenerateOAuthRequestUrlParams generateUrlParams) Parameters generateUrlParams GenerateOAuthRequestUrlParams Returns string GetAccessOnCodeAsync(GetAccessOnCodeParams, CancellationToken) Task<AccessTokenData> GetAccessOnCodeAsync(GetAccessOnCodeParams accessOnCodeParams, CancellationToken cancellationToken) Parameters accessOnCodeParams GetAccessOnCodeParams cancellationToken CancellationToken Returns Task<AccessTokenData>"
  },
  "api/UserApi.Services.OAuth.IUserOAuthCreationService.html": {
    "href": "api/UserApi.Services.OAuth.IUserOAuthCreationService.html",
    "title": "Interface IUserOAuthCreationService | ELibrary",
    "keywords": "Interface IUserOAuthCreationService Namespace UserApi.Services.OAuth Assembly UserApi.dll public interface IUserOAuthCreationService Methods CreateUserFromOAuthAsync(CreateUserFromOAuth, CancellationToken) Task<User?> CreateUserFromOAuthAsync(CreateUserFromOAuth model, CancellationToken cancellationToken) Parameters model CreateUserFromOAuth cancellationToken CancellationToken Returns Task<User>"
  },
  "api/UserApi.Services.OAuth.UserOAuthCreationService.html": {
    "href": "api/UserApi.Services.OAuth.UserOAuthCreationService.html",
    "title": "Class UserOAuthCreationService | ELibrary",
    "keywords": "Class UserOAuthCreationService Namespace UserApi.Services.OAuth Assembly UserApi.dll public class UserOAuthCreationService : IUserOAuthCreationService Inheritance object UserOAuthCreationService Implements IUserOAuthCreationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserOAuthCreationService(UserManager<User>, IUserAuthenticationMethodService) public UserOAuthCreationService(UserManager<User> userManager, IUserAuthenticationMethodService authMethodService) Parameters userManager UserManager<User> authMethodService IUserAuthenticationMethodService Methods CreateUserFromOAuthAsync(CreateUserFromOAuth, CancellationToken) public Task<User?> CreateUserFromOAuthAsync(CreateUserFromOAuth model, CancellationToken cancellationToken) Parameters model CreateUserFromOAuth cancellationToken CancellationToken Returns Task<User>"
  },
  "api/UserApi.Services.OAuth.html": {
    "href": "api/UserApi.Services.OAuth.html",
    "title": "Namespace UserApi.Services.OAuth | ELibrary",
    "keywords": "Namespace UserApi.Services.OAuth Classes GenerateOAuthRequestUrlParams GetAccessOnCodeParams UserOAuthCreationService Interfaces IOAuthService IUserOAuthCreationService"
  },
  "api/UserApi.Services.TokenService.html": {
    "href": "api/UserApi.Services.TokenService.html",
    "title": "Class TokenService | ELibrary",
    "keywords": "Class TokenService Namespace UserApi.Services Assembly UserApi.dll public class TokenService : ITokenService Inheritance object TokenService Implements ITokenService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenService(ITokenHandler, UserManager<User>) public TokenService(ITokenHandler tokenHandler, UserManager<User> userManager) Parameters tokenHandler ITokenHandler userManager UserManager<User> Methods CreateNewTokenDataAsync(User, DateTime, CancellationToken) public Task<AccessTokenData> CreateNewTokenDataAsync(User user, DateTime refreshTokenExpiryDate, CancellationToken cancellationToken) Parameters user User refreshTokenExpiryDate DateTime cancellationToken CancellationToken Returns Task<AccessTokenData> GetPrincipalFromToken(string) public ClaimsPrincipal GetPrincipalFromToken(string token) Parameters token string Returns ClaimsPrincipal SetRefreshTokenAsync(User, AccessTokenData, CancellationToken) public Task SetRefreshTokenAsync(User user, AccessTokenData accessTokenData, CancellationToken cancellationToken) Parameters user User accessTokenData AccessTokenData cancellationToken CancellationToken Returns Task"
  },
  "api/UserApi.Services.UserAuthenticationMethodService.html": {
    "href": "api/UserApi.Services.UserAuthenticationMethodService.html",
    "title": "Class UserAuthenticationMethodService | ELibrary",
    "keywords": "Class UserAuthenticationMethodService Namespace UserApi.Services Assembly UserApi.dll public class UserAuthenticationMethodService : IUserAuthenticationMethodService Inheritance object UserAuthenticationMethodService Implements IUserAuthenticationMethodService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserAuthenticationMethodService(IDatabaseRepository<UserIdentityDbContext>) public UserAuthenticationMethodService(IDatabaseRepository<UserIdentityDbContext> databaseRepository) Parameters databaseRepository IDatabaseRepository<UserIdentityDbContext> Methods GetUserAuthenticationMethodsAsync(User, CancellationToken) public Task<List<AuthenticationMethod>> GetUserAuthenticationMethodsAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<List<AuthenticationMethod>> SetUserAuthenticationMethodAsync(User, AuthenticationMethod, CancellationToken) public Task SetUserAuthenticationMethodAsync(User user, AuthenticationMethod method, CancellationToken cancellationToken) Parameters user User method AuthenticationMethod cancellationToken CancellationToken Returns Task"
  },
  "api/UserApi.Services.UserService.html": {
    "href": "api/UserApi.Services.UserService.html",
    "title": "Class UserService | ELibrary",
    "keywords": "Class UserService Namespace UserApi.Services Assembly UserApi.dll public class UserService : IUserService Inheritance object UserService Implements IUserService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserService(UserManager<User>, RoleManager<IdentityRole>) public UserService(UserManager<User> userManager, RoleManager<IdentityRole> roleManager) Parameters userManager UserManager<User> roleManager RoleManager<IdentityRole> Methods DeleteUserAsync(User, CancellationToken) public Task<IdentityResult> DeleteUserAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<IdentityResult> GetPaginatedUsersAsync(AdminGetUserFilter, CancellationToken) public Task<IEnumerable<User>> GetPaginatedUsersAsync(AdminGetUserFilter filter, CancellationToken cancellationToken) Parameters filter AdminGetUserFilter cancellationToken CancellationToken Returns Task<IEnumerable<User>> GetUserAsync(ClaimsPrincipal, CancellationToken) public Task<User?> GetUserAsync(ClaimsPrincipal principal, CancellationToken cancellationToken) Parameters principal ClaimsPrincipal cancellationToken CancellationToken Returns Task<User> GetUserByLoginAsync(string, CancellationToken) public Task<User?> GetUserByLoginAsync(string login, CancellationToken cancellationToken) Parameters login string cancellationToken CancellationToken Returns Task<User> GetUserRolesAsync(User, CancellationToken) public Task<List<string>> GetUserRolesAsync(User user, CancellationToken cancellationToken) Parameters user User cancellationToken CancellationToken Returns Task<List<string>> GetUserTotalAmountAsync(AdminGetUserFilter, CancellationToken) public Task<int> GetUserTotalAmountAsync(AdminGetUserFilter filter, CancellationToken cancellationToken) Parameters filter AdminGetUserFilter cancellationToken CancellationToken Returns Task<int> SetUserRolesAsync(User, List<string>, CancellationToken) public Task<List<IdentityError>> SetUserRolesAsync(User user, List<string> roles, CancellationToken cancellationToken) Parameters user User roles List<string> cancellationToken CancellationToken Returns Task<List<IdentityError>> UpdateUserAsync(User, UserUpdateData, bool, CancellationToken) public Task<List<IdentityError>> UpdateUserAsync(User user, UserUpdateData updateData, bool resetPassword, CancellationToken cancellationToken) Parameters user User updateData UserUpdateData resetPassword bool cancellationToken CancellationToken Returns Task<List<IdentityError>>"
  },
  "api/UserApi.Services.html": {
    "href": "api/UserApi.Services.html",
    "title": "Namespace UserApi.Services | ELibrary",
    "keywords": "Namespace UserApi.Services Classes TokenService UserAuthenticationMethodService UserService Interfaces ITokenService IUserAuthenticationMethodService IUserService"
  },
  "api/UserApi.Utilities.html": {
    "href": "api/UserApi.Utilities.html",
    "title": "Class Utilities | ELibrary",
    "keywords": "Class Utilities Namespace UserApi Assembly UserApi.dll public static class Utilities Inheritance object Utilities Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasErrors(List<IdentityError>, out string[]) public static bool HasErrors(List<IdentityError> identityErrors, out string[] errorResponse) Parameters identityErrors List<IdentityError> errorResponse string[] Returns bool"
  },
  "api/UserApi.Validators.AccessTokenDataValidator.html": {
    "href": "api/UserApi.Validators.AccessTokenDataValidator.html",
    "title": "Class AccessTokenDataValidator | ELibrary",
    "keywords": "Class AccessTokenDataValidator Namespace UserApi.Validators Assembly UserApi.dll public class AccessTokenDataValidator : AbstractValidator<AccessTokenData>, IValidator<AccessTokenData>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AccessTokenData> AccessTokenDataValidator Implements IValidator<AccessTokenData> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AccessTokenData>.Validate(AccessTokenData) AbstractValidator<AccessTokenData>.ValidateAsync(AccessTokenData, CancellationToken) AbstractValidator<AccessTokenData>.Validate(ValidationContext<AccessTokenData>) AbstractValidator<AccessTokenData>.ValidateAsync(ValidationContext<AccessTokenData>, CancellationToken) AbstractValidator<AccessTokenData>.CreateDescriptor() AbstractValidator<AccessTokenData>.RuleFor<TProperty>(Expression<Func<AccessTokenData, TProperty>>) AbstractValidator<AccessTokenData>.Transform<TProperty, TTransformed>(Expression<Func<AccessTokenData, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AccessTokenData>.Transform<TProperty, TTransformed>(Expression<Func<AccessTokenData, TProperty>>, Func<AccessTokenData, TProperty, TTransformed>) AbstractValidator<AccessTokenData>.RuleForEach<TElement>(Expression<Func<AccessTokenData, IEnumerable<TElement>>>) AbstractValidator<AccessTokenData>.TransformForEach<TElement, TTransformed>(Expression<Func<AccessTokenData, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AccessTokenData>.TransformForEach<TElement, TTransformed>(Expression<Func<AccessTokenData, IEnumerable<TElement>>>, Func<AccessTokenData, TElement, TTransformed>) AbstractValidator<AccessTokenData>.RuleSet(string, Action) AbstractValidator<AccessTokenData>.When(Func<AccessTokenData, bool>, Action) AbstractValidator<AccessTokenData>.When(Func<AccessTokenData, ValidationContext<AccessTokenData>, bool>, Action) AbstractValidator<AccessTokenData>.Unless(Func<AccessTokenData, bool>, Action) AbstractValidator<AccessTokenData>.Unless(Func<AccessTokenData, ValidationContext<AccessTokenData>, bool>, Action) AbstractValidator<AccessTokenData>.WhenAsync(Func<AccessTokenData, CancellationToken, Task<bool>>, Action) AbstractValidator<AccessTokenData>.WhenAsync(Func<AccessTokenData, ValidationContext<AccessTokenData>, CancellationToken, Task<bool>>, Action) AbstractValidator<AccessTokenData>.UnlessAsync(Func<AccessTokenData, CancellationToken, Task<bool>>, Action) AbstractValidator<AccessTokenData>.UnlessAsync(Func<AccessTokenData, ValidationContext<AccessTokenData>, CancellationToken, Task<bool>>, Action) AbstractValidator<AccessTokenData>.Include(IValidator<AccessTokenData>) AbstractValidator<AccessTokenData>.Include<TValidator>(Func<AccessTokenData, TValidator>) AbstractValidator<AccessTokenData>.GetEnumerator() AbstractValidator<AccessTokenData>.EnsureInstanceNotNull(object) AbstractValidator<AccessTokenData>.PreValidate(ValidationContext<AccessTokenData>, ValidationResult) AbstractValidator<AccessTokenData>.RaiseValidationException(ValidationContext<AccessTokenData>, ValidationResult) AbstractValidator<AccessTokenData>.CascadeMode AbstractValidator<AccessTokenData>.ClassLevelCascadeMode AbstractValidator<AccessTokenData>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccessTokenDataValidator() public AccessTokenDataValidator()"
  },
  "api/UserApi.Validators.AdminGetUserFilterValidator.html": {
    "href": "api/UserApi.Validators.AdminGetUserFilterValidator.html",
    "title": "Class AdminGetUserFilterValidator | ELibrary",
    "keywords": "Class AdminGetUserFilterValidator Namespace UserApi.Validators Assembly UserApi.dll public class AdminGetUserFilterValidator : AbstractValidator<AdminGetUserFilter>, IValidator<AdminGetUserFilter>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AdminGetUserFilter> AdminGetUserFilterValidator Implements IValidator<AdminGetUserFilter> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AdminGetUserFilter>.Validate(AdminGetUserFilter) AbstractValidator<AdminGetUserFilter>.ValidateAsync(AdminGetUserFilter, CancellationToken) AbstractValidator<AdminGetUserFilter>.Validate(ValidationContext<AdminGetUserFilter>) AbstractValidator<AdminGetUserFilter>.ValidateAsync(ValidationContext<AdminGetUserFilter>, CancellationToken) AbstractValidator<AdminGetUserFilter>.CreateDescriptor() AbstractValidator<AdminGetUserFilter>.RuleFor<TProperty>(Expression<Func<AdminGetUserFilter, TProperty>>) AbstractValidator<AdminGetUserFilter>.Transform<TProperty, TTransformed>(Expression<Func<AdminGetUserFilter, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AdminGetUserFilter>.Transform<TProperty, TTransformed>(Expression<Func<AdminGetUserFilter, TProperty>>, Func<AdminGetUserFilter, TProperty, TTransformed>) AbstractValidator<AdminGetUserFilter>.RuleForEach<TElement>(Expression<Func<AdminGetUserFilter, IEnumerable<TElement>>>) AbstractValidator<AdminGetUserFilter>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminGetUserFilter, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AdminGetUserFilter>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminGetUserFilter, IEnumerable<TElement>>>, Func<AdminGetUserFilter, TElement, TTransformed>) AbstractValidator<AdminGetUserFilter>.RuleSet(string, Action) AbstractValidator<AdminGetUserFilter>.When(Func<AdminGetUserFilter, bool>, Action) AbstractValidator<AdminGetUserFilter>.When(Func<AdminGetUserFilter, ValidationContext<AdminGetUserFilter>, bool>, Action) AbstractValidator<AdminGetUserFilter>.Unless(Func<AdminGetUserFilter, bool>, Action) AbstractValidator<AdminGetUserFilter>.Unless(Func<AdminGetUserFilter, ValidationContext<AdminGetUserFilter>, bool>, Action) AbstractValidator<AdminGetUserFilter>.WhenAsync(Func<AdminGetUserFilter, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminGetUserFilter>.WhenAsync(Func<AdminGetUserFilter, ValidationContext<AdminGetUserFilter>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminGetUserFilter>.UnlessAsync(Func<AdminGetUserFilter, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminGetUserFilter>.UnlessAsync(Func<AdminGetUserFilter, ValidationContext<AdminGetUserFilter>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminGetUserFilter>.Include(IValidator<AdminGetUserFilter>) AbstractValidator<AdminGetUserFilter>.Include<TValidator>(Func<AdminGetUserFilter, TValidator>) AbstractValidator<AdminGetUserFilter>.GetEnumerator() AbstractValidator<AdminGetUserFilter>.EnsureInstanceNotNull(object) AbstractValidator<AdminGetUserFilter>.PreValidate(ValidationContext<AdminGetUserFilter>, ValidationResult) AbstractValidator<AdminGetUserFilter>.RaiseValidationException(ValidationContext<AdminGetUserFilter>, ValidationResult) AbstractValidator<AdminGetUserFilter>.CascadeMode AbstractValidator<AdminGetUserFilter>.ClassLevelCascadeMode AbstractValidator<AdminGetUserFilter>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminGetUserFilterValidator(PaginationOptions) public AdminGetUserFilterValidator(PaginationOptions paginationConfiguration) Parameters paginationConfiguration PaginationOptions"
  },
  "api/UserApi.Validators.AdminUserRegistrationRequestValidator.html": {
    "href": "api/UserApi.Validators.AdminUserRegistrationRequestValidator.html",
    "title": "Class AdminUserRegistrationRequestValidator | ELibrary",
    "keywords": "Class AdminUserRegistrationRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class AdminUserRegistrationRequestValidator : AbstractValidator<AdminUserRegistrationRequest>, IValidator<AdminUserRegistrationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AdminUserRegistrationRequest> AdminUserRegistrationRequestValidator Implements IValidator<AdminUserRegistrationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AdminUserRegistrationRequest>.Validate(AdminUserRegistrationRequest) AbstractValidator<AdminUserRegistrationRequest>.ValidateAsync(AdminUserRegistrationRequest, CancellationToken) AbstractValidator<AdminUserRegistrationRequest>.Validate(ValidationContext<AdminUserRegistrationRequest>) AbstractValidator<AdminUserRegistrationRequest>.ValidateAsync(ValidationContext<AdminUserRegistrationRequest>, CancellationToken) AbstractValidator<AdminUserRegistrationRequest>.CreateDescriptor() AbstractValidator<AdminUserRegistrationRequest>.RuleFor<TProperty>(Expression<Func<AdminUserRegistrationRequest, TProperty>>) AbstractValidator<AdminUserRegistrationRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdminUserRegistrationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AdminUserRegistrationRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdminUserRegistrationRequest, TProperty>>, Func<AdminUserRegistrationRequest, TProperty, TTransformed>) AbstractValidator<AdminUserRegistrationRequest>.RuleForEach<TElement>(Expression<Func<AdminUserRegistrationRequest, IEnumerable<TElement>>>) AbstractValidator<AdminUserRegistrationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminUserRegistrationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AdminUserRegistrationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminUserRegistrationRequest, IEnumerable<TElement>>>, Func<AdminUserRegistrationRequest, TElement, TTransformed>) AbstractValidator<AdminUserRegistrationRequest>.RuleSet(string, Action) AbstractValidator<AdminUserRegistrationRequest>.When(Func<AdminUserRegistrationRequest, bool>, Action) AbstractValidator<AdminUserRegistrationRequest>.When(Func<AdminUserRegistrationRequest, ValidationContext<AdminUserRegistrationRequest>, bool>, Action) AbstractValidator<AdminUserRegistrationRequest>.Unless(Func<AdminUserRegistrationRequest, bool>, Action) AbstractValidator<AdminUserRegistrationRequest>.Unless(Func<AdminUserRegistrationRequest, ValidationContext<AdminUserRegistrationRequest>, bool>, Action) AbstractValidator<AdminUserRegistrationRequest>.WhenAsync(Func<AdminUserRegistrationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserRegistrationRequest>.WhenAsync(Func<AdminUserRegistrationRequest, ValidationContext<AdminUserRegistrationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserRegistrationRequest>.UnlessAsync(Func<AdminUserRegistrationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserRegistrationRequest>.UnlessAsync(Func<AdminUserRegistrationRequest, ValidationContext<AdminUserRegistrationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserRegistrationRequest>.Include(IValidator<AdminUserRegistrationRequest>) AbstractValidator<AdminUserRegistrationRequest>.Include<TValidator>(Func<AdminUserRegistrationRequest, TValidator>) AbstractValidator<AdminUserRegistrationRequest>.GetEnumerator() AbstractValidator<AdminUserRegistrationRequest>.EnsureInstanceNotNull(object) AbstractValidator<AdminUserRegistrationRequest>.PreValidate(ValidationContext<AdminUserRegistrationRequest>, ValidationResult) AbstractValidator<AdminUserRegistrationRequest>.RaiseValidationException(ValidationContext<AdminUserRegistrationRequest>, ValidationResult) AbstractValidator<AdminUserRegistrationRequest>.CascadeMode AbstractValidator<AdminUserRegistrationRequest>.ClassLevelCascadeMode AbstractValidator<AdminUserRegistrationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminUserRegistrationRequestValidator() public AdminUserRegistrationRequestValidator()"
  },
  "api/UserApi.Validators.AdminUserUpdateDataRequestValidator.html": {
    "href": "api/UserApi.Validators.AdminUserUpdateDataRequestValidator.html",
    "title": "Class AdminUserUpdateDataRequestValidator | ELibrary",
    "keywords": "Class AdminUserUpdateDataRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class AdminUserUpdateDataRequestValidator : AbstractValidator<AdminUserUpdateDataRequest>, IValidator<AdminUserUpdateDataRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AdminUserUpdateDataRequest> AdminUserUpdateDataRequestValidator Implements IValidator<AdminUserUpdateDataRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AdminUserUpdateDataRequest>.Validate(AdminUserUpdateDataRequest) AbstractValidator<AdminUserUpdateDataRequest>.ValidateAsync(AdminUserUpdateDataRequest, CancellationToken) AbstractValidator<AdminUserUpdateDataRequest>.Validate(ValidationContext<AdminUserUpdateDataRequest>) AbstractValidator<AdminUserUpdateDataRequest>.ValidateAsync(ValidationContext<AdminUserUpdateDataRequest>, CancellationToken) AbstractValidator<AdminUserUpdateDataRequest>.CreateDescriptor() AbstractValidator<AdminUserUpdateDataRequest>.RuleFor<TProperty>(Expression<Func<AdminUserUpdateDataRequest, TProperty>>) AbstractValidator<AdminUserUpdateDataRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdminUserUpdateDataRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AdminUserUpdateDataRequest>.Transform<TProperty, TTransformed>(Expression<Func<AdminUserUpdateDataRequest, TProperty>>, Func<AdminUserUpdateDataRequest, TProperty, TTransformed>) AbstractValidator<AdminUserUpdateDataRequest>.RuleForEach<TElement>(Expression<Func<AdminUserUpdateDataRequest, IEnumerable<TElement>>>) AbstractValidator<AdminUserUpdateDataRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminUserUpdateDataRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AdminUserUpdateDataRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<AdminUserUpdateDataRequest, IEnumerable<TElement>>>, Func<AdminUserUpdateDataRequest, TElement, TTransformed>) AbstractValidator<AdminUserUpdateDataRequest>.RuleSet(string, Action) AbstractValidator<AdminUserUpdateDataRequest>.When(Func<AdminUserUpdateDataRequest, bool>, Action) AbstractValidator<AdminUserUpdateDataRequest>.When(Func<AdminUserUpdateDataRequest, ValidationContext<AdminUserUpdateDataRequest>, bool>, Action) AbstractValidator<AdminUserUpdateDataRequest>.Unless(Func<AdminUserUpdateDataRequest, bool>, Action) AbstractValidator<AdminUserUpdateDataRequest>.Unless(Func<AdminUserUpdateDataRequest, ValidationContext<AdminUserUpdateDataRequest>, bool>, Action) AbstractValidator<AdminUserUpdateDataRequest>.WhenAsync(Func<AdminUserUpdateDataRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserUpdateDataRequest>.WhenAsync(Func<AdminUserUpdateDataRequest, ValidationContext<AdminUserUpdateDataRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserUpdateDataRequest>.UnlessAsync(Func<AdminUserUpdateDataRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserUpdateDataRequest>.UnlessAsync(Func<AdminUserUpdateDataRequest, ValidationContext<AdminUserUpdateDataRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<AdminUserUpdateDataRequest>.Include(IValidator<AdminUserUpdateDataRequest>) AbstractValidator<AdminUserUpdateDataRequest>.Include<TValidator>(Func<AdminUserUpdateDataRequest, TValidator>) AbstractValidator<AdminUserUpdateDataRequest>.GetEnumerator() AbstractValidator<AdminUserUpdateDataRequest>.EnsureInstanceNotNull(object) AbstractValidator<AdminUserUpdateDataRequest>.PreValidate(ValidationContext<AdminUserUpdateDataRequest>, ValidationResult) AbstractValidator<AdminUserUpdateDataRequest>.RaiseValidationException(ValidationContext<AdminUserUpdateDataRequest>, ValidationResult) AbstractValidator<AdminUserUpdateDataRequest>.CascadeMode AbstractValidator<AdminUserUpdateDataRequest>.ClassLevelCascadeMode AbstractValidator<AdminUserUpdateDataRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AdminUserUpdateDataRequestValidator() public AdminUserUpdateDataRequestValidator()"
  },
  "api/UserApi.Validators.LoginOAuthRequestValidator.html": {
    "href": "api/UserApi.Validators.LoginOAuthRequestValidator.html",
    "title": "Class LoginOAuthRequestValidator | ELibrary",
    "keywords": "Class LoginOAuthRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class LoginOAuthRequestValidator : AbstractValidator<LoginOAuthRequest>, IValidator<LoginOAuthRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<LoginOAuthRequest> LoginOAuthRequestValidator Implements IValidator<LoginOAuthRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<LoginOAuthRequest>.Validate(LoginOAuthRequest) AbstractValidator<LoginOAuthRequest>.ValidateAsync(LoginOAuthRequest, CancellationToken) AbstractValidator<LoginOAuthRequest>.Validate(ValidationContext<LoginOAuthRequest>) AbstractValidator<LoginOAuthRequest>.ValidateAsync(ValidationContext<LoginOAuthRequest>, CancellationToken) AbstractValidator<LoginOAuthRequest>.CreateDescriptor() AbstractValidator<LoginOAuthRequest>.RuleFor<TProperty>(Expression<Func<LoginOAuthRequest, TProperty>>) AbstractValidator<LoginOAuthRequest>.Transform<TProperty, TTransformed>(Expression<Func<LoginOAuthRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<LoginOAuthRequest>.Transform<TProperty, TTransformed>(Expression<Func<LoginOAuthRequest, TProperty>>, Func<LoginOAuthRequest, TProperty, TTransformed>) AbstractValidator<LoginOAuthRequest>.RuleForEach<TElement>(Expression<Func<LoginOAuthRequest, IEnumerable<TElement>>>) AbstractValidator<LoginOAuthRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<LoginOAuthRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<LoginOAuthRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<LoginOAuthRequest, IEnumerable<TElement>>>, Func<LoginOAuthRequest, TElement, TTransformed>) AbstractValidator<LoginOAuthRequest>.RuleSet(string, Action) AbstractValidator<LoginOAuthRequest>.When(Func<LoginOAuthRequest, bool>, Action) AbstractValidator<LoginOAuthRequest>.When(Func<LoginOAuthRequest, ValidationContext<LoginOAuthRequest>, bool>, Action) AbstractValidator<LoginOAuthRequest>.Unless(Func<LoginOAuthRequest, bool>, Action) AbstractValidator<LoginOAuthRequest>.Unless(Func<LoginOAuthRequest, ValidationContext<LoginOAuthRequest>, bool>, Action) AbstractValidator<LoginOAuthRequest>.WhenAsync(Func<LoginOAuthRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<LoginOAuthRequest>.WhenAsync(Func<LoginOAuthRequest, ValidationContext<LoginOAuthRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<LoginOAuthRequest>.UnlessAsync(Func<LoginOAuthRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<LoginOAuthRequest>.UnlessAsync(Func<LoginOAuthRequest, ValidationContext<LoginOAuthRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<LoginOAuthRequest>.Include(IValidator<LoginOAuthRequest>) AbstractValidator<LoginOAuthRequest>.Include<TValidator>(Func<LoginOAuthRequest, TValidator>) AbstractValidator<LoginOAuthRequest>.GetEnumerator() AbstractValidator<LoginOAuthRequest>.EnsureInstanceNotNull(object) AbstractValidator<LoginOAuthRequest>.PreValidate(ValidationContext<LoginOAuthRequest>, ValidationResult) AbstractValidator<LoginOAuthRequest>.RaiseValidationException(ValidationContext<LoginOAuthRequest>, ValidationResult) AbstractValidator<LoginOAuthRequest>.CascadeMode AbstractValidator<LoginOAuthRequest>.ClassLevelCascadeMode AbstractValidator<LoginOAuthRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LoginOAuthRequestValidator() public LoginOAuthRequestValidator()"
  },
  "api/UserApi.Validators.OAuthGetUrlQueryParamsValidator.html": {
    "href": "api/UserApi.Validators.OAuthGetUrlQueryParamsValidator.html",
    "title": "Class OAuthGetUrlQueryParamsValidator | ELibrary",
    "keywords": "Class OAuthGetUrlQueryParamsValidator Namespace UserApi.Validators Assembly UserApi.dll public class OAuthGetUrlQueryParamsValidator : AbstractValidator<GetOAuthUrlQueryParams>, IValidator<GetOAuthUrlQueryParams>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<GetOAuthUrlQueryParams> OAuthGetUrlQueryParamsValidator Implements IValidator<GetOAuthUrlQueryParams> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<GetOAuthUrlQueryParams>.Validate(GetOAuthUrlQueryParams) AbstractValidator<GetOAuthUrlQueryParams>.ValidateAsync(GetOAuthUrlQueryParams, CancellationToken) AbstractValidator<GetOAuthUrlQueryParams>.Validate(ValidationContext<GetOAuthUrlQueryParams>) AbstractValidator<GetOAuthUrlQueryParams>.ValidateAsync(ValidationContext<GetOAuthUrlQueryParams>, CancellationToken) AbstractValidator<GetOAuthUrlQueryParams>.CreateDescriptor() AbstractValidator<GetOAuthUrlQueryParams>.RuleFor<TProperty>(Expression<Func<GetOAuthUrlQueryParams, TProperty>>) AbstractValidator<GetOAuthUrlQueryParams>.Transform<TProperty, TTransformed>(Expression<Func<GetOAuthUrlQueryParams, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<GetOAuthUrlQueryParams>.Transform<TProperty, TTransformed>(Expression<Func<GetOAuthUrlQueryParams, TProperty>>, Func<GetOAuthUrlQueryParams, TProperty, TTransformed>) AbstractValidator<GetOAuthUrlQueryParams>.RuleForEach<TElement>(Expression<Func<GetOAuthUrlQueryParams, IEnumerable<TElement>>>) AbstractValidator<GetOAuthUrlQueryParams>.TransformForEach<TElement, TTransformed>(Expression<Func<GetOAuthUrlQueryParams, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<GetOAuthUrlQueryParams>.TransformForEach<TElement, TTransformed>(Expression<Func<GetOAuthUrlQueryParams, IEnumerable<TElement>>>, Func<GetOAuthUrlQueryParams, TElement, TTransformed>) AbstractValidator<GetOAuthUrlQueryParams>.RuleSet(string, Action) AbstractValidator<GetOAuthUrlQueryParams>.When(Func<GetOAuthUrlQueryParams, bool>, Action) AbstractValidator<GetOAuthUrlQueryParams>.When(Func<GetOAuthUrlQueryParams, ValidationContext<GetOAuthUrlQueryParams>, bool>, Action) AbstractValidator<GetOAuthUrlQueryParams>.Unless(Func<GetOAuthUrlQueryParams, bool>, Action) AbstractValidator<GetOAuthUrlQueryParams>.Unless(Func<GetOAuthUrlQueryParams, ValidationContext<GetOAuthUrlQueryParams>, bool>, Action) AbstractValidator<GetOAuthUrlQueryParams>.WhenAsync(Func<GetOAuthUrlQueryParams, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOAuthUrlQueryParams>.WhenAsync(Func<GetOAuthUrlQueryParams, ValidationContext<GetOAuthUrlQueryParams>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOAuthUrlQueryParams>.UnlessAsync(Func<GetOAuthUrlQueryParams, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOAuthUrlQueryParams>.UnlessAsync(Func<GetOAuthUrlQueryParams, ValidationContext<GetOAuthUrlQueryParams>, CancellationToken, Task<bool>>, Action) AbstractValidator<GetOAuthUrlQueryParams>.Include(IValidator<GetOAuthUrlQueryParams>) AbstractValidator<GetOAuthUrlQueryParams>.Include<TValidator>(Func<GetOAuthUrlQueryParams, TValidator>) AbstractValidator<GetOAuthUrlQueryParams>.GetEnumerator() AbstractValidator<GetOAuthUrlQueryParams>.EnsureInstanceNotNull(object) AbstractValidator<GetOAuthUrlQueryParams>.PreValidate(ValidationContext<GetOAuthUrlQueryParams>, ValidationResult) AbstractValidator<GetOAuthUrlQueryParams>.RaiseValidationException(ValidationContext<GetOAuthUrlQueryParams>, ValidationResult) AbstractValidator<GetOAuthUrlQueryParams>.CascadeMode AbstractValidator<GetOAuthUrlQueryParams>.ClassLevelCascadeMode AbstractValidator<GetOAuthUrlQueryParams>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OAuthGetUrlQueryParamsValidator() public OAuthGetUrlQueryParamsValidator()"
  },
  "api/UserApi.Validators.UserAuthenticationRequestValidator.html": {
    "href": "api/UserApi.Validators.UserAuthenticationRequestValidator.html",
    "title": "Class UserAuthenticationRequestValidator | ELibrary",
    "keywords": "Class UserAuthenticationRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class UserAuthenticationRequestValidator : AbstractValidator<UserAuthenticationRequest>, IValidator<UserAuthenticationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UserAuthenticationRequest> UserAuthenticationRequestValidator Implements IValidator<UserAuthenticationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UserAuthenticationRequest>.Validate(UserAuthenticationRequest) AbstractValidator<UserAuthenticationRequest>.ValidateAsync(UserAuthenticationRequest, CancellationToken) AbstractValidator<UserAuthenticationRequest>.Validate(ValidationContext<UserAuthenticationRequest>) AbstractValidator<UserAuthenticationRequest>.ValidateAsync(ValidationContext<UserAuthenticationRequest>, CancellationToken) AbstractValidator<UserAuthenticationRequest>.CreateDescriptor() AbstractValidator<UserAuthenticationRequest>.RuleFor<TProperty>(Expression<Func<UserAuthenticationRequest, TProperty>>) AbstractValidator<UserAuthenticationRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserAuthenticationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UserAuthenticationRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserAuthenticationRequest, TProperty>>, Func<UserAuthenticationRequest, TProperty, TTransformed>) AbstractValidator<UserAuthenticationRequest>.RuleForEach<TElement>(Expression<Func<UserAuthenticationRequest, IEnumerable<TElement>>>) AbstractValidator<UserAuthenticationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserAuthenticationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UserAuthenticationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserAuthenticationRequest, IEnumerable<TElement>>>, Func<UserAuthenticationRequest, TElement, TTransformed>) AbstractValidator<UserAuthenticationRequest>.RuleSet(string, Action) AbstractValidator<UserAuthenticationRequest>.When(Func<UserAuthenticationRequest, bool>, Action) AbstractValidator<UserAuthenticationRequest>.When(Func<UserAuthenticationRequest, ValidationContext<UserAuthenticationRequest>, bool>, Action) AbstractValidator<UserAuthenticationRequest>.Unless(Func<UserAuthenticationRequest, bool>, Action) AbstractValidator<UserAuthenticationRequest>.Unless(Func<UserAuthenticationRequest, ValidationContext<UserAuthenticationRequest>, bool>, Action) AbstractValidator<UserAuthenticationRequest>.WhenAsync(Func<UserAuthenticationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserAuthenticationRequest>.WhenAsync(Func<UserAuthenticationRequest, ValidationContext<UserAuthenticationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserAuthenticationRequest>.UnlessAsync(Func<UserAuthenticationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserAuthenticationRequest>.UnlessAsync(Func<UserAuthenticationRequest, ValidationContext<UserAuthenticationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserAuthenticationRequest>.Include(IValidator<UserAuthenticationRequest>) AbstractValidator<UserAuthenticationRequest>.Include<TValidator>(Func<UserAuthenticationRequest, TValidator>) AbstractValidator<UserAuthenticationRequest>.GetEnumerator() AbstractValidator<UserAuthenticationRequest>.EnsureInstanceNotNull(object) AbstractValidator<UserAuthenticationRequest>.PreValidate(ValidationContext<UserAuthenticationRequest>, ValidationResult) AbstractValidator<UserAuthenticationRequest>.RaiseValidationException(ValidationContext<UserAuthenticationRequest>, ValidationResult) AbstractValidator<UserAuthenticationRequest>.CascadeMode AbstractValidator<UserAuthenticationRequest>.ClassLevelCascadeMode AbstractValidator<UserAuthenticationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserAuthenticationRequestValidator() public UserAuthenticationRequestValidator()"
  },
  "api/UserApi.Validators.UserRegistrationRequestValidator.html": {
    "href": "api/UserApi.Validators.UserRegistrationRequestValidator.html",
    "title": "Class UserRegistrationRequestValidator | ELibrary",
    "keywords": "Class UserRegistrationRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class UserRegistrationRequestValidator : AbstractValidator<UserRegistrationRequest>, IValidator<UserRegistrationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UserRegistrationRequest> UserRegistrationRequestValidator Implements IValidator<UserRegistrationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UserRegistrationRequest>.Validate(UserRegistrationRequest) AbstractValidator<UserRegistrationRequest>.ValidateAsync(UserRegistrationRequest, CancellationToken) AbstractValidator<UserRegistrationRequest>.Validate(ValidationContext<UserRegistrationRequest>) AbstractValidator<UserRegistrationRequest>.ValidateAsync(ValidationContext<UserRegistrationRequest>, CancellationToken) AbstractValidator<UserRegistrationRequest>.CreateDescriptor() AbstractValidator<UserRegistrationRequest>.RuleFor<TProperty>(Expression<Func<UserRegistrationRequest, TProperty>>) AbstractValidator<UserRegistrationRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserRegistrationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UserRegistrationRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserRegistrationRequest, TProperty>>, Func<UserRegistrationRequest, TProperty, TTransformed>) AbstractValidator<UserRegistrationRequest>.RuleForEach<TElement>(Expression<Func<UserRegistrationRequest, IEnumerable<TElement>>>) AbstractValidator<UserRegistrationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserRegistrationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UserRegistrationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserRegistrationRequest, IEnumerable<TElement>>>, Func<UserRegistrationRequest, TElement, TTransformed>) AbstractValidator<UserRegistrationRequest>.RuleSet(string, Action) AbstractValidator<UserRegistrationRequest>.When(Func<UserRegistrationRequest, bool>, Action) AbstractValidator<UserRegistrationRequest>.When(Func<UserRegistrationRequest, ValidationContext<UserRegistrationRequest>, bool>, Action) AbstractValidator<UserRegistrationRequest>.Unless(Func<UserRegistrationRequest, bool>, Action) AbstractValidator<UserRegistrationRequest>.Unless(Func<UserRegistrationRequest, ValidationContext<UserRegistrationRequest>, bool>, Action) AbstractValidator<UserRegistrationRequest>.WhenAsync(Func<UserRegistrationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserRegistrationRequest>.WhenAsync(Func<UserRegistrationRequest, ValidationContext<UserRegistrationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserRegistrationRequest>.UnlessAsync(Func<UserRegistrationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserRegistrationRequest>.UnlessAsync(Func<UserRegistrationRequest, ValidationContext<UserRegistrationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserRegistrationRequest>.Include(IValidator<UserRegistrationRequest>) AbstractValidator<UserRegistrationRequest>.Include<TValidator>(Func<UserRegistrationRequest, TValidator>) AbstractValidator<UserRegistrationRequest>.GetEnumerator() AbstractValidator<UserRegistrationRequest>.EnsureInstanceNotNull(object) AbstractValidator<UserRegistrationRequest>.PreValidate(ValidationContext<UserRegistrationRequest>, ValidationResult) AbstractValidator<UserRegistrationRequest>.RaiseValidationException(ValidationContext<UserRegistrationRequest>, ValidationResult) AbstractValidator<UserRegistrationRequest>.CascadeMode AbstractValidator<UserRegistrationRequest>.ClassLevelCascadeMode AbstractValidator<UserRegistrationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserRegistrationRequestValidator() public UserRegistrationRequestValidator()"
  },
  "api/UserApi.Validators.UserUpdateDataRequestValidator.html": {
    "href": "api/UserApi.Validators.UserUpdateDataRequestValidator.html",
    "title": "Class UserUpdateDataRequestValidator | ELibrary",
    "keywords": "Class UserUpdateDataRequestValidator Namespace UserApi.Validators Assembly UserApi.dll public class UserUpdateDataRequestValidator : AbstractValidator<UserUpdateDataRequest>, IValidator<UserUpdateDataRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<UserUpdateDataRequest> UserUpdateDataRequestValidator Implements IValidator<UserUpdateDataRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<UserUpdateDataRequest>.Validate(UserUpdateDataRequest) AbstractValidator<UserUpdateDataRequest>.ValidateAsync(UserUpdateDataRequest, CancellationToken) AbstractValidator<UserUpdateDataRequest>.Validate(ValidationContext<UserUpdateDataRequest>) AbstractValidator<UserUpdateDataRequest>.ValidateAsync(ValidationContext<UserUpdateDataRequest>, CancellationToken) AbstractValidator<UserUpdateDataRequest>.CreateDescriptor() AbstractValidator<UserUpdateDataRequest>.RuleFor<TProperty>(Expression<Func<UserUpdateDataRequest, TProperty>>) AbstractValidator<UserUpdateDataRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserUpdateDataRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<UserUpdateDataRequest>.Transform<TProperty, TTransformed>(Expression<Func<UserUpdateDataRequest, TProperty>>, Func<UserUpdateDataRequest, TProperty, TTransformed>) AbstractValidator<UserUpdateDataRequest>.RuleForEach<TElement>(Expression<Func<UserUpdateDataRequest, IEnumerable<TElement>>>) AbstractValidator<UserUpdateDataRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserUpdateDataRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<UserUpdateDataRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<UserUpdateDataRequest, IEnumerable<TElement>>>, Func<UserUpdateDataRequest, TElement, TTransformed>) AbstractValidator<UserUpdateDataRequest>.RuleSet(string, Action) AbstractValidator<UserUpdateDataRequest>.When(Func<UserUpdateDataRequest, bool>, Action) AbstractValidator<UserUpdateDataRequest>.When(Func<UserUpdateDataRequest, ValidationContext<UserUpdateDataRequest>, bool>, Action) AbstractValidator<UserUpdateDataRequest>.Unless(Func<UserUpdateDataRequest, bool>, Action) AbstractValidator<UserUpdateDataRequest>.Unless(Func<UserUpdateDataRequest, ValidationContext<UserUpdateDataRequest>, bool>, Action) AbstractValidator<UserUpdateDataRequest>.WhenAsync(Func<UserUpdateDataRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserUpdateDataRequest>.WhenAsync(Func<UserUpdateDataRequest, ValidationContext<UserUpdateDataRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserUpdateDataRequest>.UnlessAsync(Func<UserUpdateDataRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<UserUpdateDataRequest>.UnlessAsync(Func<UserUpdateDataRequest, ValidationContext<UserUpdateDataRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<UserUpdateDataRequest>.Include(IValidator<UserUpdateDataRequest>) AbstractValidator<UserUpdateDataRequest>.Include<TValidator>(Func<UserUpdateDataRequest, TValidator>) AbstractValidator<UserUpdateDataRequest>.GetEnumerator() AbstractValidator<UserUpdateDataRequest>.EnsureInstanceNotNull(object) AbstractValidator<UserUpdateDataRequest>.PreValidate(ValidationContext<UserUpdateDataRequest>, ValidationResult) AbstractValidator<UserUpdateDataRequest>.RaiseValidationException(ValidationContext<UserUpdateDataRequest>, ValidationResult) AbstractValidator<UserUpdateDataRequest>.CascadeMode AbstractValidator<UserUpdateDataRequest>.ClassLevelCascadeMode AbstractValidator<UserUpdateDataRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserUpdateDataRequestValidator() public UserUpdateDataRequestValidator()"
  },
  "api/UserApi.Validators.html": {
    "href": "api/UserApi.Validators.html",
    "title": "Namespace UserApi.Validators | ELibrary",
    "keywords": "Namespace UserApi.Validators Classes AccessTokenDataValidator AdminGetUserFilterValidator AdminUserRegistrationRequestValidator AdminUserUpdateDataRequestValidator LoginOAuthRequestValidator OAuthGetUrlQueryParamsValidator UserAuthenticationRequestValidator UserRegistrationRequestValidator UserUpdateDataRequestValidator"
  },
  "api/UserApi.html": {
    "href": "api/UserApi.html",
    "title": "Namespace UserApi | ELibrary",
    "keywords": "Namespace UserApi Classes AutoMapperProfile Configuration Utilities"
  },
  "api/UserEntities.Data.UserIdentityDbContext.html": {
    "href": "api/UserEntities.Data.UserIdentityDbContext.html",
    "title": "Class UserIdentityDbContext | ELibrary",
    "keywords": "Class UserIdentityDbContext Namespace UserEntities.Data Assembly UserEntities.dll public class UserIdentityDbContext : IdentityDbContext<User>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>> IdentityDbContext<User, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>> IdentityDbContext<User, IdentityRole, string> IdentityDbContext<User> UserIdentityDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<User, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityDbContext<User, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.UserRoles IdentityDbContext<User, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.Roles IdentityDbContext<User, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.RoleClaims IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.Users IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserClaims IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserLogins IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserTokens IdentityUserContext<User, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserIdentityDbContext(DbContextOptions) public UserIdentityDbContext(DbContextOptions options) Parameters options DbContextOptions Properties UserAuthenticationMethods public virtual DbSet<UserAuthenticationMethod> UserAuthenticationMethods { get; set; } Property Value DbSet<UserAuthenticationMethod> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder builder) Parameters builder ModelBuilder The builder being used to construct the model for this context. SaveChangesAsync(CancellationToken) Saves all changes made in this context to the database. public override Task<int> SaveChangesAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken A CancellationToken to observe while waiting for the task to complete. Returns Task<int> A task that represents the asynchronous save operation. The task result contains the number of state entries written to the database. Remarks This method will automatically call DetectChanges() to discover any changes to entity instances before saving to the underlying database. This can be disabled via AutoDetectChangesEnabled. Entity Framework Core does not support multiple parallel operations being run on the same DbContext instance. This includes both parallel execution of async queries and any explicit concurrent use from multiple threads. Therefore, always await async calls immediately, or use separate DbContext instances for operations that execute in parallel. See Avoiding DbContext threading issues for more information and examples. See Saving data in EF Core for more information and examples. Exceptions DbUpdateException An error is encountered while saving to the database. DbUpdateConcurrencyException A concurrency violation is encountered while saving to the database. A concurrency violation occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has been modified since it was loaded into memory. OperationCanceledException If the CancellationToken is canceled."
  },
  "api/UserEntities.Data.html": {
    "href": "api/UserEntities.Data.html",
    "title": "Namespace UserEntities.Data | ELibrary",
    "keywords": "Namespace UserEntities.Data Classes UserIdentityDbContext"
  },
  "api/UserEntities.Domain.Entities.AuthenticationMethod.html": {
    "href": "api/UserEntities.Domain.Entities.AuthenticationMethod.html",
    "title": "Enum AuthenticationMethod | ELibrary",
    "keywords": "Enum AuthenticationMethod Namespace UserEntities.Domain.Entities Assembly UserEntities.dll public enum AuthenticationMethod Fields BaseAuthentication = 0 GoogleOAuth = 1"
  },
  "api/UserEntities.Domain.Entities.User.html": {
    "href": "api/UserEntities.Domain.Entities.User.html",
    "title": "Class User | ELibrary",
    "keywords": "Class User Namespace UserEntities.Domain.Entities Assembly UserEntities.dll [Index(\"Email\", new string[] { }, IsUnique = true)] public class User : IdentityUser Inheritance object IdentityUser<string> IdentityUser User Inherited Members IdentityUser<string>.ToString() IdentityUser<string>.Id IdentityUser<string>.UserName IdentityUser<string>.NormalizedUserName IdentityUser<string>.Email IdentityUser<string>.NormalizedEmail IdentityUser<string>.EmailConfirmed IdentityUser<string>.PasswordHash IdentityUser<string>.SecurityStamp IdentityUser<string>.ConcurrencyStamp IdentityUser<string>.PhoneNumber IdentityUser<string>.PhoneNumberConfirmed IdentityUser<string>.TwoFactorEnabled IdentityUser<string>.LockoutEnd IdentityUser<string>.LockoutEnabled IdentityUser<string>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties AuthenticationMethods [Required] public List<UserAuthenticationMethod> AuthenticationMethods { get; set; } Property Value List<UserAuthenticationMethod> RefreshToken [MaxLength(100)] public string? RefreshToken { get; set; } Property Value string RefreshTokenExpiryTime public DateTime? RefreshTokenExpiryTime { get; set; } Property Value DateTime? RegistredAtUtc [Required] public DateTime RegistredAtUtc { get; set; } Property Value DateTime UpdatedAtUtc [Required] public DateTime UpdatedAtUtc { get; set; } Property Value DateTime"
  },
  "api/UserEntities.Domain.Entities.UserAuthenticationMethod.html": {
    "href": "api/UserEntities.Domain.Entities.UserAuthenticationMethod.html",
    "title": "Class UserAuthenticationMethod | ELibrary",
    "keywords": "Class UserAuthenticationMethod Namespace UserEntities.Domain.Entities Assembly UserEntities.dll [Index(\"UserId\", new string[] { \"AuthenticationMethod\" }, IsUnique = true)] public class UserAuthenticationMethod Inheritance object UserAuthenticationMethod Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AuthenticationMethod public AuthenticationMethod AuthenticationMethod { get; set; } Property Value AuthenticationMethod User public User User { get; set; } Property Value User UserId [Required] public string UserId { get; set; } Property Value string"
  },
  "api/UserEntities.Domain.Entities.html": {
    "href": "api/UserEntities.Domain.Entities.html",
    "title": "Namespace UserEntities.Domain.Entities | ELibrary",
    "keywords": "Namespace UserEntities.Domain.Entities Classes User UserAuthenticationMethod Enums AuthenticationMethod"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "| ELibrary",
    "keywords": "Getting Started Prerequisites Before you begin, ensure you have the following installed on your machine: Docker: For building and running containers. Install Docker. Minikube: A lightweight Kubernetes implementation for local testing. Install Minikube. kubectl: Kubernetes command-line tool to manage clusters. Install kubectl. Kubernetes / Minikube Setup Clone the repository: git clone https://github.com/TEGTO/ELibrary.git Navigate into the Kubernetes folder: cd ELibrary/k8/dev Start Minikube: Open a terminal in the folder and start Minikube: minikube start If Minikube is already running, ensure you’re in the correct context: kubectl config use-context minikube Optional: Enable Chat Service: If you want to use the optional chat service: Open the chatbot-conf.yml file. Set the OPENAI_API_KEY environment variable with your OpenAI API key. Deployment Steps Follow these steps in order: 1. Configure ConfigMaps and Secrets kubectl apply -f db-conf.yml kubectl apply -f backend-conf.yml kubectl apply -f chatbot-conf.yml # Optional 2. Deploy the Database Deploy the database and wait for it to be fully initialized: kubectl apply -f db.yml kubectl get pods # Verify that the database pod is running. 3. Deploy the Backend Deploy the backend services: kubectl apply -f backend.yml 4. Optional: Deploy the Chat Service kubectl apply -f chatbot.yml 5. Deploy the Frontend Deploy the frontend application: kubectl apply -f frontend.yml 6. Access the Frontend Expose and forward the frontend service using Minikube: minikube service frontend This command will open the frontend in your default web browser."
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "| ELibrary",
    "keywords": "Table of Contents Links Tech Stack Features Contributors Screenshots Links Here are the main links for accessing the ELibrary project and its documentation: Web Application: ELibrary Application Access the live version of the ELibrary application, deployed on Microsoft Azure. Backend Documentation: ELibrary Backend Docs Explore the backend's API documentation, generated with DocFX. Frontend Documentation: ELibrary Frontend Docs View the frontend documentation, generated with Compodoc. Tech Stack Frontend: Angular with NgRx for state management Backend: ASP.NET Core Web API Database: PostgreSQL with Entity Framework Core Authentication: JWT and OAuth 2.0 API Gateway: Ocelot for routing across microservices Resilience: Polly for retry policies and fault tolerance Containerization: Docker and Kubernetes CI/CD: GitHub Actions for automated workflows AI Integration: OpenAI’s GPT for recommendations Features ASP.NET Web API Backend: Built using ASP.NET Core, the backend provides a robust, RESTful API that supports a variety of CRUD operations and complex resource management. The application follows a “Code First” approach using Entity Framework Core with a PostgreSQL database, ensuring seamless database migrations and schema management. Angular Frontend with NgRx: The frontend is built with Angular, offering a dynamic and responsive user experience. It leverages NgRx (Redux pattern) for state management, making the codebase scalable and maintainable, even as the application grows. User Authentication: Implements secure user authentication and authorization through JWT-based tokens for session management, and supports OAuth 2.0 for seamless third-party integrations. API Gateway with Ocelot: An Ocelot API Gateway is used to route and manage requests between microservices, improving scalability and simplifying service management. This setup helps in optimizing requests and load balancing. Polly for Resilience: The Polly library is integrated to handle transient faults with retry policies, circuit breakers, and timeouts, improving application resilience and reliability under different conditions. OpenAI Integration for AI-powered Book Recommendations: Leveraging OpenAI’s GPT model, hosted on Azure, the application features an AI-based online consultant. The AI can provide personalized book recommendations by accessing real-time data from the database, enhancing user engagement. Containerization with Docker Compose: All services are containerized using Docker and managed via Docker Compose, ensuring consistent environments across development, testing, and production stages. Continuous Integration and Continuous Deployment (CI/CD): The project uses GitHub Actions for automated CI/CD pipelines, enabling seamless deployments to Azure. Testing is supported with NUnit and Test Containers to ensure reliability and code quality. Design Patterns: Incorporates various design patterns for better code organization and maintainability. This includes the Mediator pattern (via MediatR), which facilitates decoupled communication between services. Testing and Quality Assurance: Implements NUnit and Test Containers for unit and integration tests, ensuring that all components are thoroughly tested in isolated environments. Contributors Screenshots"
  },
  "index.html": {
    "href": "index.html",
    "title": "| ELibrary",
    "keywords": "Built with the tools and technologies: This is a full-stack web store application built with modern technologies, featuring an ASP.NET Web API backend, Angular frontend, and PostgreSQL database, all deployed on Azure. The application integrates AI from OpenAI, hosted on Azure, to provide book recommendations. It implements secure authentication with JWT and OAuth 2.0 and manages state on the frontend using the NgRx (Redux) pattern. For resilience, it leverages the Polly library, and employs various design patterns, including the Mediator pattern with MediatR. The project is containerized with Docker & Kubernetes and uses GitHub Actions for CI/CD, along with Nunit and Test Containers for testing."
  }
}